cscope 15 $HOME/Source/libmodbus-3.0.1/libmodbus/tests               0000347573
	@bandwidth-client.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<time.h
>

23 
	~<sys/time.h
>

24 
	~<î∫o.h
>

26 
	~<modbus.h
>

28 
	#G_MSEC_PER_SEC
 1000

	)

30 
uöt32_t
 
	$gëtime_ms
()

32 
timevÆ
 
tv
;

33 
	`gëtimeofday
 (&
tv
, 
NULL
);

35  (
uöt32_t
Ë
tv
.
tv_£c
 * 1000 +Åv.
tv_u£c
 / 1000;

36 
	}
}

39 
	mTCP
,

40 
	mRTU


44 
	$maö
(
¨gc
, *
¨gv
[])

46 
uöt8_t
 *
èb_bô
;

47 
uöt16_t
 *
èb_ªg
;

48 
modbus_t
 *
˘x
;

49 
i
;

50 
nb_poöts
;

51 
ñ≠£d
;

52 
uöt32_t
 
°¨t
;

53 
uöt32_t
 
íd
;

54 
uöt32_t
 
byãs
;

55 
uöt32_t
 
øã
;

56 
rc
;

57 
n_lo›
;

58 
u£_backíd
;

60 i‡(
¨gc
 > 1) {

61 i‡(
	`°rcmp
(
¨gv
[1], "tcp") == 0) {

62 
u£_backíd
 = 
TCP
;

63 
n_lo›
 = 100000;

64 } i‡(
	`°rcmp
(
¨gv
[1], "rtu") == 0) {

65 
u£_backíd
 = 
RTU
;

66 
n_lo›
 = 100;

68 
	`¥ötf
("Ußge:\¿ %†[t˝|πu] - Modbu†˛õ¡Åÿmósuª d©®b™dwôh\n\n", 
¨gv
[0]);

69 
	`exô
(1);

73 
u£_backíd
 = 
TCP
;

74 
n_lo›
 = 100000;

77 i‡(
u£_backíd
 =
TCP
) {

78 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

80 
˘x
 = 
	`modbus_√w_πu
("/dev/ttyUSB1", 115200, 'N', 8, 1);

81 
	`modbus_£t_¶ave
(
˘x
, 1);

83 i‡(
	`modbus_c⁄√˘
(
˘x
) == -1) {

84 
	`Ârötf
(
°dîr
, "Connexion failed: %s\n",

85 
	`modbus_°ªº‹
(
î∫o
));

86 
	`modbus_‰ì
(
˘x
);

91 
èb_bô
 = (
uöt8_t
 *Ë
	`mÆloc
(
MODBUS_MAX_READ_BITS
 * (uint8_t));

92 
	`mem£t
(
èb_bô
, 0, 
MODBUS_MAX_READ_BITS
 * (
uöt8_t
));

95 
èb_ªg
 = (
uöt16_t
 *Ë
	`mÆloc
(
MODBUS_MAX_READ_REGISTERS
 * (uint16_t));

96 
	`mem£t
(
èb_ªg
, 0, 
MODBUS_MAX_READ_REGISTERS
 * (
uöt16_t
));

98 
	`¥ötf
("READ BITS\n\n");

100 
nb_poöts
 = 
MODBUS_MAX_READ_BITS
;

101 
°¨t
 = 
	`gëtime_ms
();

102 
i
=0; i<
n_lo›
; i++) {

103 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 0, 
nb_poöts
, 
èb_bô
);

104 i‡(
rc
 == -1) {

105 
	`Ârötf
(
°dîr
, "%s\n", 
	`modbus_°ªº‹
(
î∫o
));

109 
íd
 = 
	`gëtime_ms
();

110 
ñ≠£d
 = 
íd
 - 
°¨t
;

112 
øã
 = (
n_lo›
 * 
nb_poöts
Ë* 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

113 
	`¥ötf
("TransfertÑate inÖoints/seconds:\n");

114 
	`¥ötf
("* %dÖoöts/s\n", 
øã
);

115 
	`¥ötf
("\n");

117 
byãs
 = 
n_lo›
 * (
nb_poöts
 / 8) + ((nb_points % 8) ? 1 : 0);

118 
øã
 = 
byãs
 / 1024 * 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

119 
	`¥ötf
("Values:\n");

120 
	`¥ötf
("* %d x %d vÆues\n", 
n_lo›
, 
nb_poöts
);

121 
	`¥ötf
("* %.3‡m†f‹ %d byãs\n", 
ñ≠£d
, 
byãs
);

122 
	`¥ötf
("* %d KiB/s\n", 
øã
);

123 
	`¥ötf
("\n");

126 
byãs
 = 12 + 9 + (
nb_poöts
 / 8) + ((nb_points % 8) ? 1 : 0);

127 
	`¥ötf
("Valuesánd TCP Modbus overhead:\n");

128 
	`¥ötf
("* %d x %d byãs\n", 
n_lo›
, 
byãs
);

129 
byãs
 = 
n_lo›
 * bytes;

130 
øã
 = 
byãs
 / 1024 * 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

131 
	`¥ötf
("* %.3‡m†f‹ %d byãs\n", 
ñ≠£d
, 
byãs
);

132 
	`¥ötf
("* %d KiB/s\n", 
øã
);

133 
	`¥ötf
("\n\n");

135 
	`¥ötf
("READ REGISTERS\n\n");

137 
nb_poöts
 = 
MODBUS_MAX_READ_REGISTERS
;

138 
°¨t
 = 
	`gëtime_ms
();

139 
i
=0; i<
n_lo›
; i++) {

140 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 0, 
nb_poöts
, 
èb_ªg
);

141 i‡(
rc
 == -1) {

142 
	`Ârötf
(
°dîr
, "%s\n", 
	`modbus_°ªº‹
(
î∫o
));

146 
íd
 = 
	`gëtime_ms
();

147 
ñ≠£d
 = 
íd
 - 
°¨t
;

149 
øã
 = (
n_lo›
 * 
nb_poöts
Ë* 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

150 
	`¥ötf
("TransfertÑate inÖoints/seconds:\n");

151 
	`¥ötf
("* %dÑegi°îs/s\n", 
øã
);

152 
	`¥ötf
("\n");

154 
byãs
 = 
n_lo›
 * 
nb_poöts
 * (
uöt16_t
);

155 
øã
 = 
byãs
 / 1024 * 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

156 
	`¥ötf
("Values:\n");

157 
	`¥ötf
("* %d x %d vÆues\n", 
n_lo›
, 
nb_poöts
);

158 
	`¥ötf
("* %.3‡m†f‹ %d byãs\n", 
ñ≠£d
, 
byãs
);

159 
	`¥ötf
("* %d KiB/s\n", 
øã
);

160 
	`¥ötf
("\n");

163 
byãs
 = 12 + 9 + (
nb_poöts
 * (
uöt16_t
));

164 
	`¥ötf
("Valuesánd TCP Modbus overhead:\n");

165 
	`¥ötf
("* %d x %d byãs\n", 
n_lo›
, 
byãs
);

166 
byãs
 = 
n_lo›
 * bytes;

167 
øã
 = 
byãs
 / 1024 * 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

168 
	`¥ötf
("* %.3‡m†f‹ %d byãs\n", 
ñ≠£d
, 
byãs
);

169 
	`¥ötf
("* %d KiB/s\n", 
øã
);

170 
	`¥ötf
("\n\n");

172 
	`¥ötf
("READ AND WRITE REGISTERS\n\n");

174 
nb_poöts
 = 
MODBUS_MAX_RW_WRITE_REGISTERS
;

175 
°¨t
 = 
	`gëtime_ms
();

176 
i
=0; i<
n_lo›
; i++) {

177 
rc
 = 
	`modbus_wrôe_™d_ªad_ªgi°îs
(
˘x
,

178 0, 
nb_poöts
, 
èb_ªg
,

179 0, 
nb_poöts
, 
èb_ªg
);

180 i‡(
rc
 == -1) {

181 
	`Ârötf
(
°dîr
, "%s\n", 
	`modbus_°ªº‹
(
î∫o
));

185 
íd
 = 
	`gëtime_ms
();

186 
ñ≠£d
 = 
íd
 - 
°¨t
;

188 
øã
 = (
n_lo›
 * 
nb_poöts
Ë* 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

189 
	`¥ötf
("TransfertÑate inÖoints/seconds:\n");

190 
	`¥ötf
("* %dÑegi°îs/s\n", 
øã
);

191 
	`¥ötf
("\n");

193 
byãs
 = 
n_lo›
 * 
nb_poöts
 * (
uöt16_t
);

194 
øã
 = 
byãs
 / 1024 * 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

195 
	`¥ötf
("Values:\n");

196 
	`¥ötf
("* %d x %d vÆues\n", 
n_lo›
, 
nb_poöts
);

197 
	`¥ötf
("* %.3‡m†f‹ %d byãs\n", 
ñ≠£d
, 
byãs
);

198 
	`¥ötf
("* %d KiB/s\n", 
øã
);

199 
	`¥ötf
("\n");

202 
byãs
 = 12 + 9 + (
nb_poöts
 * (
uöt16_t
));

203 
	`¥ötf
("Valuesánd TCP Modbus overhead:\n");

204 
	`¥ötf
("* %d x %d byãs\n", 
n_lo›
, 
byãs
);

205 
byãs
 = 
n_lo›
 * bytes;

206 
øã
 = 
byãs
 / 1024 * 
G_MSEC_PER_SEC
 / (
íd
 - 
°¨t
);

207 
	`¥ötf
("* %.3‡m†f‹ %d byãs\n", 
ñ≠£d
, 
byãs
);

208 
	`¥ötf
("* %d KiB/s\n", 
øã
);

209 
	`¥ötf
("\n");

212 
	`‰ì
(
èb_bô
);

213 
	`‰ì
(
èb_ªg
);

216 
	`modbus_˛o£
(
˘x
);

217 
	`modbus_‰ì
(
˘x
);

220 
	}
}

	@bandwidth-server-many-up.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<î∫o.h
>

23 
	~<sig«l.h
>

25 
	~<modbus.h
>

27 #i‡
deföed
(
_WIN32
)

28 
	~<ws2t˝ù.h
>

30 
	~<sys/sockë.h
>

31 
	~<√töë/ö.h
>

32 
	~<¨∑/öë.h
>

35 
	#NB_CONNECTION
 5

	)

37 
modbus_t
 *
	g˘x
 = 
NULL
;

38 
	g£rvî_sockë
;

39 
modbus_m≠pög_t
 *
	gmb_m≠pög
;

41 
	$˛o£_sigöt
(
dummy
)

43 
	`˛o£
(
£rvî_sockë
);

44 
	`modbus_‰ì
(
˘x
);

45 
	`modbus_m≠pög_‰ì
(
mb_m≠pög
);

47 
	`exô
(
dummy
);

48 
	}
}

50 
	$maö
()

52 
ma°î_sockë
;

53 
rc
;

54 
fd_£t
 
ªf£t
;

55 
fd_£t
 
rd£t
;

58 
fdmax
;

60 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

62 
mb_m≠pög
 = 
	`modbus_m≠pög_√w
(
MODBUS_MAX_READ_BITS
, 0,

63 
MODBUS_MAX_READ_REGISTERS
, 0);

64 i‡(
mb_m≠pög
 =
NULL
) {

65 
	`Ârötf
(
°dîr
, "FailedÅoállocateÅhe mapping: %s\n",

66 
	`modbus_°ªº‹
(
î∫o
));

67 
	`modbus_‰ì
(
˘x
);

71 
£rvî_sockë
 = 
	`modbus_t˝_li°í
(
˘x
, 
NB_CONNECTION
);

73 
	`sig«l
(
SIGINT
, 
˛o£_sigöt
);

76 
	`FD_ZERO
(&
ªf£t
);

78 
	`FD_SET
(
£rvî_sockë
, &
ªf£t
);

81 
fdmax
 = 
£rvî_sockë
;

84 
rd£t
 = 
ªf£t
;

85 i‡(
	`£À˘
(
fdmax
+1, &
rd£t
, 
NULL
, NULL, NULL) == -1) {

86 
	`≥º‹
("Server select() failure.");

87 
	`˛o£_sigöt
(1);

92 
ma°î_sockë
 = 0; ma°î_sockë <
fdmax
; master_socket++) {

94 i‡(
	`FD_ISSET
(
ma°î_sockë
, &
rd£t
)) {

95 i‡(
ma°î_sockë
 =
£rvî_sockë
) {

97 
sockÀn_t
 
addæí
;

98 
sockaddr_ö
 
˛õ¡addr
;

99 
√wfd
;

102 
addæí
 = (
˛õ¡addr
);

103 
	`mem£t
(&
˛õ¡addr
, 0, (clientaddr));

104 
√wfd
 = 
	`ac˚±
(
£rvî_sockë
, (
sockaddr
 *)&
˛õ¡addr
, &
addæí
);

105 i‡(
√wfd
 == -1) {

106 
	`≥º‹
("Serveráccept()Érror");

108 
	`FD_SET
(
√wfd
, &
ªf£t
);

110 i‡(
√wfd
 > 
fdmax
) {

112 
fdmax
 = 
√wfd
;

114 
	`¥ötf
("New connection from %s:%d on socket %d\n",

115 
	`öë_¡ﬂ
(
˛õ¡addr
.
sö_addr
), clõ¡addr.
sö_p‹t
, 
√wfd
);

119 
uöt8_t
 
quîy
[
MODBUS_TCP_MAX_ADU_LENGTH
];

121 
	`modbus_£t_sockë
(
˘x
, 
ma°î_sockë
);

122 
rc
 = 
	`modbus_ª˚ive
(
˘x
, 
quîy
);

123 i‡(
rc
 > 0) {

124 
	`modbus_ª∂y
(
˘x
, 
quîy
, 
rc
, 
mb_m≠pög
);

125 } i‡(
rc
 == -1) {

128 
	`¥ötf
("C⁄√˘i⁄ clo£d o¿sockë %d\n", 
ma°î_sockë
);

129 
	`˛o£
(
ma°î_sockë
);

132 
	`FD_CLR
(
ma°î_sockë
, &
ªf£t
);

134 i‡(
ma°î_sockë
 =
fdmax
) {

135 
fdmax
--;

144 
	}
}

	@bandwidth-server-one.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<î∫o.h
>

24 
	~<modbus.h
>

27 
	mTCP
,

28 
	mRTU


31 
	$maö
(
¨gc
, *
¨gv
[])

33 
sockë
;

34 
modbus_t
 *
˘x
;

35 
modbus_m≠pög_t
 *
mb_m≠pög
;

36 
rc
;

37 
u£_backíd
;

40 i‡(
¨gc
 > 1) {

41 i‡(
	`°rcmp
(
¨gv
[1], "tcp") == 0) {

42 
u£_backíd
 = 
TCP
;

43 } i‡(
	`°rcmp
(
¨gv
[1], "rtu") == 0) {

44 
u£_backíd
 = 
RTU
;

46 
	`¥ötf
("Ußge:\¿ %†[t˝|πu] - Modbu†˛õ¡Åÿmósuª d©®b™dwôh\n\n", 
¨gv
[0]);

47 
	`exô
(1);

51 
u£_backíd
 = 
TCP
;

54 i‡(
u£_backíd
 =
TCP
) {

55 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

56 
sockë
 = 
	`modbus_t˝_li°í
(
˘x
, 1);

57 
	`modbus_t˝_ac˚±
(
˘x
, &
sockë
);

60 
˘x
 = 
	`modbus_√w_πu
("/dev/ttyUSB0", 115200, 'N', 8, 1);

61 
	`modbus_£t_¶ave
(
˘x
, 1);

62 
	`modbus_c⁄√˘
(
˘x
);

65 
mb_m≠pög
 = 
	`modbus_m≠pög_√w
(
MODBUS_MAX_READ_BITS
, 0,

66 
MODBUS_MAX_READ_REGISTERS
, 0);

67 i‡(
mb_m≠pög
 =
NULL
) {

68 
	`Ârötf
(
°dîr
, "FailedÅoállocateÅhe mapping: %s\n",

69 
	`modbus_°ªº‹
(
î∫o
));

70 
	`modbus_‰ì
(
˘x
);

75 
uöt8_t
 
quîy
[
MODBUS_TCP_MAX_ADU_LENGTH
];

77 
rc
 = 
	`modbus_ª˚ive
(
˘x
, 
quîy
);

78 i‡(
rc
 > 0) {

79 
	`modbus_ª∂y
(
˘x
, 
quîy
, 
rc
, 
mb_m≠pög
);

80 } i‡(
rc
 == -1) {

86 
	`¥ötf
("QuôÅhêlo›: %s\n", 
	`modbus_°ªº‹
(
î∫o
));

88 
	`modbus_m≠pög_‰ì
(
mb_m≠pög
);

89 
	`˛o£
(
sockë
);

90 
	`modbus_‰ì
(
˘x
);

93 
	}
}

	@random-test-client.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<î∫o.h
>

24 
	~<modbus.h
>

39 
	#LOOP
 1

	)

40 
	#SERVER_ID
 17

	)

41 
	#ADDRESS_START
 0

	)

42 
	#ADDRESS_END
 99

	)

47 
	$maö
()

49 
modbus_t
 *
˘x
;

50 
rc
;

51 
nb_Áû
;

52 
nb_lo›
;

53 
addr
;

54 
nb
;

55 
uöt8_t
 *
èb_rq_bôs
;

56 
uöt8_t
 *
èb_Ω_bôs
;

57 
uöt16_t
 *
èb_rq_ªgi°îs
;

58 
uöt16_t
 *
èb_rw_rq_ªgi°îs
;

59 
uöt16_t
 *
èb_Ω_ªgi°îs
;

68 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

69 
	`modbus_£t_debug
(
˘x
, 
TRUE
);

71 i‡(
	`modbus_c⁄√˘
(
˘x
) == -1) {

72 
	`Ârötf
(
°dîr
, "Connection failed: %s\n",

73 
	`modbus_°ªº‹
(
î∫o
));

74 
	`modbus_‰ì
(
˘x
);

79 
nb
 = 
ADDRESS_END
 - 
ADDRESS_START
;

81 
èb_rq_bôs
 = (
uöt8_t
 *Ë
	`mÆloc
(
nb
 * (uint8_t));

82 
	`mem£t
(
èb_rq_bôs
, 0, 
nb
 * (
uöt8_t
));

84 
èb_Ω_bôs
 = (
uöt8_t
 *Ë
	`mÆloc
(
nb
 * (uint8_t));

85 
	`mem£t
(
èb_Ω_bôs
, 0, 
nb
 * (
uöt8_t
));

87 
èb_rq_ªgi°îs
 = (
uöt16_t
 *Ë
	`mÆloc
(
nb
 * (uint16_t));

88 
	`mem£t
(
èb_rq_ªgi°îs
, 0, 
nb
 * (
uöt16_t
));

90 
èb_Ω_ªgi°îs
 = (
uöt16_t
 *Ë
	`mÆloc
(
nb
 * (uint16_t));

91 
	`mem£t
(
èb_Ω_ªgi°îs
, 0, 
nb
 * (
uöt16_t
));

93 
èb_rw_rq_ªgi°îs
 = (
uöt16_t
 *Ë
	`mÆloc
(
nb
 * (uint16_t));

94 
	`mem£t
(
èb_rw_rq_ªgi°îs
, 0, 
nb
 * (
uöt16_t
));

96 
nb_lo›
 = 
nb_Áû
 = 0;

97 
nb_lo›
++ < 
LOOP
) {

98 
addr
 = 
ADDRESS_START
;ádd∏<
ADDRESS_END
;áddr++) {

99 
i
;

102 
i
=0; i<
nb
; i++) {

103 
èb_rq_ªgi°îs
[
i
] = (
uöt16_t
Ë(65535.0*
	`ønd
(Ë/ (
RAND_MAX
 + 1.0));

104 
èb_rw_rq_ªgi°îs
[
i
] = ~
èb_rq_ªgi°îs
[i];

105 
èb_rq_bôs
[
i
] = 
èb_rq_ªgi°îs
[i] % 2;

107 
nb
 = 
ADDRESS_END
 - 
addr
;

110 
rc
 = 
	`modbus_wrôe_bô
(
˘x
, 
addr
, 
èb_rq_bôs
[0]);

111 i‡(
rc
 != 1) {

112 
	`¥ötf
("ERROR modbus_wrôe_bô (%d)\n", 
rc
);

113 
	`¥ötf
("Addªs†%d, vÆuê%d\n", 
addr
, 
èb_rq_bôs
[0]);

114 
nb_Áû
++;

116 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
addr
, 1, 
èb_Ω_bôs
);

117 i‡(
rc
 !1 || 
èb_rq_bôs
[0] !
èb_Ω_bôs
[0]) {

118 
	`¥ötf
("ERROR modbus_ªad_bô†sögÀ (%d)\n", 
rc
);

119 
	`¥ötf
("addªs†%d\n", 
addr
);

120 
nb_Áû
++;

125 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
addr
, 
nb
, 
èb_rq_bôs
);

126 i‡(
rc
 !
nb
) {

127 
	`¥ötf
("ERROR modbus_wrôe_bô†(%d)\n", 
rc
);

128 
	`¥ötf
("Addªs†%d,Çb = %d\n", 
addr
, 
nb
);

129 
nb_Áû
++;

131 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
addr
, 
nb
, 
èb_Ω_bôs
);

132 i‡(
rc
 !
nb
) {

133 
	`¥ötf
("ERROR modbus_read_bits\n");

134 
	`¥ötf
("Addªs†%d,Çb = %d\n", 
addr
, 
nb
);

135 
nb_Áû
++;

137 
i
=0; i<
nb
; i++) {

138 i‡(
èb_Ω_bôs
[
i
] !
èb_rq_bôs
[i]) {

139 
	`¥ötf
("ERROR modbus_read_bits\n");

140 
	`¥ötf
("Address = %d, value %d (0x%X) != %d (0x%X)\n",

141 
addr
, 
èb_rq_bôs
[
i
],Åab_rq_bits[i],

142 
èb_Ω_bôs
[
i
],Åab_rp_bits[i]);

143 
nb_Áû
++;

150 
rc
 = 
	`modbus_wrôe_ªgi°î
(
˘x
, 
addr
, 
èb_rq_ªgi°îs
[0]);

151 i‡(
rc
 != 1) {

152 
	`¥ötf
("ERROR modbus_wrôe_ªgi°î (%d)\n", 
rc
);

153 
	`¥ötf
("Address = %d, value = %d (0x%X)\n",

154 
addr
, 
èb_rq_ªgi°îs
[0],Åab_rq_registers[0]);

155 
nb_Áû
++;

157 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
addr
, 1, 
èb_Ω_ªgi°îs
);

158 i‡(
rc
 != 1) {

159 
	`¥ötf
("ERROR modbus_ªad_ªgi°î†sögÀ (%d)\n", 
rc
);

160 
	`¥ötf
("Addªs†%d\n", 
addr
);

161 
nb_Áû
++;

163 i‡(
èb_rq_ªgi°îs
[0] !
èb_Ω_ªgi°îs
[0]) {

164 
	`¥ötf
("ERROR modbus_read_registers single\n");

165 
	`¥ötf
("Address = %d, value = %d (0x%X) != %d (0x%X)\n",

166 
addr
, 
èb_rq_ªgi°îs
[0],Åab_rq_registers[0],

167 
èb_Ω_ªgi°îs
[0],Åab_rp_registers[0]);

168 
nb_Áû
++;

174 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
addr
, 
nb
, 
èb_rq_ªgi°îs
);

175 i‡(
rc
 !
nb
) {

176 
	`¥ötf
("ERROR modbus_wrôe_ªgi°î†(%d)\n", 
rc
);

177 
	`¥ötf
("Addªs†%d,Çb = %d\n", 
addr
, 
nb
);

178 
nb_Áû
++;

180 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
addr
, 
nb
, 
èb_Ω_ªgi°îs
);

181 i‡(
rc
 !
nb
) {

182 
	`¥ötf
("ERROR modbus_ªad_ªgi°î†(%d)\n", 
rc
);

183 
	`¥ötf
("Addªs†%d,Çb = %d\n", 
addr
, 
nb
);

184 
nb_Áû
++;

186 
i
=0; i<
nb
; i++) {

187 i‡(
èb_rq_ªgi°îs
[
i
] !
èb_Ω_ªgi°îs
[i]) {

188 
	`¥ötf
("ERROR modbus_read_registers\n");

189 
	`¥ötf
("Address = %d, value %d (0x%X) != %d (0x%X)\n",

190 
addr
, 
èb_rq_ªgi°îs
[
i
],Åab_rq_registers[i],

191 
èb_Ω_ªgi°îs
[
i
],Åab_rp_registers[i]);

192 
nb_Áû
++;

198 
rc
 = 
	`modbus_wrôe_™d_ªad_ªgi°îs
(
˘x
,

199 
addr
, 
nb
, 
èb_rw_rq_ªgi°îs
,

200 
addr
, 
nb
, 
èb_Ω_ªgi°îs
);

201 i‡(
rc
 !
nb
) {

202 
	`¥ötf
("ERROR modbus_ªad_™d_wrôe_ªgi°î†(%d)\n", 
rc
);

203 
	`¥ötf
("Addªs†%d,Çb = %d\n", 
addr
, 
nb
);

204 
nb_Áû
++;

206 
i
=0; i<
nb
; i++) {

207 i‡(
èb_Ω_ªgi°îs
[
i
] !
èb_rw_rq_ªgi°îs
[i]) {

208 
	`¥ötf
("ERROR modbus_read_and_write_registers READ\n");

209 
	`¥ötf
("Address = %d, value %d (0x%X) != %d (0x%X)\n",

210 
addr
, 
èb_Ω_ªgi°îs
[
i
], 
èb_rw_rq_ªgi°îs
[i],

211 
èb_Ω_ªgi°îs
[
i
], 
èb_rw_rq_ªgi°îs
[i]);

212 
nb_Áû
++;

216 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
addr
, 
nb
, 
èb_Ω_ªgi°îs
);

217 i‡(
rc
 !
nb
) {

218 
	`¥ötf
("ERROR modbus_ªad_ªgi°î†(%d)\n", 
rc
);

219 
	`¥ötf
("Addªs†%d,Çb = %d\n", 
addr
, 
nb
);

220 
nb_Áû
++;

222 
i
=0; i<
nb
; i++) {

223 i‡(
èb_rw_rq_ªgi°îs
[
i
] !
èb_Ω_ªgi°îs
[i]) {

224 
	`¥ötf
("ERROR modbus_read_and_write_registers WRITE\n");

225 
	`¥ötf
("Address = %d, value %d (0x%X) != %d (0x%X)\n",

226 
addr
, 
èb_rw_rq_ªgi°îs
[
i
],Åab_rw_rq_registers[i],

227 
èb_Ω_ªgi°îs
[
i
],Åab_rp_registers[i]);

228 
nb_Áû
++;

235 
	`¥ötf
("Test: ");

236 i‡(
nb_Áû
)

237 
	`¥ötf
("%d FAILS\n", 
nb_Áû
);

239 
	`¥ötf
("SUCCESS\n");

243 
	`‰ì
(
èb_rq_bôs
);

244 
	`‰ì
(
èb_Ω_bôs
);

245 
	`‰ì
(
èb_rq_ªgi°îs
);

246 
	`‰ì
(
èb_Ω_ªgi°îs
);

249 
	`modbus_˛o£
(
˘x
);

250 
	`modbus_‰ì
(
˘x
);

253 
	}
}

	@random-test-server.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°dlib.h
>

21 
	~<î∫o.h
>

23 
	~<modbus.h
>

25 
	$maö
()

27 
sockë
;

28 
modbus_t
 *
˘x
;

29 
modbus_m≠pög_t
 *
mb_m≠pög
;

31 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

34 
mb_m≠pög
 = 
	`modbus_m≠pög_√w
(500, 500, 500, 500);

35 i‡(
mb_m≠pög
 =
NULL
) {

36 
	`Ârötf
(
°dîr
, "FailedÅoállocateÅhe mapping: %s\n",

37 
	`modbus_°ªº‹
(
î∫o
));

38 
	`modbus_‰ì
(
˘x
);

42 
sockë
 = 
	`modbus_t˝_li°í
(
˘x
, 1);

43 
	`modbus_t˝_ac˚±
(
˘x
, &
sockë
);

46 
uöt8_t
 
quîy
[
MODBUS_TCP_MAX_ADU_LENGTH
];

47 
rc
;

49 
rc
 = 
	`modbus_ª˚ive
(
˘x
, 
quîy
);

50 i‡(
rc
 > 0) {

52 
	`modbus_ª∂y
(
˘x
, 
quîy
, 
rc
, 
mb_m≠pög
);

53 } i‡(
rc
 == -1) {

59 
	`¥ötf
("QuôÅhêlo›: %s\n", 
	`modbus_°ªº‹
(
î∫o
));

61 
	`modbus_m≠pög_‰ì
(
mb_m≠pög
);

62 
	`modbus_˛o£
(
˘x
);

63 
	`modbus_‰ì
(
˘x
);

66 
	}
}

	@test.c

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	~<î∫o.h
>

6 
	~<modbus.h
>

7 
	~<sqlôe3.h
>

9 
	~"ã°.h
"

11 
	#MAX_RESULTS
 10240

12 
	#MAX_RTU
 32

	)

13 
	#RETRIES
 3

14 

	)

17 
	#L1_CURRENT
 0

	)

18 
	#L2_CURRENT
 1

	)

19 
	#L3_CURRENT
 2

	)

21 
	#L1_VOLTS
 4

	)

22 
	#L2_VOLTS
 5

	)

23 
	#L3_VOLTS
 6

	)

25 
	#L1_POWER
 88

	)

26 
	#L2_POWER
 89

	)

27 
	#L3_POWER
 90

	)

30 
	#AVG_POWER
 91

	)

32 
	gªsu…s
[
MAX_RESULTS
];

34 
	$max
(
a
,
b
) {

35 
c
;

37 
c
 = ( ((
a
Ë> (
b
)) ? (a) : (b) );

38 (
c
);

39 
	}
}

41 *
	$°rßve
(*
s
) {

42 *
p
;

44 i‡((
p
 = (*Ë
	`mÆloc
(
	`°æí
(
s
Ë+ 1)Ë!
NULL
)

45 
	`°r˝y
(
p
, 
s
);

46  (
p
);

47 
	}
}

49 
	$dump_∑ckë
–
uöt16_t
 *
d©a
, 
cou¡
) {

50 
i
=0;

51 
j
=0;

53 
	`¥ötf
("Regi°î cou¡: %d\n",
cou¡
);

55 
	`¥ötf
(" | 00 01 02 03 04 05 06 07 \n");

56 
	`¥ötf
("==+=========================================\n");

57 
i
=0; i < 
cou¡
; i=i+0x08) {

58 
	`¥ötf
("%02d|",
i
);

59 
j
=
i
; ((j< i+0x08Ë&& (j <
cou¡
)); j++) {

62 
	`¥ötf
(":%04x", 
d©a
[
j
]);

64 
	`¥ötf
("\n");

67 
	}
}

69 
	$ˇŒback
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
) {

70 
i
;

71 
i
=0; i<
¨gc
; i++){

72 if(
i
 == 0 ) {

73 
	`°rˇt
(
ªsu…s
, (
¨gv
[
i
] ?árgv[i] : "NULL"));

75 
	`°rˇt
(
ªsu…s
,":");

76 
	`°rˇt
(
ªsu…s
, (
¨gv
[
i
] ?árgv[i] : "NULL"));

79 
	`°rˇt
(
ªsu…s
,";");

81 
	}
}

84 
	$maö
() {

85 
nb_poöts
=50;

86 
uöt16_t
 *
èb_Ω_ªgi°îs
;

87 
rc
 = -1;

88 
πu
=0x01;

89 
πuAºay
[
MAX_RTU
];

90 
i
=0;

92 
sqlôe3
 *
db
;

93 *
zEºMsg
 = 0;

94 
sql
[1024];

95 *
tmp
;

97 *
ây
;

98 
∑rôy
;

99 
baud_øã
;

100 
°›_bôs
;

101 
Àngth
;

102 
«p_time
=30;

103 
ªåõs
=
RETRIES
;

105 
modbus_ba£_addªss
=0;

107 
tmp
=
	`gëív
("DATABASE");

109 if–!
tmp
 ) {

110 
tmp
=
	`°rßve
("/var/data/RS.db");

113 
	`¥ötf
("O≥nög db %s\n",
tmp
);

114 
rc
=
	`sqlôe3_›í
(
tmp
,&
db
);

116 i‡–
rc
 !
SQLITE_OK
) {

117 
	`Ârötf
(
°dîr
, "C™'à›í d©aba£: %s\n", 
	`sqlôe3_îrmsg
(
db
));

118 
	`sqlôe3_˛o£
–
db
 );

119 
	`exô
(-1);

131 
	`°r˝y
(
sql
,"selectÅty_port,baud_rate,Öarity,stop_bits,length,freq from config order by idx descÜimit 1;");

133 
rc
 = 
	`sqlôe3_exec
(
db
, 
sql
, 
ˇŒback
, 0, &
zEºMsg
);

134 if–
rc
!=
SQLITE_OK
 ) {

135 
	`Ârötf
(
°dîr
, "SQLÉº‹: %s\n", 
zEºMsg
);

136 
	`sqlôe3_‰ì
(
zEºMsg
);

138 
	`¥ötf
("ªs=%s\n",
ªsu…s
);

140 
ây
=
	`°πok
(
ªsu…s
,":");

142 if(!
ây
) {

143 
	`Ârötf
(
°dîr
,"tty NULL\n");

144 
	`exô
(1);

147 
tmp
=
	`°πok
(
NULL
,":");

149 if(!
tmp
) {

150 
	`Ârötf
(
°dîr
,"baud NULL\n");

151 
	`exô
(1);

153 
baud_øã
=
	`©oi
(
tmp
);

155 
tmp
=
	`°πok
(
NULL
,":");

157 if(!
tmp
) {

158 
	`Ârötf
(
°dîr
,"parity NULL\n");

159 
	`exô
(1);

161 
∑rôy
=*
tmp
;

163 
tmp
=
	`°πok
(
NULL
,":");

165 if(!
tmp
) {

166 
	`Ârötf
(
°dîr
,"stop bits NULL\n");

167 
	`exô
(1);

169 
°›_bôs
=
	`©oi
(
tmp
);

171 
tmp
=
	`°πok
(
NULL
,":");

173 if(!
tmp
) {

174 
	`Ârötf
(
°dîr
,"length NULL\n");

175 
	`exô
(1);

177 
Àngth
=
	`©oi
(
tmp
);

179 
tmp
=
	`°πok
(
NULL
,":");

181 if(!
tmp
) {

182 
	`Ârötf
(
°dîr
,"freq NULL\n");

183 
	`exô
(1);

185 
	`¥ötf
("tmp=%s\n",
tmp
);

186 
«p_time
=
	`max
“≠_time,
	`©oi
(
tmp
));

188 
	`¥ötf
("«p_time=%d\n",
«p_time
);

192 
modbus_t
 *
˘x
;

195 
˘x
 = 
	`modbus_√w_πu
(
ây
, 
baud_øã
, 
∑rôy
, 
Àngth
, 
°›_bôs
);

197 (Ë
	`mem£t
(
ªsu…s
,0x00,(results));

199 
	`°r˝y
(
sql
,"select distinct(rtu) from data ;");

200 
rc
 = 
	`sqlôe3_exec
(
db
, 
sql
, 
ˇŒback
, 0, &
zEºMsg
);

201 if–
rc
!=
SQLITE_OK
 ) {

202 
	`Ârötf
(
°dîr
, "SQLÉº‹: %s\n", 
zEºMsg
);

203 
	`sqlôe3_‰ì
(
zEºMsg
);

211 (*)
	`mem£t
–&
πuAºay
[0],0,(rtuArray));

212 
tmp
=
	`°πok
(
ªsu…s
,";");

214 
tmp
 != 0) {

215 
i
=
	`©oi
(
tmp
);

216 
	`¥ötf
("%d\n",
i
);

218 
πuAºay
[
i
]=-1;

219 
tmp
=
	`°πok
(
NULL
,";");

224 i‡(
˘x
 =
NULL
) {

225 
	`Ârötf
(
°dîr
, "UnableÅoállocateÜibmodbus context\n");

228 
TRUE
) {

229 
	`°r˝y
(
sql
,"select freq from config order by idx descÜimit 1;");

230 
	`mem£t
–
ªsu…s
,0,(results));

232 
rc
 = 
	`sqlôe3_exec
(
db
, 
sql
, 
ˇŒback
, 0, &
zEºMsg
);

234 
«p_time
 = 
	`max
(
	`©oi
(
ªsu…s
), 30);

235 
	`¥ötf
(">>%d\n",
	`©oi
(
ªsu…s
) );

236 
i
=1;i<
MAX_RTU
;i++) {

239 if–
πuAºay
[
i
] == -1 ) {

240 
πu
=
i
;

243 i‡(
	`modbus_c⁄√˘
(
˘x
) == -1) {

244 
	`Ârötf
(
°dîr
, "C⁄√˘i⁄ faûed: %s\n",
	`modbus_°ªº‹
(
î∫o
));

245 
	`modbus_‰ì
(
˘x
);

250 
èb_Ω_ªgi°îs
 = (
uöt16_t
 *Ë
	`mÆloc
(
nb_poöts
 * (uint16_t));

251 
	`mem£t
(
èb_Ω_ªgi°îs
, 0, 
nb_poöts
 * (
uöt16_t
));

256 
	`modbus_£t_¶ave
(
˘x
, 
πu
);

258 
ªåõs
=
RETRIES
;

260 
ªåõs
 > 0) {

261 
	`¥ötf
("RTU=%d\ƒërõs=%d\n",
πu
,
ªåõs
);

265 
modbus_ba£_addªss
=88;

267 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 00, 
nb_poöts
, 
èb_Ω_ªgi°îs
);

268 
	`¥ötf
("modbus_ªad_ªgi°îs: %d\n",
rc
);

269 i‡(
rc
 > 0) {

270 
ªåõs
 = 0;

271 
	`dump_∑ckë
(
èb_Ω_ªgi°îs
, 
nb_poöts
);

273 
	`¥ötf
("\n");

274 
	`¥ötf
("L1 %4d W©ts\n", 
èb_Ω_ªgi°îs
[
L1_POWER
 - 
modbus_ba£_addªss
] );

275 
	`¥ötf
("L2 %4d W©ts\n", 
èb_Ω_ªgi°îs
[
L2_POWER
 - 
modbus_ba£_addªss
] );

276 
	`¥ötf
("L3 %4d W©ts\n", 
èb_Ω_ªgi°îs
[
L3_POWER
 - 
modbus_ba£_addªss
] );

277 
	`¥ötf
("=============================\n");

284 
	`•rötf
(
sql
,"ö£π i¡ÿd©®(RTU,pha£A,pha£B,pha£CËvÆues–%d,%d,%d,%d);", 
πu
,
èb_Ω_ªgi°îs
[0],tab_rp_registers[1],tab_rp_registers[3]);

285 
	`¥ötf
("%s\n", 
sql
);

287 
rc
 = 
	`sqlôe3_exec
(
db
, 
sql
, 
ˇŒback
, 0, &
zEºMsg
);

288 if–
rc
!=
SQLITE_OK
 ) {

289 
	`Ârötf
(
°dîr
, "SQLÉº‹: %s\n", 
zEºMsg
);

290 
	`sqlôe3_‰ì
(
zEºMsg
);

322 
	`¥ötf
("FAILED RTU %d)\n", 
πu
);

323 
ªåõs
--;

324 
	`¶ìp
(1);

328 
	`modbus_˛o£
–
˘x
 );

331 
	`¥ötf
("SÀïög f‹ %d\n",
«p_time
);

332 
	`¶ìp
–
«p_time
);

334 
	`sqlôe3_˛o£
(
db
);

337 
	}
}

	@test.h

3 c⁄° 
uöt16_t
 
	gUT_INPUT_REGISTERS_NB
 = 0x1;

4 c⁄° 
uöt16_t
 
	gUT_REGISTERS_NB
 = 0x3;

	@unit-test-client.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<î∫o.h
>

23 
	~<modbus.h
>

25 
	~"unô-ã°.h
"

28 
	mTCP
,

29 
	mTCP_PI
,

30 
	mRTU


33 *
	$°rßve
(*
s
) {

34 *
p
;

36 i‡((
p
 = (*Ë
	`mÆloc
(
	`°æí
(
s
Ë+ 1)Ë!
NULL
)

37 
	`°r˝y
(
p
, 
s
);

38  (
p
);

39 
	}
}

42 
	$maö
(
¨gc
, *
¨gv
[])

44 
uöt8_t
 *
èb_Ω_bôs
;

45 
uöt16_t
 *
èb_Ω_ªgi°îs
;

46 
uöt16_t
 *
èb_Ω_ªgi°îs_bad
;

47 
modbus_t
 *
˘x
;

48 
i
;

49 
uöt8_t
 
vÆue
;

50 
nb_poöts
;

51 
rc
;

52 
ªÆ
;

53 
timevÆ
 
ﬁd_ª•⁄£_timeout
;

54 
timevÆ
 
ª•⁄£_timeout
;

55 
u£_backíd
;

56 *
ây
=(*)
NULL
;

59 i‡(
¨gc
 > 1) {

60 i‡(
	`°rcmp
(
¨gv
[1], "tcp") == 0) {

61 
u£_backíd
 = 
TCP
;

62 } i‡(
	`°rcmp
(
¨gv
[1], "tcppi") == 0) {

63 
u£_backíd
 = 
TCP_PI
;

64 } i‡(
	`°rcmp
(
¨gv
[1], "rtu") == 0) {

65 if(
ây
 !(*)
NULL
) {

66 
	`‰ì
(
ây
);

69 
ây
=
	`°rßve
(
¨gv
[2]);

71 
u£_backíd
 = 
RTU
;

73 
	`¥ötf
("Ußge:\¿ %†[t˝|t˝pi|πu] - Modbu†˛õ¡ f‹ unôÅe°ög\n\n", 
¨gv
[0]);

74 
	`exô
(1);

78 
	`¥ötf
("Usage:\n client [tcp|tcppi|rtu] - Modbus client for unitÅesting\n");

79 
	`¥ötf
("\ttcp <address> <port>\n");

80 
	`¥ötf
("\trtu <tty>\tDefault is 9600,E,8,1\n");

81 
	`exô
(0);

82 
u£_backíd
 = 
TCP
;

85 i‡(
u£_backíd
 =
TCP
) {

86 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

87 } i‡(
u£_backíd
 =
TCP_PI
) {

88 
˘x
 = 
	`modbus_√w_t˝_pi
("::1", "1502");

92 
˘x
 = 
	`modbus_√w_πu
(
ây
, 9600, 'E', 8, 2);

94 i‡(
˘x
 =
NULL
) {

95 
	`Ârötf
(
°dîr
, "UnableÅoállocateÜibmodbus context\n");

98 
	`modbus_£t_debug
(
˘x
, 
TRUE
);

99 
	`modbus_£t_îr‹_ªcovîy
(
˘x
,

100 
MODBUS_ERROR_RECOVERY_LINK
 |

101 
MODBUS_ERROR_RECOVERY_PROTOCOL
);

103 i‡(
u£_backíd
 =
RTU
) {

104 
	`modbus_£t_¶ave
(
˘x
, 
SERVER_ID
);

107 i‡(
	`modbus_c⁄√˘
(
˘x
) == -1) {

108 
	`Ârötf
(
°dîr
, "Connection failed: %s\n",

109 
	`modbus_°ªº‹
(
î∫o
));

110 
	`modbus_‰ì
(
˘x
);

115 
nb_poöts
 = (
UT_BITS_NB
 > 
UT_INPUT_BITS_NB
) ? UT_BITS_NB : UT_INPUT_BITS_NB;

116 
èb_Ω_bôs
 = (
uöt8_t
 *Ë
	`mÆloc
(
nb_poöts
 * (uint8_t));

117 
	`mem£t
(
èb_Ω_bôs
, 0, 
nb_poöts
 * (
uöt8_t
));

120 
nb_poöts
 = (
UT_REGISTERS_NB
 > 
UT_INPUT_REGISTERS_NB
) ?

121 
UT_REGISTERS_NB
 : 
UT_INPUT_REGISTERS_NB
;

122 
èb_Ω_ªgi°îs
 = (
uöt16_t
 *Ë
	`mÆloc
(
nb_poöts
 * (uint16_t));

123 
	`mem£t
(
èb_Ω_ªgi°îs
, 0, 
nb_poöts
 * (
uöt16_t
));

125 
	`¥ötf
("** UNIT TESTING **\n");

126 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 00,

127 1, 
èb_Ω_ªgi°îs
);

128 
	`¥ötf
("modbus_read_registers: ");

129 i‡(
rc
 != 1) {

130 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

131 
˛o£
;

136 
	`¥ötf
("\nTEST WRITE/READ:\n");

141 
rc
 = 
	`modbus_wrôe_bô
(
˘x
, 
UT_BITS_ADDRESS
, 
ON
);

142 
	`¥ötf
("1/2 modbus_write_bit: ");

143 i‡(
rc
 == 1) {

144 
	`¥ötf
("OK\n");

146 
	`¥ötf
("FAILED\n");

147 
˛o£
;

150 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
, 1, 
èb_Ω_bôs
);

151 
	`¥ötf
("2/2 modbus_read_bits: ");

152 i‡(
rc
 != 1) {

153 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

154 
˛o£
;

157 i‡(
èb_Ω_bôs
[0] !
ON
) {

158 
	`¥ötf
("FAILED (%0X !%0X)\n", 
èb_Ω_bôs
[0], 
ON
);

159 
˛o£
;

161 
	`¥ötf
("OK\n");

166 
uöt8_t
 
èb_vÆue
[
UT_BITS_NB
];

168 
	`modbus_£t_bôs_‰om_byãs
(
èb_vÆue
, 0, 
UT_BITS_NB
, 
UT_BITS_TAB
);

169 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

170 
UT_BITS_NB
, 
èb_vÆue
);

171 
	`¥ötf
("1/2 modbus_write_bits: ");

172 i‡(
rc
 =
UT_BITS_NB
) {

173 
	`¥ötf
("OK\n");

175 
	`¥ötf
("FAILED\n");

176 
˛o£
;

180 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
, 
UT_BITS_NB
, 
èb_Ω_bôs
);

181 
	`¥ötf
("2/2 modbus_read_bits: ");

182 i‡(
rc
 !
UT_BITS_NB
) {

183 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

184 
˛o£
;

187 
i
 = 0;

188 
nb_poöts
 = 
UT_BITS_NB
;

189 
nb_poöts
 > 0) {

190 
nb_bôs
 = (
nb_poöts
 > 8) ? 8 :Çb_points;

192 
vÆue
 = 
	`modbus_gë_byã_‰om_bôs
(
èb_Ω_bôs
, 
i
*8, 
nb_bôs
);

193 i‡(
vÆue
 !
UT_BITS_TAB
[
i
]) {

194 
	`¥ötf
("FAILED (%0X !%0X)\n", 
vÆue
, 
UT_BITS_TAB
[
i
]);

195 
˛o£
;

198 
nb_poöts
 -
nb_bôs
;

199 
i
++;

201 
	`¥ötf
("OK\n");

205 
rc
 = 
	`modbus_ªad_öput_bôs
(
˘x
, 
UT_INPUT_BITS_ADDRESS
,

206 
UT_INPUT_BITS_NB
, 
èb_Ω_bôs
);

207 
	`¥ötf
("1/1 modbus_read_input_bits: ");

209 i‡(
rc
 !
UT_INPUT_BITS_NB
) {

210 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

211 
˛o£
;

214 
i
 = 0;

215 
nb_poöts
 = 
UT_INPUT_BITS_NB
;

216 
nb_poöts
 > 0) {

217 
nb_bôs
 = (
nb_poöts
 > 8) ? 8 :Çb_points;

219 
vÆue
 = 
	`modbus_gë_byã_‰om_bôs
(
èb_Ω_bôs
, 
i
*8, 
nb_bôs
);

220 i‡(
vÆue
 !
UT_INPUT_BITS_TAB
[
i
]) {

221 
	`¥ötf
("FAILED (%0X !%0X)\n", 
vÆue
, 
UT_INPUT_BITS_TAB
[
i
]);

222 
˛o£
;

225 
nb_poöts
 -
nb_bôs
;

226 
i
++;

228 
	`¥ötf
("OK\n");

233 
rc
 = 
	`modbus_wrôe_ªgi°î
(
˘x
, 
UT_REGISTERS_ADDRESS
, 0x1234);

234 
	`¥ötf
("1/2 modbus_write_register: ");

235 i‡(
rc
 == 1) {

236 
	`¥ötf
("OK\n");

238 
	`¥ötf
("FAILED\n");

242 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

243 1, 
èb_Ω_ªgi°îs
);

244 
	`¥ötf
("2/2 modbus_read_registers: ");

245 i‡(
rc
 != 1) {

246 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

247 
˛o£
;

250 i‡(
èb_Ω_ªgi°îs
[0] != 0x1234) {

251 
	`¥ötf
("FAILED (%0X != %0X)\n",

252 
èb_Ω_ªgi°îs
[0], 0x1234);

253 
˛o£
;

255 
	`¥ötf
("OK\n");

259 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

260 
UT_REGISTERS_NB
, 
UT_REGISTERS_TAB
);

261 
	`¥ötf
("1/5 modbus_write_registers: ");

262 i‡(
rc
 =
UT_REGISTERS_NB
) {

263 
	`¥ötf
("OK\n");

265 
	`¥ötf
("FAILED\n");

266 
˛o£
;

269 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

270 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

271 
	`¥ötf
("2/5 modbus_read_registers: ");

272 i‡(
rc
 !
UT_REGISTERS_NB
) {

273 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

274 
˛o£
;

277 
i
=0; i < 
UT_REGISTERS_NB
; i++) {

278 i‡(
èb_Ω_ªgi°îs
[
i
] !
UT_REGISTERS_TAB
[i]) {

279 
	`¥ötf
("FAILED (%0X != %0X)\n",

280 
èb_Ω_ªgi°îs
[
i
],

281 
UT_REGISTERS_TAB
[
i
]);

282 
˛o£
;

285 
	`¥ötf
("OK\n");

287 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

288 0, 
èb_Ω_ªgi°îs
);

289 
	`¥ötf
("3/5 modbus_read_registers (0): ");

290 i‡(
rc
 != 0) {

291 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

292 
˛o£
;

294 
	`¥ötf
("OK\n");

296 
nb_poöts
 = (
UT_REGISTERS_NB
 >

297 
UT_INPUT_REGISTERS_NB
) ?

298 
UT_REGISTERS_NB
 : 
UT_INPUT_REGISTERS_NB
;

299 
	`mem£t
(
èb_Ω_ªgi°îs
, 0, 
nb_poöts
 * (
uöt16_t
));

304 
rc
 = 
	`modbus_wrôe_™d_ªad_ªgi°îs
(
˘x
,

305 
UT_REGISTERS_ADDRESS
 + 1, 
UT_REGISTERS_NB
 - 1,

306 
èb_Ω_ªgi°îs
,

307 
UT_REGISTERS_ADDRESS
,

308 
UT_REGISTERS_NB
,

309 
èb_Ω_ªgi°îs
);

310 
	`¥ötf
("4/5 modbus_write_and_read_registers: ");

311 i‡(
rc
 !
UT_REGISTERS_NB
) {

312 
	`¥ötf
("FAILED (nbÖoöt†%d !%d)\n", 
rc
, 
UT_REGISTERS_NB
);

313 
˛o£
;

316 i‡(
èb_Ω_ªgi°îs
[0] !
UT_REGISTERS_TAB
[0]) {

317 
	`¥ötf
("FAILED (%0X != %0X)\n",

318 
èb_Ω_ªgi°îs
[0], 
UT_REGISTERS_TAB
[0]);

321 
i
=1; i < 
UT_REGISTERS_NB
; i++) {

322 i‡(
èb_Ω_ªgi°îs
[
i
] != 0) {

323 
	`¥ötf
("FAILED (%0X != %0X)\n",

324 
èb_Ω_ªgi°îs
[
i
], 0);

325 
˛o£
;

328 
	`¥ötf
("OK\n");

334 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 
UT_INPUT_REGISTERS_ADDRESS
,

335 
UT_INPUT_REGISTERS_NB
,

336 
èb_Ω_ªgi°îs
);

337 
	`¥ötf
("1/1 modbus_read_input_registers: ");

338 i‡(
rc
 !
UT_INPUT_REGISTERS_NB
) {

339 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

340 
˛o£
;

343 
i
=0; i < 
UT_INPUT_REGISTERS_NB
; i++) {

344 i‡(
èb_Ω_ªgi°îs
[
i
] !
UT_INPUT_REGISTERS_TAB
[i]) {

345 
	`¥ötf
("FAILED (%0X != %0X)\n",

346 
èb_Ω_ªgi°îs
[
i
], 
UT_INPUT_REGISTERS_TAB
[i]);

347 
˛o£
;

350 
	`¥ötf
("OK\n");

352 
	`¥ötf
("\nTEST FLOATS\n");

354 
	`¥ötf
("1/2 Set float: ");

355 
	`modbus_£t_Êﬂt
(
UT_REAL
, 
èb_Ω_ªgi°îs
);

356 i‡(
èb_Ω_ªgi°îs
[1] =(
UT_IREAL
 >> 16) &&

357 
èb_Ω_ªgi°îs
[0] =(
UT_IREAL
 & 0xFFFF)) {

358 
	`¥ötf
("OK\n");

360 
	`¥ötf
("FAILED (%x != %x)\n",

361 *((
uöt32_t
 *)
èb_Ω_ªgi°îs
), 
UT_IREAL
);

362 
˛o£
;

365 
	`¥ötf
("2/2 Get float: ");

366 
ªÆ
 = 
	`modbus_gë_Êﬂt
(
èb_Ω_ªgi°îs
);

367 i‡(
ªÆ
 =
UT_REAL
) {

368 
	`¥ötf
("OK\n");

370 
	`¥ötf
("FAILED (%‡!%f)\n", 
ªÆ
, 
UT_REAL
);

371 
˛o£
;

374 
	`¥ötf
("\nAtÅhisÖoint,Érror messages doesn't meanÅheÅest has failed\n");

377 
	`¥ötf
("\nTEST ILLEGAL DATA ADDRESS:\n");

382 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

383 
UT_BITS_NB
 + 1, 
èb_Ω_bôs
);

384 
	`¥ötf
("* modbus_read_bits: ");

385 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

386 
	`¥ötf
("OK\n");

388 
	`¥ötf
("FAILED\n");

389 
˛o£
;

392 
rc
 = 
	`modbus_ªad_öput_bôs
(
˘x
, 
UT_INPUT_BITS_ADDRESS
,

393 
UT_INPUT_BITS_NB
 + 1, 
èb_Ω_bôs
);

394 
	`¥ötf
("* modbus_read_input_bits: ");

395 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
)

396 
	`¥ötf
("OK\n");

398 
	`¥ötf
("FAILED\n");

399 
˛o£
;

402 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

403 
UT_REGISTERS_NB
 + 1, 
èb_Ω_ªgi°îs
);

404 
	`¥ötf
("* modbus_read_registers: ");

405 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
)

406 
	`¥ötf
("OK\n");

408 
	`¥ötf
("FAILED\n");

409 
˛o£
;

412 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 
UT_INPUT_REGISTERS_ADDRESS
,

413 
UT_INPUT_REGISTERS_NB
 + 1,

414 
èb_Ω_ªgi°îs
);

415 
	`¥ötf
("* modbus_read_input_registers: ");

416 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
)

417 
	`¥ötf
("OK\n");

419 
	`¥ötf
("FAILED\n");

420 
˛o£
;

423 
rc
 = 
	`modbus_wrôe_bô
(
˘x
, 
UT_BITS_ADDRESS
 + 
UT_BITS_NB
, 
ON
);

424 
	`¥ötf
("* modbus_write_bit: ");

425 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

426 
	`¥ötf
("OK\n");

428 
	`¥ötf
("FAILED\n");

429 
˛o£
;

432 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
UT_BITS_ADDRESS
 + 
UT_BITS_NB
,

433 
UT_BITS_NB
, 
èb_Ω_bôs
);

434 
	`¥ötf
("* modbus_write_coils: ");

435 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

436 
	`¥ötf
("OK\n");

438 
	`¥ötf
("FAILED\n");

439 
˛o£
;

442 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
 + 
UT_REGISTERS_NB
,

443 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

444 
	`¥ötf
("* modbus_write_registers: ");

445 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

446 
	`¥ötf
("OK\n");

448 
	`¥ötf
("FAILED\n");

449 
˛o£
;

454 
	`¥ötf
("\nTEST TOO MANY DATA ERROR:\n");

456 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

457 
MODBUS_MAX_READ_BITS
 + 1, 
èb_Ω_bôs
);

458 
	`¥ötf
("* modbus_read_bits: ");

459 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

460 
	`¥ötf
("OK\n");

462 
	`¥ötf
("FAILED\n");

463 
˛o£
;

466 
rc
 = 
	`modbus_ªad_öput_bôs
(
˘x
, 
UT_INPUT_BITS_ADDRESS
,

467 
MODBUS_MAX_READ_BITS
 + 1, 
èb_Ω_bôs
);

468 
	`¥ötf
("* modbus_read_input_bits: ");

469 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

470 
	`¥ötf
("OK\n");

472 
	`¥ötf
("FAILED\n");

473 
˛o£
;

476 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

477 
MODBUS_MAX_READ_REGISTERS
 + 1,

478 
èb_Ω_ªgi°îs
);

479 
	`¥ötf
("* modbus_read_registers: ");

480 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

481 
	`¥ötf
("OK\n");

483 
	`¥ötf
("FAILED\n");

484 
˛o£
;

487 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 
UT_INPUT_REGISTERS_ADDRESS
,

488 
MODBUS_MAX_READ_REGISTERS
 + 1,

489 
èb_Ω_ªgi°îs
);

490 
	`¥ötf
("* modbus_read_input_registers: ");

491 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

492 
	`¥ötf
("OK\n");

494 
	`¥ötf
("FAILED\n");

495 
˛o£
;

498 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

499 
MODBUS_MAX_WRITE_BITS
 + 1, 
èb_Ω_bôs
);

500 
	`¥ötf
("* modbus_write_bits: ");

501 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

502 
	`¥ötf
("OK\n");

504 
˛o£
;

505 
	`¥ötf
("FAILED\n");

508 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

509 
MODBUS_MAX_WRITE_REGISTERS
 + 1,

510 
èb_Ω_ªgi°îs
);

511 
	`¥ötf
("* modbus_write_registers: ");

512 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

513 
	`¥ötf
("OK\n");

515 
	`¥ötf
("FAILED\n");

516 
˛o£
;

520 
	`¥ötf
("\nTEST SLAVE REPLY:\n");

521 
	`modbus_£t_¶ave
(
˘x
, 
INVALID_SERVER_ID
);

522 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

523 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

524 i‡(
u£_backíd
 =
RTU
) {

525 c⁄° 
RAW_REQ_LENGTH
 = 6;

526 
uöt8_t
 
øw_ªq
[] = { 
INVALID_SERVER_ID
, 0x03, 0x00, 0x01, 0x01, 0x01 };

528 
uöt8_t
 
øw_övÆid_ªq
[] = { 
INVALID_SERVER_ID
, 0x03, 0x00, 0x01, 0xFF, 0xFF };

529 c⁄° 
RAW_REP_LENGTH
 = 7;

530 
uöt8_t
 
øw_ªp
[] = { 
INVALID_SERVER_ID
, 0x03, 0x04, 0, 0, 0, 0 };

531 
uöt8_t
 
r•
[
MODBUS_RTU_MAX_ADU_LENGTH
];

534 
	`¥ötf
("1/5-A Nÿª•⁄£ from sœvê%d: ", 
INVALID_SERVER_ID
);

536 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

537 
	`¥ötf
("OK\n");

539 
	`¥ötf
("FAILED\n");

540 
˛o£
;

551 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªq
, 
RAW_REQ_LENGTH
 * (
uöt8_t
));

552 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªp
, 
RAW_REP_LENGTH
 * (
uöt8_t
));

553 
rc
 = 
	`modbus_ª˚ive_c⁄fúm©i⁄
(
˘x
, 
r•
);

555 
	`¥ötf
("1/5-B NoÑesponse from slave %d on indication/confirmation messages: ",

556 
INVALID_SERVER_ID
);

558 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

559 
	`¥ötf
("OK\n");

561 
	`¥ötf
("FAILED (%d)\n", 
rc
);

562 
˛o£
;

566 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_övÆid_ªq
, 
RAW_REQ_LENGTH
 * (
uöt8_t
));

567 
rc
 = 
	`modbus_ª˚ive_c⁄fúm©i⁄
(
˘x
, 
r•
);

569 
	`¥ötf
("1/5-C NoÑesponse from slave %d with invalidÑequest: ",

570 
INVALID_SERVER_ID
);

572 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

573 
	`¥ötf
("OK\n");

575 
	`¥ötf
("FAILED (%d)\n", 
rc
);

576 
˛o£
;

580 
	`¥ötf
("1/4 Re•⁄£ from sœvê%d: ", 
INVALID_SERVER_ID
);

582 i‡(
rc
 =
UT_REGISTERS_NB
) {

583 
	`¥ötf
("OK\n");

585 
	`¥ötf
("FAILED\n");

586 
˛o£
;

590 
rc
 = 
	`modbus_£t_¶ave
(
˘x
, 
MODBUS_BROADCAST_ADDRESS
);

591 i‡(
rc
 == -1) {

592 
	`¥ötf
("Invalid broacastáddress\n");

593 
˛o£
;

596 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

597 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

598 
	`¥ötf
("2/5 Replyáfterá broadcast query: ");

599 i‡(
rc
 =
UT_REGISTERS_NB
) {

600 
	`¥ötf
("OK\n");

602 
	`¥ötf
("FAILED\n");

603 
˛o£
;

607 i‡(
u£_backíd
 =
RTU
) {

608 
	`modbus_£t_¶ave
(
˘x
, 
SERVER_ID
);

610 
	`modbus_£t_¶ave
(
˘x
, 
MODBUS_TCP_SLAVE
);

613 
	`¥ötf
("3/5 Report slave ID: \n");

615 
rc
 = 
	`modbus_ªp‹t_¶ave_id
(
˘x
, 
èb_Ω_bôs
);

616 i‡(
rc
 == -1) {

617 
	`¥ötf
("FAILED\n");

618 
˛o£
;

622 i‡(
rc
 > 0) {

623 
	`¥ötf
("OK SœvêID i†%d\n", 
èb_Ω_bôs
[0]);

625 
	`¥ötf
("FAILED\n");

626 
˛o£
;

630 i‡(
rc
 > 1 && 
èb_Ω_bôs
[1] == 0xFF) {

631 
	`¥ötf
("OK Ru¿Sètu†Indiˇt‹ i†%s\n", 
èb_Ω_bôs
[1] ? "ON" : "OFF");

633 
	`¥ötf
("FAILED\n");

634 
˛o£
;

638 i‡(
rc
 > 2) {

639 
	`¥ötf
("Additional data: ");

640 
i
=2; i < 
rc
; i++) {

641 
	`¥ötf
("%c", 
èb_Ω_bôs
[
i
]);

643 
	`¥ötf
("\n");

646 
	`¥ötf
("5/5 Response withán invalid TID or slave: ");

647 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS_INVALID_TID_OR_SLAVE
,

648 1, 
èb_Ω_ªgi°îs
);

649 i‡(
rc
 == -1) {

650 
	`¥ötf
("OK\n");

652 
	`¥ötf
("FAILED\n");

653 
˛o£
;

657 
	`modbus_gë_ª•⁄£_timeout
(
˘x
, &
ﬁd_ª•⁄£_timeout
);

660 
ª•⁄£_timeout
.
tv_£c
 = 0;

661 
ª•⁄£_timeout
.
tv_u£c
 = 0;

662 
	`modbus_£t_ª•⁄£_timeout
(
˘x
, &
ª•⁄£_timeout
);

664 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

665 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

666 
	`¥ötf
("4/4 Too shortÅimeout: ");

667 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

668 
	`¥ötf
("OK\n");

670 
	`¥ötf
("FAILED (can fail on slow systems or Windows)\n");

674 
	`modbus_£t_ª•⁄£_timeout
(
˘x
, &
ﬁd_ª•⁄£_timeout
);

680 
	`¥ötf
("\nTEST BAD RESPONSE ERROR:\n");

683 
èb_Ω_ªgi°îs_bad
 = (
uöt16_t
 *Ë
	`mÆloc
(

684 
UT_REGISTERS_NB_SPECIAL
 * (
uöt16_t
));

685 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

686 
UT_REGISTERS_NB_SPECIAL
, 
èb_Ω_ªgi°îs_bad
);

687 
	`¥ötf
("* modbus_read_registers: ");

688 i‡(
rc
 =-1 && 
î∫o
 =
EMBBADDATA
) {

689 
	`¥ötf
("OK\n");

691 
	`¥ötf
("FAILED\n");

692 
˛o£
;

695 
	`‰ì
(
èb_Ω_ªgi°îs_bad
);

698 
	`¥ötf
("\nTEST MANUAL EXCEPTION:\n");

700 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS_SPECIAL
,

701 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

702 
	`¥ötf
("* modbus_read_registersát specialáddress: ");

703 i‡(
rc
 =-1 && 
î∫o
 =
EMBXSBUSY
) {

704 
	`¥ötf
("OK\n");

706 
	`¥ötf
("FAILED\n");

707 
˛o£
;

711 
	`¥ötf
("\nTEST RAW REQUEST:\n");

713 c⁄° 
RAW_REQ_LENGTH
 = 6;

714 
uöt8_t
 
øw_ªq
[] = { (
u£_backíd
 =
RTU
Ë? 
SERVER_ID
 : 0xFF,

716 
ªq_Àngth
;

717 
uöt8_t
 
r•
[
MODBUS_TCP_MAX_ADU_LENGTH
];

719 
ªq_Àngth
 = 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªq
,

720 
RAW_REQ_LENGTH
 * (
uöt8_t
));

722 
	`¥ötf
("* modbus_send_raw_request: ");

723 i‡((
u£_backíd
 =
RTU
 && 
ªq_Àngth
 =(
RAW_REQ_LENGTH
 + 2)) ||

724 ((
u£_backíd
 =
TCP
 || u£_backíd =
TCP_PI
) &&

725 
ªq_Àngth
 =(
RAW_REQ_LENGTH
 + 6))) {

726 
	`¥ötf
("OK\n");

728 
	`¥ötf
("FAILED (%d)\n", 
ªq_Àngth
);

729 
˛o£
;

732 
	`¥ötf
("* modbus_receive_confirmation: ");

733 
rc
 = 
	`modbus_ª˚ive_c⁄fúm©i⁄
(
˘x
, 
r•
);

734 i‡((
u£_backíd
 =
RTU
 && 
rc
 == 15) ||

735 ((
u£_backíd
 =
TCP
 || u£_backíd =
TCP_PI
) &&

736 
rc
 == 19)) {

737 
	`¥ötf
("OK\n");

739 
	`¥ötf
("FAILED (%d)\n", 
rc
);

740 
˛o£
;

744 
	`¥ötf
("\nALL TESTS PASS WITH SUCCESS.\n");

746 
˛o£
:

748 
	`‰ì
(
èb_Ω_bôs
);

749 
	`‰ì
(
èb_Ω_ªgi°îs
);

752 
	`modbus_˛o£
(
˘x
);

753 
	`modbus_‰ì
(
˘x
);

756 
	}
}

	@unit-test-client_safe.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<î∫o.h
>

23 
	~<modbus.h
>

25 
	~"unô-ã°.h
"

28 
	mTCP
,

29 
	mTCP_PI
,

30 
	mRTU


33 
	$maö
(
¨gc
, *
¨gv
[])

35 
uöt8_t
 *
èb_Ω_bôs
;

36 
uöt16_t
 *
èb_Ω_ªgi°îs
;

37 
uöt16_t
 *
èb_Ω_ªgi°îs_bad
;

38 
modbus_t
 *
˘x
;

39 
i
;

40 
uöt8_t
 
vÆue
;

41 
nb_poöts
;

42 
rc
;

43 
ªÆ
;

44 
timevÆ
 
ﬁd_ª•⁄£_timeout
;

45 
timevÆ
 
ª•⁄£_timeout
;

46 
u£_backíd
;

48 i‡(
¨gc
 > 1) {

49 i‡(
	`°rcmp
(
¨gv
[1], "tcp") == 0) {

50 
u£_backíd
 = 
TCP
;

51 } i‡(
	`°rcmp
(
¨gv
[1], "tcppi") == 0) {

52 
u£_backíd
 = 
TCP_PI
;

53 } i‡(
	`°rcmp
(
¨gv
[1], "rtu") == 0) {

54 
u£_backíd
 = 
RTU
;

56 
	`¥ötf
("Ußge:\¿ %†[t˝|t˝pi|πu] - Modbu†˛õ¡ f‹ unôÅe°ög\n\n", 
¨gv
[0]);

57 
	`exô
(1);

61 
u£_backíd
 = 
TCP
;

64 i‡(
u£_backíd
 =
TCP
) {

65 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

66 } i‡(
u£_backíd
 =
TCP_PI
) {

67 
˘x
 = 
	`modbus_√w_t˝_pi
("::1", "1502");

69 
˘x
 = 
	`modbus_√w_πu
("/dev/ttyUSB1", 115200, 'N', 8, 1);

71 i‡(
˘x
 =
NULL
) {

72 
	`Ârötf
(
°dîr
, "UnableÅoállocateÜibmodbus context\n");

75 
	`modbus_£t_debug
(
˘x
, 
TRUE
);

76 
	`modbus_£t_îr‹_ªcovîy
(
˘x
,

77 
MODBUS_ERROR_RECOVERY_LINK
 |

78 
MODBUS_ERROR_RECOVERY_PROTOCOL
);

80 i‡(
u£_backíd
 =
RTU
) {

81 
	`modbus_£t_¶ave
(
˘x
, 
SERVER_ID
);

84 i‡(
	`modbus_c⁄√˘
(
˘x
) == -1) {

85 
	`Ârötf
(
°dîr
, "Connection failed: %s\n",

86 
	`modbus_°ªº‹
(
î∫o
));

87 
	`modbus_‰ì
(
˘x
);

92 
nb_poöts
 = (
UT_BITS_NB
 > 
UT_INPUT_BITS_NB
) ? UT_BITS_NB : UT_INPUT_BITS_NB;

93 
èb_Ω_bôs
 = (
uöt8_t
 *Ë
	`mÆloc
(
nb_poöts
 * (uint8_t));

94 
	`mem£t
(
èb_Ω_bôs
, 0, 
nb_poöts
 * (
uöt8_t
));

97 
nb_poöts
 = (
UT_REGISTERS_NB
 > 
UT_INPUT_REGISTERS_NB
) ?

98 
UT_REGISTERS_NB
 : 
UT_INPUT_REGISTERS_NB
;

99 
èb_Ω_ªgi°îs
 = (
uöt16_t
 *Ë
	`mÆloc
(
nb_poöts
 * (uint16_t));

100 
	`mem£t
(
èb_Ω_ªgi°îs
, 0, 
nb_poöts
 * (
uöt16_t
));

102 
	`¥ötf
("** UNIT TESTING **\n");

104 
	`¥ötf
("\nTEST WRITE/READ:\n");

109 
rc
 = 
	`modbus_wrôe_bô
(
˘x
, 
UT_BITS_ADDRESS
, 
ON
);

110 
	`¥ötf
("1/2 modbus_write_bit: ");

111 i‡(
rc
 == 1) {

112 
	`¥ötf
("OK\n");

114 
	`¥ötf
("FAILED\n");

115 
˛o£
;

118 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
, 1, 
èb_Ω_bôs
);

119 
	`¥ötf
("2/2 modbus_read_bits: ");

120 i‡(
rc
 != 1) {

121 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

122 
˛o£
;

125 i‡(
èb_Ω_bôs
[0] !
ON
) {

126 
	`¥ötf
("FAILED (%0X !%0X)\n", 
èb_Ω_bôs
[0], 
ON
);

127 
˛o£
;

129 
	`¥ötf
("OK\n");

134 
uöt8_t
 
èb_vÆue
[
UT_BITS_NB
];

136 
	`modbus_£t_bôs_‰om_byãs
(
èb_vÆue
, 0, 
UT_BITS_NB
, 
UT_BITS_TAB
);

137 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

138 
UT_BITS_NB
, 
èb_vÆue
);

139 
	`¥ötf
("1/2 modbus_write_bits: ");

140 i‡(
rc
 =
UT_BITS_NB
) {

141 
	`¥ötf
("OK\n");

143 
	`¥ötf
("FAILED\n");

144 
˛o£
;

148 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
, 
UT_BITS_NB
, 
èb_Ω_bôs
);

149 
	`¥ötf
("2/2 modbus_read_bits: ");

150 i‡(
rc
 !
UT_BITS_NB
) {

151 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

152 
˛o£
;

155 
i
 = 0;

156 
nb_poöts
 = 
UT_BITS_NB
;

157 
nb_poöts
 > 0) {

158 
nb_bôs
 = (
nb_poöts
 > 8) ? 8 :Çb_points;

160 
vÆue
 = 
	`modbus_gë_byã_‰om_bôs
(
èb_Ω_bôs
, 
i
*8, 
nb_bôs
);

161 i‡(
vÆue
 !
UT_BITS_TAB
[
i
]) {

162 
	`¥ötf
("FAILED (%0X !%0X)\n", 
vÆue
, 
UT_BITS_TAB
[
i
]);

163 
˛o£
;

166 
nb_poöts
 -
nb_bôs
;

167 
i
++;

169 
	`¥ötf
("OK\n");

173 
rc
 = 
	`modbus_ªad_öput_bôs
(
˘x
, 
UT_INPUT_BITS_ADDRESS
,

174 
UT_INPUT_BITS_NB
, 
èb_Ω_bôs
);

175 
	`¥ötf
("1/1 modbus_read_input_bits: ");

177 i‡(
rc
 !
UT_INPUT_BITS_NB
) {

178 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

179 
˛o£
;

182 
i
 = 0;

183 
nb_poöts
 = 
UT_INPUT_BITS_NB
;

184 
nb_poöts
 > 0) {

185 
nb_bôs
 = (
nb_poöts
 > 8) ? 8 :Çb_points;

187 
vÆue
 = 
	`modbus_gë_byã_‰om_bôs
(
èb_Ω_bôs
, 
i
*8, 
nb_bôs
);

188 i‡(
vÆue
 !
UT_INPUT_BITS_TAB
[
i
]) {

189 
	`¥ötf
("FAILED (%0X !%0X)\n", 
vÆue
, 
UT_INPUT_BITS_TAB
[
i
]);

190 
˛o£
;

193 
nb_poöts
 -
nb_bôs
;

194 
i
++;

196 
	`¥ötf
("OK\n");

201 
rc
 = 
	`modbus_wrôe_ªgi°î
(
˘x
, 
UT_REGISTERS_ADDRESS
, 0x1234);

202 
	`¥ötf
("1/2 modbus_write_register: ");

203 i‡(
rc
 == 1) {

204 
	`¥ötf
("OK\n");

206 
	`¥ötf
("FAILED\n");

207 
˛o£
;

210 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

211 1, 
èb_Ω_ªgi°îs
);

212 
	`¥ötf
("2/2 modbus_read_registers: ");

213 i‡(
rc
 != 1) {

214 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

215 
˛o£
;

218 i‡(
èb_Ω_ªgi°îs
[0] != 0x1234) {

219 
	`¥ötf
("FAILED (%0X != %0X)\n",

220 
èb_Ω_ªgi°îs
[0], 0x1234);

221 
˛o£
;

223 
	`¥ötf
("OK\n");

227 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

228 
UT_REGISTERS_NB
, 
UT_REGISTERS_TAB
);

229 
	`¥ötf
("1/5 modbus_write_registers: ");

230 i‡(
rc
 =
UT_REGISTERS_NB
) {

231 
	`¥ötf
("OK\n");

233 
	`¥ötf
("FAILED\n");

234 
˛o£
;

237 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

238 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

239 
	`¥ötf
("2/5 modbus_read_registers: ");

240 i‡(
rc
 !
UT_REGISTERS_NB
) {

241 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

242 
˛o£
;

245 
i
=0; i < 
UT_REGISTERS_NB
; i++) {

246 i‡(
èb_Ω_ªgi°îs
[
i
] !
UT_REGISTERS_TAB
[i]) {

247 
	`¥ötf
("FAILED (%0X != %0X)\n",

248 
èb_Ω_ªgi°îs
[
i
],

249 
UT_REGISTERS_TAB
[
i
]);

250 
˛o£
;

253 
	`¥ötf
("OK\n");

255 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

256 0, 
èb_Ω_ªgi°îs
);

257 
	`¥ötf
("3/5 modbus_read_registers (0): ");

258 i‡(
rc
 != 0) {

259 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

260 
˛o£
;

262 
	`¥ötf
("OK\n");

264 
nb_poöts
 = (
UT_REGISTERS_NB
 >

265 
UT_INPUT_REGISTERS_NB
) ?

266 
UT_REGISTERS_NB
 : 
UT_INPUT_REGISTERS_NB
;

267 
	`mem£t
(
èb_Ω_ªgi°îs
, 0, 
nb_poöts
 * (
uöt16_t
));

272 
rc
 = 
	`modbus_wrôe_™d_ªad_ªgi°îs
(
˘x
,

273 
UT_REGISTERS_ADDRESS
 + 1, 
UT_REGISTERS_NB
 - 1,

274 
èb_Ω_ªgi°îs
,

275 
UT_REGISTERS_ADDRESS
,

276 
UT_REGISTERS_NB
,

277 
èb_Ω_ªgi°îs
);

278 
	`¥ötf
("4/5 modbus_write_and_read_registers: ");

279 i‡(
rc
 !
UT_REGISTERS_NB
) {

280 
	`¥ötf
("FAILED (nbÖoöt†%d !%d)\n", 
rc
, 
UT_REGISTERS_NB
);

281 
˛o£
;

284 i‡(
èb_Ω_ªgi°îs
[0] !
UT_REGISTERS_TAB
[0]) {

285 
	`¥ötf
("FAILED (%0X != %0X)\n",

286 
èb_Ω_ªgi°îs
[0], 
UT_REGISTERS_TAB
[0]);

289 
i
=1; i < 
UT_REGISTERS_NB
; i++) {

290 i‡(
èb_Ω_ªgi°îs
[
i
] != 0) {

291 
	`¥ötf
("FAILED (%0X != %0X)\n",

292 
èb_Ω_ªgi°îs
[
i
], 0);

293 
˛o£
;

296 
	`¥ötf
("OK\n");

302 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 
UT_INPUT_REGISTERS_ADDRESS
,

303 
UT_INPUT_REGISTERS_NB
,

304 
èb_Ω_ªgi°îs
);

305 
	`¥ötf
("1/1 modbus_read_input_registers: ");

306 i‡(
rc
 !
UT_INPUT_REGISTERS_NB
) {

307 
	`¥ötf
("FAILED (nbÖoöt†%d)\n", 
rc
);

308 
˛o£
;

311 
i
=0; i < 
UT_INPUT_REGISTERS_NB
; i++) {

312 i‡(
èb_Ω_ªgi°îs
[
i
] !
UT_INPUT_REGISTERS_TAB
[i]) {

313 
	`¥ötf
("FAILED (%0X != %0X)\n",

314 
èb_Ω_ªgi°îs
[
i
], 
UT_INPUT_REGISTERS_TAB
[i]);

315 
˛o£
;

318 
	`¥ötf
("OK\n");

320 
	`¥ötf
("\nTEST FLOATS\n");

322 
	`¥ötf
("1/2 Set float: ");

323 
	`modbus_£t_Êﬂt
(
UT_REAL
, 
èb_Ω_ªgi°îs
);

324 i‡(
èb_Ω_ªgi°îs
[1] =(
UT_IREAL
 >> 16) &&

325 
èb_Ω_ªgi°îs
[0] =(
UT_IREAL
 & 0xFFFF)) {

326 
	`¥ötf
("OK\n");

328 
	`¥ötf
("FAILED (%x != %x)\n",

329 *((
uöt32_t
 *)
èb_Ω_ªgi°îs
), 
UT_IREAL
);

330 
˛o£
;

333 
	`¥ötf
("2/2 Get float: ");

334 
ªÆ
 = 
	`modbus_gë_Êﬂt
(
èb_Ω_ªgi°îs
);

335 i‡(
ªÆ
 =
UT_REAL
) {

336 
	`¥ötf
("OK\n");

338 
	`¥ötf
("FAILED (%‡!%f)\n", 
ªÆ
, 
UT_REAL
);

339 
˛o£
;

342 
	`¥ötf
("\nAtÅhisÖoint,Érror messages doesn't meanÅheÅest has failed\n");

345 
	`¥ötf
("\nTEST ILLEGAL DATA ADDRESS:\n");

350 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

351 
UT_BITS_NB
 + 1, 
èb_Ω_bôs
);

352 
	`¥ötf
("* modbus_read_bits: ");

353 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

354 
	`¥ötf
("OK\n");

356 
	`¥ötf
("FAILED\n");

357 
˛o£
;

360 
rc
 = 
	`modbus_ªad_öput_bôs
(
˘x
, 
UT_INPUT_BITS_ADDRESS
,

361 
UT_INPUT_BITS_NB
 + 1, 
èb_Ω_bôs
);

362 
	`¥ötf
("* modbus_read_input_bits: ");

363 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
)

364 
	`¥ötf
("OK\n");

366 
	`¥ötf
("FAILED\n");

367 
˛o£
;

370 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

371 
UT_REGISTERS_NB
 + 1, 
èb_Ω_ªgi°îs
);

372 
	`¥ötf
("* modbus_read_registers: ");

373 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
)

374 
	`¥ötf
("OK\n");

376 
	`¥ötf
("FAILED\n");

377 
˛o£
;

380 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 
UT_INPUT_REGISTERS_ADDRESS
,

381 
UT_INPUT_REGISTERS_NB
 + 1,

382 
èb_Ω_ªgi°îs
);

383 
	`¥ötf
("* modbus_read_input_registers: ");

384 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
)

385 
	`¥ötf
("OK\n");

387 
	`¥ötf
("FAILED\n");

388 
˛o£
;

391 
rc
 = 
	`modbus_wrôe_bô
(
˘x
, 
UT_BITS_ADDRESS
 + 
UT_BITS_NB
, 
ON
);

392 
	`¥ötf
("* modbus_write_bit: ");

393 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

394 
	`¥ötf
("OK\n");

396 
	`¥ötf
("FAILED\n");

397 
˛o£
;

400 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
UT_BITS_ADDRESS
 + 
UT_BITS_NB
,

401 
UT_BITS_NB
, 
èb_Ω_bôs
);

402 
	`¥ötf
("* modbus_write_coils: ");

403 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

404 
	`¥ötf
("OK\n");

406 
	`¥ötf
("FAILED\n");

407 
˛o£
;

410 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
 + 
UT_REGISTERS_NB
,

411 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

412 
	`¥ötf
("* modbus_write_registers: ");

413 i‡(
rc
 =-1 && 
î∫o
 =
EMBXILADD
) {

414 
	`¥ötf
("OK\n");

416 
	`¥ötf
("FAILED\n");

417 
˛o£
;

422 
	`¥ötf
("\nTEST TOO MANY DATA ERROR:\n");

424 
rc
 = 
	`modbus_ªad_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

425 
MODBUS_MAX_READ_BITS
 + 1, 
èb_Ω_bôs
);

426 
	`¥ötf
("* modbus_read_bits: ");

427 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

428 
	`¥ötf
("OK\n");

430 
	`¥ötf
("FAILED\n");

431 
˛o£
;

434 
rc
 = 
	`modbus_ªad_öput_bôs
(
˘x
, 
UT_INPUT_BITS_ADDRESS
,

435 
MODBUS_MAX_READ_BITS
 + 1, 
èb_Ω_bôs
);

436 
	`¥ötf
("* modbus_read_input_bits: ");

437 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

438 
	`¥ötf
("OK\n");

440 
	`¥ötf
("FAILED\n");

441 
˛o£
;

444 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

445 
MODBUS_MAX_READ_REGISTERS
 + 1,

446 
èb_Ω_ªgi°îs
);

447 
	`¥ötf
("* modbus_read_registers: ");

448 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

449 
	`¥ötf
("OK\n");

451 
	`¥ötf
("FAILED\n");

452 
˛o£
;

455 
rc
 = 
	`modbus_ªad_öput_ªgi°îs
(
˘x
, 
UT_INPUT_REGISTERS_ADDRESS
,

456 
MODBUS_MAX_READ_REGISTERS
 + 1,

457 
èb_Ω_ªgi°îs
);

458 
	`¥ötf
("* modbus_read_input_registers: ");

459 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

460 
	`¥ötf
("OK\n");

462 
	`¥ötf
("FAILED\n");

463 
˛o£
;

466 
rc
 = 
	`modbus_wrôe_bôs
(
˘x
, 
UT_BITS_ADDRESS
,

467 
MODBUS_MAX_WRITE_BITS
 + 1, 
èb_Ω_bôs
);

468 
	`¥ötf
("* modbus_write_bits: ");

469 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

470 
	`¥ötf
("OK\n");

472 
˛o£
;

473 
	`¥ötf
("FAILED\n");

476 
rc
 = 
	`modbus_wrôe_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

477 
MODBUS_MAX_WRITE_REGISTERS
 + 1,

478 
èb_Ω_ªgi°îs
);

479 
	`¥ötf
("* modbus_write_registers: ");

480 i‡(
rc
 =-1 && 
î∫o
 =
EMBMDATA
) {

481 
	`¥ötf
("OK\n");

483 
	`¥ötf
("FAILED\n");

484 
˛o£
;

488 
	`¥ötf
("\nTEST SLAVE REPLY:\n");

489 
	`modbus_£t_¶ave
(
˘x
, 
INVALID_SERVER_ID
);

490 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

491 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

492 i‡(
u£_backíd
 =
RTU
) {

493 c⁄° 
RAW_REQ_LENGTH
 = 6;

494 
uöt8_t
 
øw_ªq
[] = { 
INVALID_SERVER_ID
, 0x03, 0x00, 0x01, 0x01, 0x01 };

496 
uöt8_t
 
øw_övÆid_ªq
[] = { 
INVALID_SERVER_ID
, 0x03, 0x00, 0x01, 0xFF, 0xFF };

497 c⁄° 
RAW_REP_LENGTH
 = 7;

498 
uöt8_t
 
øw_ªp
[] = { 
INVALID_SERVER_ID
, 0x03, 0x04, 0, 0, 0, 0 };

499 
uöt8_t
 
r•
[
MODBUS_RTU_MAX_ADU_LENGTH
];

502 
	`¥ötf
("1/5-A Nÿª•⁄£ from sœvê%d: ", 
INVALID_SERVER_ID
);

504 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

505 
	`¥ötf
("OK\n");

507 
	`¥ötf
("FAILED\n");

508 
˛o£
;

519 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªq
, 
RAW_REQ_LENGTH
 * (
uöt8_t
));

520 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªp
, 
RAW_REP_LENGTH
 * (
uöt8_t
));

521 
rc
 = 
	`modbus_ª˚ive_c⁄fúm©i⁄
(
˘x
, 
r•
);

523 
	`¥ötf
("1/5-B NoÑesponse from slave %d on indication/confirmation messages: ",

524 
INVALID_SERVER_ID
);

526 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

527 
	`¥ötf
("OK\n");

529 
	`¥ötf
("FAILED (%d)\n", 
rc
);

530 
˛o£
;

534 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_övÆid_ªq
, 
RAW_REQ_LENGTH
 * (
uöt8_t
));

535 
rc
 = 
	`modbus_ª˚ive_c⁄fúm©i⁄
(
˘x
, 
r•
);

537 
	`¥ötf
("1/5-C NoÑesponse from slave %d with invalidÑequest: ",

538 
INVALID_SERVER_ID
);

540 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

541 
	`¥ötf
("OK\n");

543 
	`¥ötf
("FAILED (%d)\n", 
rc
);

544 
˛o£
;

548 
	`¥ötf
("1/4 Re•⁄£ from sœvê%d: ", 
INVALID_SERVER_ID
);

550 i‡(
rc
 =
UT_REGISTERS_NB
) {

551 
	`¥ötf
("OK\n");

553 
	`¥ötf
("FAILED\n");

554 
˛o£
;

558 
rc
 = 
	`modbus_£t_¶ave
(
˘x
, 
MODBUS_BROADCAST_ADDRESS
);

559 i‡(
rc
 == -1) {

560 
	`¥ötf
("Invalid broacastáddress\n");

561 
˛o£
;

564 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

565 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

566 
	`¥ötf
("2/5 Replyáfterá broadcast query: ");

567 i‡(
rc
 =
UT_REGISTERS_NB
) {

568 
	`¥ötf
("OK\n");

570 
	`¥ötf
("FAILED\n");

571 
˛o£
;

575 i‡(
u£_backíd
 =
RTU
) {

576 
	`modbus_£t_¶ave
(
˘x
, 
SERVER_ID
);

578 
	`modbus_£t_¶ave
(
˘x
, 
MODBUS_TCP_SLAVE
);

581 
	`¥ötf
("3/5 Report slave ID: \n");

583 
rc
 = 
	`modbus_ªp‹t_¶ave_id
(
˘x
, 
èb_Ω_bôs
);

584 i‡(
rc
 == -1) {

585 
	`¥ötf
("FAILED\n");

586 
˛o£
;

590 i‡(
rc
 > 0) {

591 
	`¥ötf
("OK SœvêID i†%d\n", 
èb_Ω_bôs
[0]);

593 
	`¥ötf
("FAILED\n");

594 
˛o£
;

598 i‡(
rc
 > 1 && 
èb_Ω_bôs
[1] == 0xFF) {

599 
	`¥ötf
("OK Ru¿Sètu†Indiˇt‹ i†%s\n", 
èb_Ω_bôs
[1] ? "ON" : "OFF");

601 
	`¥ötf
("FAILED\n");

602 
˛o£
;

606 i‡(
rc
 > 2) {

607 
	`¥ötf
("Additional data: ");

608 
i
=2; i < 
rc
; i++) {

609 
	`¥ötf
("%c", 
èb_Ω_bôs
[
i
]);

611 
	`¥ötf
("\n");

614 
	`¥ötf
("5/5 Response withán invalid TID or slave: ");

615 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS_INVALID_TID_OR_SLAVE
,

616 1, 
èb_Ω_ªgi°îs
);

617 i‡(
rc
 == -1) {

618 
	`¥ötf
("OK\n");

620 
	`¥ötf
("FAILED\n");

621 
˛o£
;

625 
	`modbus_gë_ª•⁄£_timeout
(
˘x
, &
ﬁd_ª•⁄£_timeout
);

628 
ª•⁄£_timeout
.
tv_£c
 = 0;

629 
ª•⁄£_timeout
.
tv_u£c
 = 0;

630 
	`modbus_£t_ª•⁄£_timeout
(
˘x
, &
ª•⁄£_timeout
);

632 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

633 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

634 
	`¥ötf
("4/4 Too shortÅimeout: ");

635 i‡(
rc
 =-1 && 
î∫o
 =
ETIMEDOUT
) {

636 
	`¥ötf
("OK\n");

638 
	`¥ötf
("FAILED (can fail on slow systems or Windows)\n");

642 
	`modbus_£t_ª•⁄£_timeout
(
˘x
, &
ﬁd_ª•⁄£_timeout
);

648 
	`¥ötf
("\nTEST BAD RESPONSE ERROR:\n");

651 
èb_Ω_ªgi°îs_bad
 = (
uöt16_t
 *Ë
	`mÆloc
(

652 
UT_REGISTERS_NB_SPECIAL
 * (
uöt16_t
));

653 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS
,

654 
UT_REGISTERS_NB_SPECIAL
, 
èb_Ω_ªgi°îs_bad
);

655 
	`¥ötf
("* modbus_read_registers: ");

656 i‡(
rc
 =-1 && 
î∫o
 =
EMBBADDATA
) {

657 
	`¥ötf
("OK\n");

659 
	`¥ötf
("FAILED\n");

660 
˛o£
;

663 
	`‰ì
(
èb_Ω_ªgi°îs_bad
);

666 
	`¥ötf
("\nTEST MANUAL EXCEPTION:\n");

668 
rc
 = 
	`modbus_ªad_ªgi°îs
(
˘x
, 
UT_REGISTERS_ADDRESS_SPECIAL
,

669 
UT_REGISTERS_NB
, 
èb_Ω_ªgi°îs
);

670 
	`¥ötf
("* modbus_read_registersát specialáddress: ");

671 i‡(
rc
 =-1 && 
î∫o
 =
EMBXSBUSY
) {

672 
	`¥ötf
("OK\n");

674 
	`¥ötf
("FAILED\n");

675 
˛o£
;

679 
	`¥ötf
("\nTEST RAW REQUEST:\n");

681 c⁄° 
RAW_REQ_LENGTH
 = 6;

682 
uöt8_t
 
øw_ªq
[] = { (
u£_backíd
 =
RTU
Ë? 
SERVER_ID
 : 0xFF,

684 
ªq_Àngth
;

685 
uöt8_t
 
r•
[
MODBUS_TCP_MAX_ADU_LENGTH
];

687 
ªq_Àngth
 = 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªq
,

688 
RAW_REQ_LENGTH
 * (
uöt8_t
));

690 
	`¥ötf
("* modbus_send_raw_request: ");

691 i‡((
u£_backíd
 =
RTU
 && 
ªq_Àngth
 =(
RAW_REQ_LENGTH
 + 2)) ||

692 ((
u£_backíd
 =
TCP
 || u£_backíd =
TCP_PI
) &&

693 
ªq_Àngth
 =(
RAW_REQ_LENGTH
 + 6))) {

694 
	`¥ötf
("OK\n");

696 
	`¥ötf
("FAILED (%d)\n", 
ªq_Àngth
);

697 
˛o£
;

700 
	`¥ötf
("* modbus_receive_confirmation: ");

701 
rc
 = 
	`modbus_ª˚ive_c⁄fúm©i⁄
(
˘x
, 
r•
);

702 i‡((
u£_backíd
 =
RTU
 && 
rc
 == 15) ||

703 ((
u£_backíd
 =
TCP
 || u£_backíd =
TCP_PI
) &&

704 
rc
 == 19)) {

705 
	`¥ötf
("OK\n");

707 
	`¥ötf
("FAILED (%d)\n", 
rc
);

708 
˛o£
;

712 
	`¥ötf
("\nALL TESTS PASS WITH SUCCESS.\n");

714 
˛o£
:

716 
	`‰ì
(
èb_Ω_bôs
);

717 
	`‰ì
(
èb_Ω_ªgi°îs
);

720 
	`modbus_˛o£
(
˘x
);

721 
	`modbus_‰ì
(
˘x
);

724 
	}
}

	@unit-test-server.c

18 
	~<°dio.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

22 
	~<î∫o.h
>

23 
	~<modbus.h
>

25 
	~"unô-ã°.h
"

28 
	mTCP
,

29 
	mTCP_PI
,

30 
	mRTU


33 
	$maö
(
¨gc
, *
¨gv
[])

35 
sockë
;

36 
modbus_t
 *
˘x
;

37 
modbus_m≠pög_t
 *
mb_m≠pög
;

38 
rc
;

39 
i
;

40 
u£_backíd
;

41 
uöt8_t
 *
quîy
;

42 
hódî_Àngth
;

44 i‡(
¨gc
 > 1) {

45 i‡(
	`°rcmp
(
¨gv
[1], "tcp") == 0) {

46 
u£_backíd
 = 
TCP
;

47 } i‡(
	`°rcmp
(
¨gv
[1], "tcppi") == 0) {

48 
u£_backíd
 = 
TCP_PI
;

49 } i‡(
	`°rcmp
(
¨gv
[1], "rtu") == 0) {

50 
u£_backíd
 = 
RTU
;

52 
	`¥ötf
("Ußge:\¿ %†[t˝|t˝pi|πu] - Modbu†£rvî f‹ unôÅe°ög\n\n", 
¨gv
[0]);

57 
u£_backíd
 = 
TCP
;

60 i‡(
u£_backíd
 =
TCP
) {

61 
˘x
 = 
	`modbus_√w_t˝
("127.0.0.1", 1502);

62 
quîy
 = 
	`mÆloc
(
MODBUS_TCP_MAX_ADU_LENGTH
);

63 } i‡(
u£_backíd
 =
TCP_PI
) {

64 
˘x
 = 
	`modbus_√w_t˝_pi
("::0", "1502");

65 
quîy
 = 
	`mÆloc
(
MODBUS_TCP_MAX_ADU_LENGTH
);

67 
˘x
 = 
	`modbus_√w_πu
("/dev/ttyUSB0", 115200, 'N', 8, 1);

68 
	`modbus_£t_¶ave
(
˘x
, 
SERVER_ID
);

69 
quîy
 = 
	`mÆloc
(
MODBUS_RTU_MAX_ADU_LENGTH
);

71 
hódî_Àngth
 = 
	`modbus_gë_hódî_Àngth
(
˘x
);

73 
	`modbus_£t_debug
(
˘x
, 
TRUE
);

75 
mb_m≠pög
 = 
	`modbus_m≠pög_√w
(

76 
UT_BITS_ADDRESS
 + 
UT_BITS_NB
,

77 
UT_INPUT_BITS_ADDRESS
 + 
UT_INPUT_BITS_NB
,

78 
UT_REGISTERS_ADDRESS
 + 
UT_REGISTERS_NB
,

79 
UT_INPUT_REGISTERS_ADDRESS
 + 
UT_INPUT_REGISTERS_NB
);

80 i‡(
mb_m≠pög
 =
NULL
) {

81 
	`Ârötf
(
°dîr
, "FailedÅoállocateÅhe mapping: %s\n",

82 
	`modbus_°ªº‹
(
î∫o
));

83 
	`modbus_‰ì
(
˘x
);

91 
	`modbus_£t_bôs_‰om_byãs
(
mb_m≠pög
->
èb_öput_bôs
,

92 
UT_INPUT_BITS_ADDRESS
, 
UT_INPUT_BITS_NB
,

93 
UT_INPUT_BITS_TAB
);

96 
i
=0; i < 
UT_INPUT_REGISTERS_NB
; i++) {

97 
mb_m≠pög
->
èb_öput_ªgi°îs
[
UT_INPUT_REGISTERS_ADDRESS
+
i
] =

98 
UT_INPUT_REGISTERS_TAB
[
i
];;

101 i‡(
u£_backíd
 =
TCP
) {

102 
sockë
 = 
	`modbus_t˝_li°í
(
˘x
, 1);

103 
	`modbus_t˝_ac˚±
(
˘x
, &
sockë
);

104 } i‡(
u£_backíd
 =
TCP_PI
) {

105 
sockë
 = 
	`modbus_t˝_pi_li°í
(
˘x
, 1);

106 
	`modbus_t˝_pi_ac˚±
(
˘x
, &
sockë
);

108 
rc
 = 
	`modbus_c⁄√˘
(
˘x
);

109 i‡(
rc
 == -1) {

110 
	`Ârötf
(
°dîr
, "U«bÀÅÿc⁄√˘ %s\n", 
	`modbus_°ªº‹
(
î∫o
));

111 
	`modbus_‰ì
(
˘x
);

118 
rc
 = 
	`modbus_ª˚ive
(
˘x
, 
quîy
);

120 } 
rc
 == 0);

122 i‡(
rc
 == -1) {

129 i‡(
quîy
[
hódî_Àngth
] == 0x03) {

130 i‡(
	`MODBUS_GET_INT16_FROM_INT8
(
quîy
, 
hódî_Àngth
 + 3Ë=
UT_REGISTERS_NB_SPECIAL
) {

131 
	`¥ötf
("Setán incorrectÇumber of values\n");

132 
	`MODBUS_SET_INT16_TO_INT8
(
quîy
, 
hódî_Àngth
 + 3,

133 
UT_REGISTERS_NB_SPECIAL
 - 1);

134 } i‡(
	`MODBUS_GET_INT16_FROM_INT8
(
quîy
, 
hódî_Àngth
 + 1)

135 =
UT_REGISTERS_ADDRESS_SPECIAL
) {

136 
	`¥ötf
("ReplyÅoÅhis specialÑegisteráddress byánÉxception\n");

137 
	`modbus_ª∂y_ex˚±i⁄
(
˘x
, 
quîy
,

138 
MODBUS_EXCEPTION_SLAVE_OR_SERVER_BUSY
);

140 } i‡(
	`MODBUS_GET_INT16_FROM_INT8
(
quîy
, 
hódî_Àngth
 + 1)

141 =
UT_REGISTERS_ADDRESS_INVALID_TID_OR_SLAVE
) {

142 c⁄° 
RAW_REQ_LENGTH
 = 5;

143 
uöt8_t
 
øw_ªq
[] = {

144 (
u£_backíd
 =
RTU
Ë? 
INVALID_SERVER_ID
 : 0xFF,

149 
	`¥ötf
("Reply withán invalid TID or slave\n");

150 
	`modbus_£nd_øw_ªque°
(
˘x
, 
øw_ªq
, 
RAW_REQ_LENGTH
 * (
uöt8_t
));

155 
rc
 = 
	`modbus_ª∂y
(
˘x
, 
quîy
,Ñc, 
mb_m≠pög
);

156 i‡(
rc
 == -1) {

161 
	`¥ötf
("QuôÅhêlo›: %s\n", 
	`modbus_°ªº‹
(
î∫o
));

163 i‡(
u£_backíd
 =
TCP
) {

164 
	`˛o£
(
sockë
);

166 
	`modbus_m≠pög_‰ì
(
mb_m≠pög
);

167 
	`‰ì
(
quîy
);

168 
	`modbus_‰ì
(
˘x
);

171 
	}
}

	@unit-test.h

19 #i‚de‡
_UNIT_TEST_H_


20 
	#_UNIT_TEST_H_


	)

23 
	#HAVE_INTTYPES_H
 1

	)

24 
	#HAVE_STDINT_H
 1

	)

26 #ifde‡
HAVE_INTTYPES_H


27 
	~<öây≥s.h
>

29 #ifde‡
HAVE_STDINT_H


30 #i‚de‡
_MSC_VER


31 
	~<°döt.h
>

33 
	~"°döt.h
"

37 
	#SERVER_ID
 17

	)

38 
	#INVALID_SERVER_ID
 18

	)

40 c⁄° 
uöt16_t
 
	gUT_BITS_ADDRESS
 = 0x13;

41 c⁄° 
uöt16_t
 
	gUT_BITS_NB
 = 0x25;

42 c⁄° 
uöt8_t
 
	gUT_BITS_TAB
[] = { 0xCD, 0x6B, 0xB2, 0x0E, 0x1B };

44 c⁄° 
uöt16_t
 
	gUT_INPUT_BITS_ADDRESS
 = 0xC4;

45 c⁄° 
uöt16_t
 
	gUT_INPUT_BITS_NB
 = 0x16;

46 c⁄° 
uöt8_t
 
	gUT_INPUT_BITS_TAB
[] = { 0xAC, 0xDB, 0x35 };

48 c⁄° 
uöt16_t
 
	gUT_REGISTERS_ADDRESS
 = 0x6B;

50 c⁄° 
uöt16_t
 
	gUT_REGISTERS_ADDRESS_SPECIAL
 = 0x6C;

52 c⁄° 
uöt16_t
 
	gUT_REGISTERS_ADDRESS_INVALID_TID_OR_SLAVE
 = 0x6D;

54 c⁄° 
uöt16_t
 
	gUT_REGISTERS_NB
 = 0x3;

55 c⁄° 
uöt16_t
 
	gUT_REGISTERS_TAB
[] = { 0x022B, 0x0001, 0x0064 };

59 c⁄° 
uöt16_t
 
	gUT_REGISTERS_NB_SPECIAL
 = 0x2;

61 c⁄° 
uöt16_t
 
	gUT_INPUT_REGISTERS_ADDRESS
 = 0x08;

62 c⁄° 
uöt16_t
 
	gUT_INPUT_REGISTERS_NB
 = 0x1;

63 c⁄° 
uöt16_t
 
	gUT_INPUT_REGISTERS_TAB
[] = { 0x000A };

65 c⁄° 
	gUT_REAL
 = 916.540649;

66 c⁄° 
uöt32_t
 
	gUT_IREAL
 = 0x4465229a;

	@version.c

18 
	~<°dio.h
>

19 
	~<modbus.h
>

21 
	$maö
()

23 
	`¥ötf
("Compûed wôhÜibmodbu†vîsi⁄ %s\n", 
LIBMODBUS_VERSION_STRING
);

24 
	`¥ötf
("Linked withÜibmodbus version %d.%d.%d\n",

25 
libmodbus_vîsi⁄_maj‹
, 
libmodbus_vîsi⁄_mö‹
, 
libmodbus_vîsi⁄_mi¸o
);

27 i‡(
	`LIBMODBUS_VERSION_CHECK
(2, 1, 0)) {

28 
	`¥ötf
("The functionsÅoÑead/write float valuesáreávailable (2.1.0).\n");

31 i‡(
	`LIBMODBUS_VERSION_CHECK
(2, 1, 1)) {

32 
	`¥ötf
("Oh gosh, brandÇew API (2.1.1)!\n");

36 
	}
}

	@/usr/include/arpa/inet.h

84 #i‚de‡
_INET_H_


85 
	#_INET_H_


	)

89 
	~<_ty≥s.h
>

90 
	~<°döt.h
>

91 
	~<machöe/ídün.h
>

92 
	~<sys/_ídün.h
>

93 
	~<√töë/ö.h
>

95 
__BEGIN_DECLS


97 
ö_addr_t
 
öë_addr
(const *);

98 *
öë_¡ﬂ
(
ö_addr
);

99 c⁄° *
öë_¡›
(, c⁄° *, *, 
sockÀn_t
);

100 
öë_±⁄
(, const *, *);

101 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

102 
ascii2addr
(, const *, *);

103 *
addr2ascii
(, const *, , *);

104 
öë_©⁄
(c⁄° *, 
ö_addr
 *);

105 
ö_addr_t
 
öë_ aof
(
ö_addr
);

106 
ö_addr
 
öë_makóddr
(
ö_addr_t
, in_addr_t);

107 
ö_addr_t
 
öë_√tof
(
ö_addr
);

108 
ö_addr_t
 
öë_√tw‹k
(const *);

109 *
öë_√t_¡›
(, c⁄° *, , *, 
__d¨wö_size_t
);

110 
öë_√t_±⁄
(, c⁄° *, *, 
__d¨wö_size_t
);

111 *
öë_√è
(
ö_addr_t
, *, 
__d¨wö_size_t
);

112 
öë_nßp_addr
(c⁄° *, *, 
maxÀn
);

113 *
öë_nßp_¡ﬂ
(, c⁄° *, *
ascii
);

116 
	g__END_DECLS


	@/usr/include/errno.h

23 
	~<sys/î∫o.h
>

	@/usr/include/inttypes.h

31 #i‡!
deföed
(
_INTTYPES_H_
)

32 
	#_INTTYPES_H_


	)

34 #unde‡
__PRI_8_LENGTH_MODIFIER__


35 #unde‡
__PRI_64_LENGTH_MODIFIER__


36 #unde‡
__SCN_64_LENGTH_MODIFIER__


38 #i‡
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
-0 > 1020

39 
	#__PRI_8_LENGTH_MODIFIER__
 "hh"

	)

40 
	#__PRI_64_LENGTH_MODIFIER__
 "Œ"

	)

41 
	#__SCN_64_LENGTH_MODIFIER__
 "Œ"

	)

47 
	#__PRI_8_LENGTH_MODIFIER__
 ""

	)

48 
	#__PRI_64_LENGTH_MODIFIER__
 "q"

	)

49 
	#__SCN_64_LENGTH_MODIFIER__
 "q"

	)

51 
	#__PRI_MAX_LENGTH_MODIFIER__
 "j"

	)

52 
	#__SCN_MAX_LENGTH_MODIFIER__
 "j"

	)

54 
	#PRId8
 
__PRI_8_LENGTH_MODIFIER__
 "d"

	)

55 
	#PRIi8
 
__PRI_8_LENGTH_MODIFIER__
 "i"

	)

56 
	#PRIo8
 
__PRI_8_LENGTH_MODIFIER__
 "o"

	)

57 
	#PRIu8
 
__PRI_8_LENGTH_MODIFIER__
 "u"

	)

58 
	#PRIx8
 
__PRI_8_LENGTH_MODIFIER__
 "x"

	)

59 
	#PRIX8
 
__PRI_8_LENGTH_MODIFIER__
 "X"

	)

61 
	#PRId16
 "hd"

	)

62 
	#PRIi16
 "hi"

	)

63 
	#PRIo16
 "ho"

	)

64 
	#PRIu16
 "hu"

	)

65 
	#PRIx16
 "hx"

	)

66 
	#PRIX16
 "hX"

	)

68 
	#PRId32
 "d"

	)

69 
	#PRIi32
 "i"

	)

70 
	#PRIo32
 "o"

	)

71 
	#PRIu32
 "u"

	)

72 
	#PRIx32
 "x"

	)

73 
	#PRIX32
 "X"

	)

75 
	#PRId64
 
__PRI_64_LENGTH_MODIFIER__
 "d"

	)

76 
	#PRIi64
 
__PRI_64_LENGTH_MODIFIER__
 "i"

	)

77 
	#PRIo64
 
__PRI_64_LENGTH_MODIFIER__
 "o"

	)

78 
	#PRIu64
 
__PRI_64_LENGTH_MODIFIER__
 "u"

	)

79 
	#PRIx64
 
__PRI_64_LENGTH_MODIFIER__
 "x"

	)

80 
	#PRIX64
 
__PRI_64_LENGTH_MODIFIER__
 "X"

	)

82 
	#PRIdLEAST8
 
PRId8


	)

83 
	#PRIiLEAST8
 
PRIi8


	)

84 
	#PRIoLEAST8
 
PRIo8


	)

85 
	#PRIuLEAST8
 
PRIu8


	)

86 
	#PRIxLEAST8
 
PRIx8


	)

87 
	#PRIXLEAST8
 
PRIX8


	)

89 
	#PRIdLEAST16
 
PRId16


	)

90 
	#PRIiLEAST16
 
PRIi16


	)

91 
	#PRIoLEAST16
 
PRIo16


	)

92 
	#PRIuLEAST16
 
PRIu16


	)

93 
	#PRIxLEAST16
 
PRIx16


	)

94 
	#PRIXLEAST16
 
PRIX16


	)

96 
	#PRIdLEAST32
 
PRId32


	)

97 
	#PRIiLEAST32
 
PRIi32


	)

98 
	#PRIoLEAST32
 
PRIo32


	)

99 
	#PRIuLEAST32
 
PRIu32


	)

100 
	#PRIxLEAST32
 
PRIx32


	)

101 
	#PRIXLEAST32
 
PRIX32


	)

103 
	#PRIdLEAST64
 
PRId64


	)

104 
	#PRIiLEAST64
 
PRIi64


	)

105 
	#PRIoLEAST64
 
PRIo64


	)

106 
	#PRIuLEAST64
 
PRIu64


	)

107 
	#PRIxLEAST64
 
PRIx64


	)

108 
	#PRIXLEAST64
 
PRIX64


	)

110 
	#PRIdFAST8
 
PRId8


	)

111 
	#PRIiFAST8
 
PRIi8


	)

112 
	#PRIoFAST8
 
PRIo8


	)

113 
	#PRIuFAST8
 
PRIu8


	)

114 
	#PRIxFAST8
 
PRIx8


	)

115 
	#PRIXFAST8
 
PRIX8


	)

117 
	#PRIdFAST16
 
PRId16


	)

118 
	#PRIiFAST16
 
PRIi16


	)

119 
	#PRIoFAST16
 
PRIo16


	)

120 
	#PRIuFAST16
 
PRIu16


	)

121 
	#PRIxFAST16
 
PRIx16


	)

122 
	#PRIXFAST16
 
PRIX16


	)

124 
	#PRIdFAST32
 
PRId32


	)

125 
	#PRIiFAST32
 
PRIi32


	)

126 
	#PRIoFAST32
 
PRIo32


	)

127 
	#PRIuFAST32
 
PRIu32


	)

128 
	#PRIxFAST32
 
PRIx32


	)

129 
	#PRIXFAST32
 
PRIX32


	)

131 
	#PRIdFAST64
 
PRId64


	)

132 
	#PRIiFAST64
 
PRIi64


	)

133 
	#PRIoFAST64
 
PRIo64


	)

134 
	#PRIuFAST64
 
PRIu64


	)

135 
	#PRIxFAST64
 
PRIx64


	)

136 
	#PRIXFAST64
 
PRIX64


	)

139 
	#PRIdPTR
 "ld"

	)

140 
	#PRIiPTR
 "li"

	)

141 
	#PRIoPTR
 "lo"

	)

142 
	#PRIuPTR
 "lu"

	)

143 
	#PRIxPTR
 "lx"

	)

144 
	#PRIXPTR
 "lX"

	)

146 
	#PRIdMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "d"

	)

147 
	#PRIiMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "i"

	)

148 
	#PRIoMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "o"

	)

149 
	#PRIuMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "u"

	)

150 
	#PRIxMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "x"

	)

151 
	#PRIXMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "X"

	)

153 #i‡
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
-0 > 1020

154 
	#SCNd8
 
__PRI_8_LENGTH_MODIFIER__
 "d"

	)

155 
	#SCNi8
 
__PRI_8_LENGTH_MODIFIER__
 "i"

	)

156 
	#SCNo8
 
__PRI_8_LENGTH_MODIFIER__
 "o"

	)

157 
	#SCNu8
 
__PRI_8_LENGTH_MODIFIER__
 "u"

	)

158 
	#SCNx8
 
__PRI_8_LENGTH_MODIFIER__
 "x"

	)

160 
	#SCNd8
 "hhd"

	)

161 
	#SCNi8
 "hhi"

	)

162 
	#SCNo8
 "hho"

	)

163 
	#SCNu8
 "hhu"

	)

164 
	#SCNx8
 "hhx"

	)

167 
	#SCNd16
 "hd"

	)

168 
	#SCNi16
 "hi"

	)

169 
	#SCNo16
 "ho"

	)

170 
	#SCNu16
 "hu"

	)

171 
	#SCNx16
 "hx"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNi32
 "i"

	)

175 
	#SCNo32
 "o"

	)

176 
	#SCNu32
 "u"

	)

177 
	#SCNx32
 "x"

	)

179 
	#SCNd64
 
__SCN_64_LENGTH_MODIFIER__
 "d"

	)

180 
	#SCNi64
 
__SCN_64_LENGTH_MODIFIER__
 "i"

	)

181 
	#SCNo64
 
__SCN_64_LENGTH_MODIFIER__
 "o"

	)

182 
	#SCNu64
 
__SCN_64_LENGTH_MODIFIER__
 "u"

	)

183 
	#SCNx64
 
__SCN_64_LENGTH_MODIFIER__
 "x"

	)

185 
	#SCNdLEAST8
 
SCNd8


	)

186 
	#SCNiLEAST8
 
SCNi8


	)

187 
	#SCNoLEAST8
 
SCNo8


	)

188 
	#SCNuLEAST8
 
SCNu8


	)

189 
	#SCNxLEAST8
 
SCNx8


	)

191 
	#SCNdLEAST16
 
SCNd16


	)

192 
	#SCNiLEAST16
 
SCNi16


	)

193 
	#SCNoLEAST16
 
SCNo16


	)

194 
	#SCNuLEAST16
 
SCNu16


	)

195 
	#SCNxLEAST16
 
SCNx16


	)

197 
	#SCNdLEAST32
 
SCNd32


	)

198 
	#SCNiLEAST32
 
SCNi32


	)

199 
	#SCNoLEAST32
 
SCNo32


	)

200 
	#SCNuLEAST32
 
SCNu32


	)

201 
	#SCNxLEAST32
 
SCNx32


	)

203 
	#SCNdLEAST64
 
SCNd64


	)

204 
	#SCNiLEAST64
 
SCNi64


	)

205 
	#SCNoLEAST64
 
SCNo64


	)

206 
	#SCNuLEAST64
 
SCNu64


	)

207 
	#SCNxLEAST64
 
SCNx64


	)

209 
	#SCNdFAST8
 
SCNd8


	)

210 
	#SCNiFAST8
 
SCNi8


	)

211 
	#SCNoFAST8
 
SCNo8


	)

212 
	#SCNuFAST8
 
SCNu8


	)

213 
	#SCNxFAST8
 
SCNx8


	)

215 
	#SCNdFAST16
 
SCNd16


	)

216 
	#SCNiFAST16
 
SCNi16


	)

217 
	#SCNoFAST16
 
SCNo16


	)

218 
	#SCNuFAST16
 
SCNu16


	)

219 
	#SCNxFAST16
 
SCNx16


	)

221 
	#SCNdFAST32
 
SCNd32


	)

222 
	#SCNiFAST32
 
SCNi32


	)

223 
	#SCNoFAST32
 
SCNo32


	)

224 
	#SCNuFAST32
 
SCNu32


	)

225 
	#SCNxFAST32
 
SCNx32


	)

227 
	#SCNdFAST64
 
SCNd64


	)

228 
	#SCNiFAST64
 
SCNi64


	)

229 
	#SCNoFAST64
 
SCNo64


	)

230 
	#SCNuFAST64
 
SCNu64


	)

231 
	#SCNxFAST64
 
SCNx64


	)

233 
	#SCNdPTR
 "ld"

	)

234 
	#SCNiPTR
 "li"

	)

235 
	#SCNoPTR
 "lo"

	)

236 
	#SCNuPTR
 "lu"

	)

237 
	#SCNxPTR
 "lx"

	)

239 
	#SCNdMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "d"

	)

240 
	#SCNiMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "i"

	)

241 
	#SCNoMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "o"

	)

242 
	#SCNuMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "u"

	)

243 
	#SCNxMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "x"

	)

245 
	~<sys/cdefs.h
>

246 
	~<_ty≥s.h
>

247 
	~<°döt.h
>

249 #i‡!
deföed
(
__STDC_VERSION__
) || (__STDC_VERSION__ < 199901L)

251 #i‡!
deföed
(
ª°ri˘
)

252 
	#ª°ri˘


	)

253 
	#__RESTRICT_KEYWORD_DEFINED__


	)

257 
__BEGIN_DECLS


260 
ötmax_t
 
imaxabs
(ötmax_à
j
);

264 
ötmax_t
 
	mquŸ
;

265 
ötmax_t
 
	mªm
;

266 } 
	timaxdiv_t
;

268 
imaxdiv_t
 
imaxdiv
(
ötmax_t
 
numî
, i¡max_à
díom
);

271 
ötmax_t
 
°πoimax
(c⁄° * 
ª°ri˘
 
≈å
, **Ñe°ri˘ 
íd±r
, 
ba£
);

272 
uötmax_t
 
°πoumax
(c⁄° * 
ª°ri˘
 
≈å
, **Ñe°ri˘ 
íd±r
, 
ba£
);

274 #i‚de‡
__˝lu•lus


275 #i‚def 
_WCHAR_T


276 
	#_WCHAR_T


	)

277 
__d¨wö_wch¨_t
 
	twch¨_t
;

282 
ötmax_t
 
wc°oimax
(c⁄° 
wch¨_t
 * 
ª°ri˘
 
≈å
, wch¨_à**Ñe°ri˘ 
íd±r
, 
ba£
);

283 
uötmax_t
 
wc°oumax
(c⁄° 
wch¨_t
 * 
ª°ri˘
 
≈å
, wch¨_à**Ñe°ri˘ 
íd±r
, 
ba£
);

286 #i‡!
deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

287 #¥agm®
GCC
 
pois⁄
 
wc°oimax
 
wc°oumax


290 
	g__END_DECLS


292 #ifde‡
_USE_EXTENDED_LOCALES_


293 
	~<xloˇÀ/_öây≥s.h
>

308 #i‡
deföed
(
__RESTRICT_KEYWORD_DEFINED__
)

309 #unde‡
ª°ri˘


310 #unde‡
__RESTRICT_KEYWORD_DEFINED__


	@/usr/include/netinet/in.h

64 #i‚de‡
_NETINET_IN_H_


65 
	#_NETINET_IN_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/_ty≥s.h
>

68 
	~<°döt.h
>

70 
	~<Avaûabûôy.h
>

72 #i‚de‡
_IN_ADDR_T


73 
	#_IN_ADDR_T


	)

74 
__uöt32_t
 
	tö_addr_t
;

77 #i‚de‡
_IN_PORT_T


78 
	#_IN_PORT_T


	)

79 
__uöt16_t
 
	tö_p‹t_t
;

87 
	~<sys/sockë.h
>

92 
	~<machöe/ídün.h
>

93 
	~<sys/_ídün.h
>

103 
	#IPPROTO_IP
 0

	)

104 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

105 
	#IPPROTO_HOPOPTS
 0

	)

107 
	#IPPROTO_ICMP
 1

	)

108 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

109 
	#IPPROTO_IGMP
 2

	)

110 
	#IPPROTO_GGP
 3

	)

111 
	#IPPROTO_IPV4
 4

	)

112 
	#IPPROTO_IPIP
 
IPPROTO_IPV4


	)

114 
	#IPPROTO_TCP
 6

	)

115 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

116 
	#IPPROTO_ST
 7

	)

117 
	#IPPROTO_EGP
 8

	)

118 
	#IPPROTO_PIGP
 9

	)

119 
	#IPPROTO_RCCMON
 10

	)

120 
	#IPPROTO_NVPII
 11

	)

121 
	#IPPROTO_PUP
 12

	)

122 
	#IPPROTO_ARGUS
 13

	)

123 
	#IPPROTO_EMCON
 14

	)

124 
	#IPPROTO_XNET
 15

	)

125 
	#IPPROTO_CHAOS
 16

	)

127 
	#IPPROTO_UDP
 17

	)

128 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

129 
	#IPPROTO_MUX
 18

	)

130 
	#IPPROTO_MEAS
 19

	)

131 
	#IPPROTO_HMP
 20

	)

132 
	#IPPROTO_PRM
 21

	)

133 
	#IPPROTO_IDP
 22

	)

134 
	#IPPROTO_TRUNK1
 23

	)

135 
	#IPPROTO_TRUNK2
 24

	)

136 
	#IPPROTO_LEAF1
 25

	)

137 
	#IPPROTO_LEAF2
 26

	)

138 
	#IPPROTO_RDP
 27

	)

139 
	#IPPROTO_IRTP
 28

	)

140 
	#IPPROTO_TP
 29

	)

141 
	#IPPROTO_BLT
 30

	)

142 
	#IPPROTO_NSP
 31

	)

143 
	#IPPROTO_INP
 32

	)

144 
	#IPPROTO_SEP
 33

	)

145 
	#IPPROTO_3PC
 34

	)

146 
	#IPPROTO_IDPR
 35

	)

147 
	#IPPROTO_XTP
 36

	)

148 
	#IPPROTO_DDP
 37

	)

149 
	#IPPROTO_CMTP
 38

	)

150 
	#IPPROTO_TPXX
 39

	)

151 
	#IPPROTO_IL
 40

	)

153 
	#IPPROTO_IPV6
 41

	)

154 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

155 
	#IPPROTO_SDRP
 42

	)

156 
	#IPPROTO_ROUTING
 43

	)

157 
	#IPPROTO_FRAGMENT
 44

	)

158 
	#IPPROTO_IDRP
 45

	)

159 
	#IPPROTO_RSVP
 46

	)

160 
	#IPPROTO_GRE
 47

	)

161 
	#IPPROTO_MHRP
 48

	)

162 
	#IPPROTO_BHA
 49

	)

163 
	#IPPROTO_ESP
 50

	)

164 
	#IPPROTO_AH
 51

	)

165 
	#IPPROTO_INLSP
 52

	)

166 
	#IPPROTO_SWIPE
 53

	)

167 
	#IPPROTO_NHRP
 54

	)

169 
	#IPPROTO_ICMPV6
 58

	)

170 
	#IPPROTO_NONE
 59

	)

171 
	#IPPROTO_DSTOPTS
 60

	)

172 
	#IPPROTO_AHIP
 61

	)

173 
	#IPPROTO_CFTP
 62

	)

174 
	#IPPROTO_HELLO
 63

	)

175 
	#IPPROTO_SATEXPAK
 64

	)

176 
	#IPPROTO_KRYPTOLAN
 65

	)

177 
	#IPPROTO_RVD
 66

	)

178 
	#IPPROTO_IPPC
 67

	)

179 
	#IPPROTO_ADFS
 68

	)

180 
	#IPPROTO_SATMON
 69

	)

181 
	#IPPROTO_VISA
 70

	)

182 
	#IPPROTO_IPCV
 71

	)

183 
	#IPPROTO_CPNX
 72

	)

184 
	#IPPROTO_CPHB
 73

	)

185 
	#IPPROTO_WSN
 74

	)

186 
	#IPPROTO_PVP
 75

	)

187 
	#IPPROTO_BRSATMON
 76

	)

188 
	#IPPROTO_ND
 77

	)

189 
	#IPPROTO_WBMON
 78

	)

190 
	#IPPROTO_WBEXPAK
 79

	)

191 
	#IPPROTO_EON
 80

	)

192 
	#IPPROTO_VMTP
 81

	)

193 
	#IPPROTO_SVMTP
 82

	)

194 
	#IPPROTO_VINES
 83

	)

195 
	#IPPROTO_TTP
 84

	)

196 
	#IPPROTO_IGP
 85

	)

197 
	#IPPROTO_DGP
 86

	)

198 
	#IPPROTO_TCF
 87

	)

199 
	#IPPROTO_IGRP
 88

	)

200 
	#IPPROTO_OSPFIGP
 89

	)

201 
	#IPPROTO_SRPC
 90

	)

202 
	#IPPROTO_LARP
 91

	)

203 
	#IPPROTO_MTP
 92

	)

204 
	#IPPROTO_AX25
 93

	)

205 
	#IPPROTO_IPEIP
 94

	)

206 
	#IPPROTO_MICP
 95

	)

207 
	#IPPROTO_SCCSP
 96

	)

208 
	#IPPROTO_ETHERIP
 97

	)

209 
	#IPPROTO_ENCAP
 98

	)

210 
	#IPPROTO_APES
 99

	)

211 
	#IPPROTO_GMTP
 100

	)

213 
	#IPPROTO_PIM
 103

	)

214 
	#IPPROTO_IPCOMP
 108

	)

215 
	#IPPROTO_PGM
 113

	)

216 
	#IPPROTO_SCTP
 132

	)

219 
	#IPPROTO_DIVERT
 254

	)

221 
	#IPPROTO_RAW
 255

	)

223 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

224 
	#IPPROTO_MAX
 256

	)

227 
	#IPPROTO_DONE
 257

	)

275 
	#__DARWIN_IPPORT_RESERVED
 1024

	)

277 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

284 #i‚de‡
IPPORT_RESERVED


285 
	#IPPORT_RESERVED
 
__DARWIN_IPPORT_RESERVED


	)

287 
	#IPPORT_USERRESERVED
 5000

	)

292 
	#IPPORT_HIFIRSTAUTO
 49152

	)

293 
	#IPPORT_HILASTAUTO
 65535

	)

301 
	#IPPORT_RESERVEDSTART
 600

	)

307 
	sö_addr
 {

308 
ö_addr_t
 
	ms_addr
;

316 
	#INADDR_ANY
 (
u_öt32_t
)0x00000000

	)

317 
	#INADDR_BROADCAST
 (
u_öt32_t
)0xfffffff‡

	)

319 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

320 
	#IN_CLASSA
(
i
Ë(((
u_öt32_t
)(iË& 0x80000000Ë=0)

	)

321 
	#IN_CLASSA_NET
 0xff000000

	)

322 
	#IN_CLASSA_NSHIFT
 24

	)

323 
	#IN_CLASSA_HOST
 0x00ffffff

	)

324 
	#IN_CLASSA_MAX
 128

	)

326 
	#IN_CLASSB
(
i
Ë(((
u_öt32_t
)(iË& 0xc0000000Ë=0x80000000)

	)

327 
	#IN_CLASSB_NET
 0xffff0000

	)

328 
	#IN_CLASSB_NSHIFT
 16

	)

329 
	#IN_CLASSB_HOST
 0x0000ffff

	)

330 
	#IN_CLASSB_MAX
 65536

	)

332 
	#IN_CLASSC
(
i
Ë(((
u_öt32_t
)(iË& 0xe0000000Ë=0xc0000000)

	)

333 
	#IN_CLASSC_NET
 0xffffff00

	)

334 
	#IN_CLASSC_NSHIFT
 8

	)

335 
	#IN_CLASSC_HOST
 0x000000ff

	)

337 
	#IN_CLASSD
(
i
Ë(((
u_öt32_t
)(iË& 0xf0000000Ë=0xe0000000)

	)

338 
	#IN_CLASSD_NET
 0xf0000000

	)

339 
	#IN_CLASSD_NSHIFT
 28

	)

340 
	#IN_CLASSD_HOST
 0x0ffffff‡

	)

341 
	#IN_MULTICAST
(
i
Ë
	`IN_CLASSD
(i)

	)

343 
	#IN_EXPERIMENTAL
(
i
Ë(((
u_öt32_t
)(iË& 0xf0000000Ë=0xf0000000)

	)

344 
	#IN_BADCLASS
(
i
Ë(((
u_öt32_t
)(iË& 0xf0000000Ë=0xf0000000)

	)

346 
	#INADDR_LOOPBACK
 (
u_öt32_t
)0x7f000001

	)

348 
	#INADDR_NONE
 0xfffffff‡

	)

350 
	#INADDR_UNSPEC_GROUP
 (
u_öt32_t
)0xe0000000

	)

351 
	#INADDR_ALLHOSTS_GROUP
 (
u_öt32_t
)0xe0000001

	)

352 
	#INADDR_ALLRTRS_GROUP
 (
u_öt32_t
)0xe0000002

	)

353 
	#INADDR_ALLRPTS_GROUP
 (
u_öt32_t
)0xe0000016

	)

354 
	#INADDR_CARP_GROUP
 (
u_öt32_t
)0xe0000012

	)

355 
	#INADDR_PFSYNC_GROUP
 (
u_öt32_t
)0xe00000f0

	)

356 
	#INADDR_ALLMDNS_GROUP
 (
u_öt32_t
)0xe00000fb

	)

357 
	#INADDR_MAX_LOCAL_GROUP
 (
u_öt32_t
)0xe00000f‡

	)

359 #ifde‡
__APPLE__


360 
	#IN_LINKLOCALNETNUM
 (
u_öt32_t
)0xA9FE0000

	)

361 
	#IN_LINKLOCAL
(
i
Ë(((
u_öt32_t
)(iË& 
IN_CLASSB_NET
Ë=
IN_LINKLOCALNETNUM
)

	)

362 
	#IN_LOOPBACK
(
i
Ë(((
u_öt32_t
)(iË& 0xff000000Ë=0x7f000000)

	)

363 
	#IN_ZERONET
(
i
Ë(((
u_öt32_t
)(iË& 0xff000000Ë=0)

	)

365 
	#IN_PRIVATE
(
i
Ë((((
u_öt32_t
)(i) & 0xff000000) == 0x0a000000) || \

366 (((
u_öt32_t
)(
i
) & 0xfff00000) == 0xac100000) || \

367 (((
u_öt32_t
)(
i
Ë& 0xffff0000Ë=0xc0a80000))

	)

369 
	#IN_LOCAL_GROUP
(
i
Ë(((
u_öt32_t
)(iË& 0xffffff00Ë=0xe0000000)

	)

371 
	#IN_ANY_LOCAL
(
i
Ë(
	`IN_LINKLOCAL
(iË|| 
	`IN_LOCAL_GROUP
(i))

	)

374 
	#IN_LOOPBACKNET
 127

	)

380 
	ssockaddr_ö
 {

381 
__uöt8_t
 
	msö_Àn
;

382 
ß_Ámûy_t
 
	msö_Ámûy
;

383 
ö_p‹t_t
 
	msö_p‹t
;

384 
ö_addr
 
	msö_addr
;

385 
	msö_zîo
[8];

388 
	#INET_ADDRSTRLEN
 16

	)

390 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

398 
	sù_›ts
 {

399 
ö_addr
 
	mù_d°
;

400 
	mù_›ts
[40];

407 
	#IP_OPTIONS
 1

	)

408 
	#IP_HDRINCL
 2

	)

409 
	#IP_TOS
 3

	)

410 
	#IP_TTL
 4

	)

411 
	#IP_RECVOPTS
 5

	)

412 
	#IP_RECVRETOPTS
 6

	)

413 
	#IP_RECVDSTADDR
 7

	)

414 
	#IP_RETOPTS
 8

	)

415 
	#IP_MULTICAST_IF
 9

	)

416 
	#IP_MULTICAST_TTL
 10

	)

417 
	#IP_MULTICAST_LOOP
 11

	)

418 
	#IP_ADD_MEMBERSHIP
 12

	)

419 
	#IP_DROP_MEMBERSHIP
 13

	)

420 
	#IP_MULTICAST_VIF
 14

	)

421 
	#IP_RSVP_ON
 15

	)

422 
	#IP_RSVP_OFF
 16

	)

423 
	#IP_RSVP_VIF_ON
 17

	)

424 
	#IP_RSVP_VIF_OFF
 18

	)

425 
	#IP_PORTRANGE
 19

	)

426 
	#IP_RECVIF
 20

	)

428 
	#IP_IPSEC_POLICY
 21

	)

429 
	#IP_FAITH
 22

	)

430 #ifde‡
__APPLE__


431 
	#IP_STRIPHDR
 23

	)

433 
	#IP_RECVTTL
 24

	)

434 
	#IP_BOUND_IF
 25

	)

435 
	#IP_PKTINFO
 26

	)

436 
	#IP_RECVPKTINFO
 
IP_PKTINFO


	)

439 
	#IP_FW_ADD
 40

	)

440 
	#IP_FW_DEL
 41

	)

441 
	#IP_FW_FLUSH
 42

	)

442 
	#IP_FW_ZERO
 43

	)

443 
	#IP_FW_GET
 44

	)

444 
	#IP_FW_RESETLOG
 45

	)

447 
	#IP_OLD_FW_ADD
 50

	)

448 
	#IP_OLD_FW_DEL
 51

	)

449 
	#IP_OLD_FW_FLUSH
 52

	)

450 
	#IP_OLD_FW_ZERO
 53

	)

451 
	#IP_OLD_FW_GET
 54

	)

452 
	#IP_NAT__XXX
 55

	)

453 
	#IP_OLD_FW_RESETLOG
 56

	)

455 
	#IP_DUMMYNET_CONFIGURE
 60

	)

456 
	#IP_DUMMYNET_DEL
 61

	)

457 
	#IP_DUMMYNET_FLUSH
 62

	)

458 
	#IP_DUMMYNET_GET
 64

	)

460 
	#IP_TRAFFIC_MGT_BACKGROUND
 65

	)

461 
	#IP_MULTICAST_IFINDEX
 66

	)

464 
	#IP_ADD_SOURCE_MEMBERSHIP
 70

	)

465 
	#IP_DROP_SOURCE_MEMBERSHIP
 71

	)

466 
	#IP_BLOCK_SOURCE
 72

	)

467 
	#IP_UNBLOCK_SOURCE
 73

	)

470 
	#IP_MSFILTER
 74

	)

473 
	#MCAST_JOIN_GROUP
 80

	)

474 
	#MCAST_LEAVE_GROUP
 81

	)

475 
	#MCAST_JOIN_SOURCE_GROUP
 82

	)

476 
	#MCAST_LEAVE_SOURCE_GROUP
 83

	)

477 
	#MCAST_BLOCK_SOURCE
 84

	)

478 
	#MCAST_UNBLOCK_SOURCE
 85

	)

484 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

485 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

492 
	#IP_MIN_MEMBERSHIPS
 31

	)

493 
	#IP_MAX_MEMBERSHIPS
 4095

	)

499 
	#IP_MAX_GROUP_SRC_FILTER
 512

	)

500 
	#IP_MAX_SOCK_SRC_FILTER
 128

	)

501 
	#IP_MAX_SOCK_MUTE_FILTER
 128

	)

506 
	sù_mªq
 {

507 
ö_addr
 
	mimr_mu…üddr
;

508 
ö_addr
 
	mimr_öãrÁ˚
;

516 
	sù_mªqn
 {

517 
ö_addr
 
	mimr_mu…üddr
;

518 
ö_addr
 
	mimr_addªss
;

519 
	mimr_ifödex
;

522 #¥agm®
∑ck
(4)

526 
	sù_mªq_sour˚
 {

527 
ö_addr
 
	mimr_mu…üddr
;

528 
ö_addr
 
	mimr_sour˚addr
;

529 
ö_addr
 
	mimr_öãrÁ˚
;

536 
	sgroup_ªq
 {

537 
uöt32_t
 
	mgr_öãrÁ˚
;

538 
sockaddr_°‹age
 
	mgr_group
;

541 
	sgroup_sour˚_ªq
 {

542 
uöt32_t
 
	mg§_öãrÁ˚
;

543 
sockaddr_°‹age
 
	mg§_group
;

544 
sockaddr_°‹age
 
	mg§_sour˚
;

547 #i‚de‡
__MSFILTERREQ_DEFINED


548 
	#__MSFILTERREQ_DEFINED


	)

554 
	s__msfûãºeq
 {

555 
uöt32_t
 
	mms‰_ifödex
;

556 
uöt32_t
 
	mms‰_fmode
;

557 
uöt32_t
 
	mms‰_n§cs
;

558 
uöt32_t
 
	m__ms‰_Æign
;

559 
sockaddr_°‹age
 
	mms‰_group
;

560 
sockaddr_°‹age
 *
	mms‰_§cs
;

565 #¥agm®
∑ck
()

566 
	gsockaddr
;

573 
	$£tùv4sour˚fûãr
(, 
ö_addr
, ö_addr, 
uöt32_t
,

574 
uöt32_t
, 
ö_addr
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_NA
);

575 
	$gëùv4sour˚fûãr
(, 
ö_addr
, ö_addr, 
uöt32_t
 *,

576 
uöt32_t
 *, 
ö_addr
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_NA
);

577 
	$£tsour˚fûãr
(, 
uöt32_t
, 
sockaddr
 *, 
sockÀn_t
,

578 
uöt32_t
, uöt32_t, 
sockaddr_°‹age
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_NA
);

579 
	$gësour˚fûãr
(, 
uöt32_t
, 
sockaddr
 *, 
sockÀn_t
,

580 
uöt32_t
 *, uöt32_à*, 
sockaddr_°‹age
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_NA
);

585 
	#MCAST_UNDEFINED
 0

	)

586 
	#MCAST_INCLUDE
 1

	)

587 
	#MCAST_EXCLUDE
 2

	)

593 
	#IP_PORTRANGE_DEFAULT
 0

	)

594 
	#IP_PORTRANGE_HIGH
 1

	)

595 
	#IP_PORTRANGE_LOW
 2

	)

617 
	sö_pktöfo
 {

618 
ùi_ifödex
;

619 
ö_addr
 
ùi_•ec_d°
;

620 
ö_addr
 
ùi_addr
;

629 
	#IPPROTO_MAXID
 (
IPPROTO_AH
 + 1Ë

	)

635 
	#IPCTL_FORWARDING
 1

	)

636 
	#IPCTL_SENDREDIRECTS
 2

	)

637 
	#IPCTL_DEFTTL
 3

	)

638 #ifde‡
nŸyë


639 
	#IPCTL_DEFMTU
 4

	)

641 
	#IPCTL_RTEXPIRE
 5

	)

642 
	#IPCTL_RTMINEXPIRE
 6

	)

643 
	#IPCTL_RTMAXCACHE
 7

	)

644 
	#IPCTL_SOURCEROUTE
 8

	)

645 
	#IPCTL_DIRECTEDBROADCAST
 9

	)

646 
	#IPCTL_INTRQMAXLEN
 10

	)

647 
	#IPCTL_INTRQDROPS
 11

	)

648 
	#IPCTL_STATS
 12

	)

649 
	#IPCTL_ACCEPTSOURCEROUTE
 13

	)

650 
	#IPCTL_FASTFORWARDING
 14

	)

651 
	#IPCTL_KEEPFAITH
 15

	)

652 
	#IPCTL_GIF_TTL
 16

	)

653 
	#IPCTL_MAXID
 17

	)

660 
	#__KAME_NETINET_IN_H_INCLUDED_


	)

661 
	~<√töë6/ö6.h
>

662 #unde‡
__KAME_NETINET_IN_H_INCLUDED_


665 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

666 
__BEGIN_DECLS


667 
	`bödªsvp‹t
(, 
sockaddr_ö
 *);

668 
sockaddr
;

669 
	`bödªsvp‹t_ß
(, 
sockaddr
 *);

670 
__END_DECLS


	@/usr/include/signal.h

58 #i‚de‡
_USER_SIGNAL_H


59 
	#_USER_SIGNAL_H


	)

61 
	~<sys/cdefs.h
>

62 
	~<_ty≥s.h
>

63 
	~<sys/sig«l.h
>

65 #i‚de‡
_PTHREAD_T


66 
__d¨wö_±hªad_t
 
	t±hªad_t
;

67 
	#_PTHREAD_T


	)

70 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

71 
__c⁄°
 *__c⁄° 
sys_sig«me
[
NSIG
];

72 
__c⁄°
 *__c⁄° 
sys_sigli°
[
NSIG
];

75 
__BEGIN_DECLS


76 
øi£
();

77 
	g__END_DECLS


79 #i‚def 
_ANSI_SOURCE


80 
__BEGIN_DECLS


81 (*
bsd_sig«l
(, (*)()))();

82 
	$kûl
(
pid_t
, Ë
	`__DARWIN_ALIAS
(
kûl
);

83 
	$kûÕg
(
pid_t
, Ë
	`__DARWIN_ALIAS
(
kûÕg
);

84 
	`±hªad_kûl
(
±hªad_t
, );

85 
	$±hªad_sigmask
(, c⁄° 
sig£t_t
 *, sig£t_à*Ë
	`__DARWIN_ALIAS
(
±hªad_sigmask
);

86 
	`siga˘i⁄
(, c⁄° 
siga˘i⁄
 * 
__ª°ri˘
,

87 
siga˘i⁄
 * 
__ª°ri˘
);

88 
	`sigadd£t
(
sig£t_t
 *, );

89 
	$sigÆt°ack
(c⁄° 
°ack_t
 * 
__ª°ri˘
, sèck_à* __ª°ri˘Ë
	`__DARWIN_ALIAS
(
sigÆt°ack
);

90 
	`sigdñ£t
(
sig£t_t
 *, );

91 
	`sigem±y£t
(
sig£t_t
 *);

92 
	`sigfûl£t
(
sig£t_t
 *);

93 
	`sighﬁd
();

94 
	`sigign‹e
();

95 
	`sigöãºu±
(, );

96 
	`sigismembî
(c⁄° 
sig£t_t
 *, );

97 
	$sig∑u£
(Ë
	`__DARWIN_ALIAS_C
(
sig∑u£
);

98 
	`sig≥ndög
(
sig£t_t
 *);

99 
	`sig¥ocmask
(, c⁄° 
sig£t_t
 * 
__ª°ri˘
, sigset_t * __restrict);

100 
	`sigªl£
();

101 (*
	`sig£t
(, (*)()))();

102 
	$sigsu•íd
(c⁄° 
sig£t_t
 *Ë
	`__DARWIN_ALIAS_C
(
sigsu•íd
);

103 
	$sigwaô
(c⁄° 
sig£t_t
 * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS_C
(
sigwaô
);

104 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

105 
	`psig«l
(, const *);

106 
	`sigblock
();

107 
	`sig£tmask
();

108 
	`sigvec
(, 
sigvec
 *, sigvec *);

110 
__END_DECLS


113 #i‡
	`deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

115 
__ölöe
 

116 
	$__sigbôs
(
__signo
)

118  
__signo
 > 
__DARWIN_NSIG
 ? 0 : (1 << (__signo - 1));

119 
	}
}

121 
	#__sigbôs
(
signo
Ë(1 << ((signoË- 1))

	)

124 
	#sigadd£t
(
£t
, 
signo
Ë(*(£tË|
	`__sigbôs
(signo), 0)

	)

125 
	#sigdñ£t
(
£t
, 
signo
Ë(*(£tË&~
	`__sigbôs
(signo), 0)

	)

126 
	#sigismembî
(
£t
, 
signo
Ë((*(£tË& 
	`__sigbôs
(signo)Ë!0)

	)

127 
	#sigem±y£t
(
£t
Ë(*(£tË0, 0)

	)

128 
	#sigfûl£t
(
£t
Ë(*(£tË~(
sig£t_t
)0, 0)

	)

	@/usr/include/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

52 #i‚de‡
SQLITE_API


53 
	#SQLITE_API


	)

70 
	#SQLITE_DEPRECATED


	)

71 
	#SQLITE_EXPERIMENTAL


	)

72 #i‚de‡
__OSX_AVAILABLE_BUT_DEPRECATED


73 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
MacOSAvaûabÀ
, 
MacOSDïªˇãd
, 
iPh⁄eOSAvaûabÀ
, 
iPh⁄eOSDïªˇãd
)

	)

79 #ifde‡
SQLITE_VERSION


80 #unde‡
SQLITE_VERSION


82 #ifde‡
SQLITE_VERSION_NUMBER


83 #unde‡
SQLITE_VERSION_NUMBER


113 
	#SQLITE_VERSION
 "3.7.5"

	)

114 
	#SQLITE_VERSION_NUMBER
 3007005

	)

115 
	#SQLITE_SOURCE_ID
 "2011-02-10 01:49:18 55d2e55b7b0f7851a565e3a982f772afdf8d7a12"

	)

147 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

148 
SQLITE_API
 c⁄° *
sqlôe3_libvîsi⁄
();

149 
SQLITE_API
 c⁄° *
sqlôe3_sour˚id
();

150 
SQLITE_API
 
sqlôe3_libvîsi⁄_numbî
();

174 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


175 
SQLITE_API
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

176 
SQLITE_API
 c⁄° *
sqlôe3_compûe›ti⁄_gë
(
N
);

215 
SQLITE_API
 
sqlôe3_thªadß„
();

230 
sqlôe3
 
	tsqlôe3
;

248 #ifde‡
SQLITE_INT64_TYPE


249 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

250 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

251 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

252 
__öt64
 
	tsqlôe_öt64
;

253 
	t__öt64
 
	tsqlôe_uöt64
;

255 
	tsqlôe_öt64
;

256 
	tsqlôe_uöt64
;

258 
sqlôe_öt64
 
	tsqlôe3_öt64
;

259 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

265 #ifde‡
SQLITE_OMIT_FLOATING_POINT


266 
sqlôe3_öt64


	)

293 
SQLITE_API
 
sqlôe3_˛o£
(
sqlôe3
 *);

300 (*
sqlôe3_ˇŒback
)(*,,**, **);

363 
SQLITE_API
 
sqlôe3_exec
(

364 
sqlôe3
*,

365 c⁄° *
sql
,

366 (*
ˇŒback
)(*,,**,**),

368 **
îrmsg


383 
	#SQLITE_OK
 0

	)

385 
	#SQLITE_ERROR
 1

	)

386 
	#SQLITE_INTERNAL
 2

	)

387 
	#SQLITE_PERM
 3

	)

388 
	#SQLITE_ABORT
 4

	)

389 
	#SQLITE_BUSY
 5

	)

390 
	#SQLITE_LOCKED
 6

	)

391 
	#SQLITE_NOMEM
 7

	)

392 
	#SQLITE_READONLY
 8

	)

393 
	#SQLITE_INTERRUPT
 9

	)

394 
	#SQLITE_IOERR
 10

	)

395 
	#SQLITE_CORRUPT
 11

	)

396 
	#SQLITE_NOTFOUND
 12

	)

397 
	#SQLITE_FULL
 13

	)

398 
	#SQLITE_CANTOPEN
 14

	)

399 
	#SQLITE_PROTOCOL
 15

	)

400 
	#SQLITE_EMPTY
 16

	)

401 
	#SQLITE_SCHEMA
 17

	)

402 
	#SQLITE_TOOBIG
 18

	)

403 
	#SQLITE_CONSTRAINT
 19

	)

404 
	#SQLITE_MISMATCH
 20

	)

405 
	#SQLITE_MISUSE
 21

	)

406 
	#SQLITE_NOLFS
 22

	)

407 
	#SQLITE_AUTH
 23

	)

408 
	#SQLITE_FORMAT
 24

	)

409 
	#SQLITE_RANGE
 25

	)

410 
	#SQLITE_NOTADB
 26

	)

411 
	#SQLITE_ROW
 100

	)

412 
	#SQLITE_DONE
 101

	)

438 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

439 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

440 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

441 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

442 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

443 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

444 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

445 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

446 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

447 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

448 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

449 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

450 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

451 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

452 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

453 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

454 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

455 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

456 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

457 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

458 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

459 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

460 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

470 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

471 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

472 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

473 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

474 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

475 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

476 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

477 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

478 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

479 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

480 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

481 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

482 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

483 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

484 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

485 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

486 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

487 
	#SQLITE_OPEN_WAL
 0x00080000

	)

488 
	#SQLITE_OPEN_FILEPROTECTION_COMPLETE
 0x00100000

	)

489 
	#SQLITE_OPEN_FILEPROTECTION_COMPLETEUNLESSOPEN
 0x00200000

	)

490 
	#SQLITE_OPEN_FILEPROTECTION_COMPLETEUNTILFIRSTUSERAUTHENTICATION
 0x00300000

	)

491 
	#SQLITE_OPEN_FILEPROTECTION_NONE
 0x00000000

	)

492 
	#SQLITE_OPEN_FILEPROTECTION_MASK
 0x00300000

	)

514 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

515 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

516 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

517 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

518 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

519 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

520 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

521 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

522 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

523 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

524 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

525 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

534 
	#SQLITE_LOCK_NONE
 0

	)

535 
	#SQLITE_LOCK_SHARED
 1

	)

536 
	#SQLITE_LOCK_RESERVED
 2

	)

537 
	#SQLITE_LOCK_PENDING
 3

	)

538 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

566 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

567 
	#SQLITE_SYNC_FULL
 0x00003

	)

568 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

581 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

582 
	ssqlôe3_fûe
 {

583 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

675 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

676 
	ssqlôe3_io_mëhods
 {

677 
iVîsi⁄
;

678 (*
xClo£
)(
sqlôe3_fûe
*);

679 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

680 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

681 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

682 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

683 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

684 (*
xLock
)(
sqlôe3_fûe
*, );

685 (*
xU∆ock
)(
sqlôe3_fûe
*, );

686 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

687 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

688 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

689 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

691 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

692 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

693 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

694 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

744 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

745 
	#SQLITE_GET_LOCKPROXYFILE
 2

	)

746 
	#SQLITE_SET_LOCKPROXYFILE
 3

	)

747 
	#SQLITE_LAST_ERRNO
 4

	)

748 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

749 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

750 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

751 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

764 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

908 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

909 
	ssqlôe3_vfs
 {

910 
iVîsi⁄
;

911 
szOsFûe
;

912 
mxP©h«me
;

913 
sqlôe3_vfs
 *
pNext
;

914 c⁄° *
zName
;

915 *
pAµD©a
;

916 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

917 
Êags
, *
pOutFœgs
);

918 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

919 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

920 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

921 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

922 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

923 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

924 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

925 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

926 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

927 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

928 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

933 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

961 
	#SQLITE_ACCESS_EXISTS
 0

	)

962 
	#SQLITE_ACCESS_READWRITE
 1

	)

963 
	#SQLITE_ACCESS_READ
 2

	)

987 
	#SQLITE_SHM_UNLOCK
 1

	)

988 
	#SQLITE_SHM_LOCK
 2

	)

989 
	#SQLITE_SHM_SHARED
 4

	)

990 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1000 
	#SQLITE_SHM_NLOCK
 8

	)

1078 
SQLITE_API
 
sqlôe3_öôülize
();

1079 
SQLITE_API
 
sqlôe3_shutdown
();

1080 
SQLITE_API
 
sqlôe3_os_öô
();

1081 
SQLITE_API
 
sqlôe3_os_íd
();

1112 
SQLITE_API
 
sqlôe3_c⁄fig
(, ...);

1135 
SQLITE_API
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1206 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1207 
	ssqlôe3_mem_mëhods
 {

1208 *(*
xMÆloc
)();

1209 (*
xFªe
)(*);

1210 *(*
xRóŒoc
)(*,);

1211 (*
xSize
)(*);

1212 (*
xRoundup
)();

1213 (*
xInô
)(*);

1214 (*
xShutdown
)(*);

1215 *
pAµD©a
;

1423 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1424 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1425 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1426 
	#SQLITE_CONFIG_MALLOC
 4

	)

1427 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1428 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1429 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1430 
	#SQLITE_CONFIG_HEAP
 8

	)

1431 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1432 
	#SQLITE_CONFIG_MUTEX
 10

	)

1433 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1435 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1436 
	#SQLITE_CONFIG_PCACHE
 14

	)

1437 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1438 
	#SQLITE_CONFIG_LOG
 16

	)

1478 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1488 
SQLITE_API
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1533 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

1587 
SQLITE_API
 
sqlôe3_ch™ges
(
sqlôe3
*);

1613 
SQLITE_API
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

1652 
SQLITE_API
 
sqlôe3_öãºu±
(
sqlôe3
*);

1687 
SQLITE_API
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

1688 
SQLITE_API
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

1754 
SQLITE_API
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

1774 
SQLITE_API
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

1848 
SQLITE_API
 
sqlôe3_gë_èbÀ
(

1849 
sqlôe3
 *
db
,

1850 c⁄° *
zSql
,

1851 ***
∑zResu…
,

1852 *
≤Row
,

1853 *
≤Cﬁumn
,

1854 **
pzEºmsg


1856 
SQLITE_API
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

1952 
SQLITE_API
 *
sqlôe3_m¥ötf
(const *,...);

1953 
SQLITE_API
 *
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

1954 
SQLITE_API
 *
sqlôe3_¢¥ötf
(,*,const *, ...);

1955 
SQLITE_API
 *
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2027 
SQLITE_API
 *
sqlôe3_mÆloc
();

2028 
SQLITE_API
 *
sqlôe3_ªÆloc
(*, );

2029 
SQLITE_API
 
sqlôe3_‰ì
(*);

2054 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_u£d
();

2055 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2075 
SQLITE_API
 
sqlôe3_øndom√ss
(
N
, *
P
);

2157 
SQLITE_API
 
sqlôe3_£t_auth‹izî
(

2158 
sqlôe3
*,

2159 (*
xAuth
)(*,,const *,const *,const *,const *),

2160 *
pU£rD©a


2172 
	#SQLITE_DENY
 1

	)

2173 
	#SQLITE_IGNORE
 2

	)

2195 
	#SQLITE_CREATE_INDEX
 1

	)

2196 
	#SQLITE_CREATE_TABLE
 2

	)

2197 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2198 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2199 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2200 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2201 
	#SQLITE_CREATE_TRIGGER
 7

	)

2202 
	#SQLITE_CREATE_VIEW
 8

	)

2203 
	#SQLITE_DELETE
 9

	)

2204 
	#SQLITE_DROP_INDEX
 10

	)

2205 
	#SQLITE_DROP_TABLE
 11

	)

2206 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2207 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2208 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2209 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2210 
	#SQLITE_DROP_TRIGGER
 16

	)

2211 
	#SQLITE_DROP_VIEW
 17

	)

2212 
	#SQLITE_INSERT
 18

	)

2213 
	#SQLITE_PRAGMA
 19

	)

2214 
	#SQLITE_READ
 20

	)

2215 
	#SQLITE_SELECT
 21

	)

2216 
	#SQLITE_TRANSACTION
 22

	)

2217 
	#SQLITE_UPDATE
 23

	)

2218 
	#SQLITE_ATTACH
 24

	)

2219 
	#SQLITE_DETACH
 25

	)

2220 
	#SQLITE_ALTER_TABLE
 26

	)

2221 
	#SQLITE_REINDEX
 27

	)

2222 
	#SQLITE_ANALYZE
 28

	)

2223 
	#SQLITE_CREATE_VTABLE
 29

	)

2224 
	#SQLITE_DROP_VTABLE
 30

	)

2225 
	#SQLITE_FUNCTION
 31

	)

2226 
	#SQLITE_SAVEPOINT
 32

	)

2227 
	#SQLITE_COPY
 0

	)

2254 
SQLITE_API
 *
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2255 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
sqlôe3_¥ofûe
(
sqlôe3
*,

2256 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2288 
SQLITE_API
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

2379 
SQLITE_API
 
sqlôe3_›í
(

2380 c⁄° *
fûíame
,

2381 
sqlôe3
 **
µDb


2383 
SQLITE_API
 
sqlôe3_›í16
(

2384 c⁄° *
fûíame
,

2385 
sqlôe3
 **
µDb


2387 
SQLITE_API
 
sqlôe3_›í_v2
(

2388 c⁄° *
fûíame
,

2389 
sqlôe3
 **
µDb
,

2390 
Êags
,

2391 c⁄° *
zVfs


2427 
SQLITE_API
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

2428 
SQLITE_API
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

2429 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg
(
sqlôe3
*);

2430 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg16
(
sqlôe3
*);

2456 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

2497 
SQLITE_API
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

2549 
	#SQLITE_LIMIT_LENGTH
 0

	)

2550 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

2551 
	#SQLITE_LIMIT_COLUMN
 2

	)

2552 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

2553 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

2554 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

2555 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

2556 
	#SQLITE_LIMIT_ATTACHED
 7

	)

2557 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

2558 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

2559 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

2641 
SQLITE_API
 
sqlôe3_¥ï¨e
(

2642 
sqlôe3
 *
db
,

2643 c⁄° *
zSql
,

2644 
nByã
,

2645 
sqlôe3_°mt
 **
µStmt
,

2646 c⁄° **
pzTaû


2648 
SQLITE_API
 
sqlôe3_¥ï¨e_v2
(

2649 
sqlôe3
 *
db
,

2650 c⁄° *
zSql
,

2651 
nByã
,

2652 
sqlôe3_°mt
 **
µStmt
,

2653 c⁄° **
pzTaû


2655 
SQLITE_API
 
sqlôe3_¥ï¨e16
(

2656 
sqlôe3
 *
db
,

2657 c⁄° *
zSql
,

2658 
nByã
,

2659 
sqlôe3_°mt
 **
µStmt
,

2660 c⁄° **
pzTaû


2662 
SQLITE_API
 
sqlôe3_¥ï¨e16_v2
(

2663 
sqlôe3
 *
db
,

2664 c⁄° *
zSql
,

2665 
nByã
,

2666 
sqlôe3_°mt
 **
µStmt
,

2667 c⁄° **
pzTaû


2677 
SQLITE_API
 c⁄° *
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

2708 
SQLITE_API
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

2747 
Mem
 
	tsqlôe3_vÆue
;

2761 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

2845 
SQLITE_API
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

2846 
SQLITE_API
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

2847 
SQLITE_API
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

2848 
SQLITE_API
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

2849 
SQLITE_API
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

2850 
SQLITE_API
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

2851 
SQLITE_API
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

2852 
SQLITE_API
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

2853 
SQLITE_API
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

2873 
SQLITE_API
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

2900 
SQLITE_API
 c⁄° *
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

2916 
SQLITE_API
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

2925 
SQLITE_API
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

2936 
SQLITE_API
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

2962 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

2963 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3008 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3009 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3010 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3011 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3012 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3013 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3044 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3045 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3124 
SQLITE_API
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3138 
SQLITE_API
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3161 
	#SQLITE_INTEGER
 1

	)

3162 
	#SQLITE_FLOAT
 2

	)

3163 
	#SQLITE_BLOB
 4

	)

3164 
	#SQLITE_NULL
 5

	)

3165 #ifde‡
SQLITE_TEXT


3166 #unde‡
SQLITE_TEXT


3168 
	#SQLITE_TEXT
 3

	)

3170 
	#SQLITE3_TEXT
 3

	)

3334 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

3335 
SQLITE_API
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

3336 
SQLITE_API
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

3337 
SQLITE_API
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

3338 
SQLITE_API
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

3339 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

3340 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

3341 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

3342 
SQLITE_API
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

3343 
SQLITE_API
 
sqlôe3_vÆue
 *
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

3370 
SQLITE_API
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

3396 
SQLITE_API
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

3486 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄
(

3487 
sqlôe3
 *
db
,

3488 c⁄° *
zFun˘i⁄Name
,

3489 
nArg
,

3490 
eTextRï
,

3491 *
pAµ
,

3492 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3493 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3494 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

3496 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄16
(

3497 
sqlôe3
 *
db
,

3498 c⁄° *
zFun˘i⁄Name
,

3499 
nArg
,

3500 
eTextRï
,

3501 *
pAµ
,

3502 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3503 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3504 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

3506 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄_v2
(

3507 
sqlôe3
 *
db
,

3508 c⁄° *
zFun˘i⁄Name
,

3509 
nArg
,

3510 
eTextRï
,

3511 *
pAµ
,

3512 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3513 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3514 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

3515 (*
xDe°roy
)(*)

3524 
	#SQLITE_UTF8
 1

	)

3525 
	#SQLITE_UTF16LE
 2

	)

3526 
	#SQLITE_UTF16BE
 3

	)

3527 
	#SQLITE_UTF16
 4

	)

3528 
	#SQLITE_ANY
 5

	)

3529 
	#SQLITE_UTF16_ALIGNED
 8

	)

3541 #i‚de‡
SQLITE_OMIT_DEPRECATED


3542 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

3543 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

3544 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

3545 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_globÆ_ªcovî
();

3546 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_thªad_˛ónup
();

3547 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),*,sqlite3_int64);

3595 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

3596 
SQLITE_API
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

3597 
SQLITE_API
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

3598 
SQLITE_API
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

3599 
SQLITE_API
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

3600 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

3601 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

3602 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

3603 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

3604 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

3605 
SQLITE_API
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

3606 
SQLITE_API
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

3647 
SQLITE_API
 *
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

3661 
SQLITE_API
 *
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

3672 
SQLITE_API
 
sqlôe3
 *
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

3716 
SQLITE_API
 *
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

3717 
SQLITE_API
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

3734 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

3735 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

3736 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

3843 
SQLITE_API
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

3844 
SQLITE_API
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

3845 
SQLITE_API
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

3846 
SQLITE_API
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

3847 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

3848 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

3849 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

3850 
SQLITE_API
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

3851 
SQLITE_API
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

3852 
SQLITE_API
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

3853 
SQLITE_API
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

3854 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

3855 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

3856 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

3857 
SQLITE_API
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

3858 
SQLITE_API
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

3939 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄
(

3940 
sqlôe3
*,

3941 c⁄° *
zName
,

3942 
eTextRï
,

3943 *
pArg
,

3944 (*
xCom∑ª
)(*,,const *,,const *)

3946 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

3947 
sqlôe3
*,

3948 c⁄° *
zName
,

3949 
eTextRï
,

3950 *
pArg
,

3951 (*
xCom∑ª
)(*,,const *,,const *),

3952 (*
xDe°roy
)(*)

3954 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄16
(

3955 
sqlôe3
*,

3956 c⁄° *
zName
,

3957 
eTextRï
,

3958 *
pArg
,

3959 (*
xCom∑ª
)(*,,const *,,const *)

3988 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded
(

3989 
sqlôe3
*,

3991 (*)(*,
sqlôe3
*,
eTextRï
,const *)

3993 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded16
(

3994 
sqlôe3
*,

3996 (*)(*,
sqlôe3
*,
eTextRï
,const *)

3999 #ifde‡
SQLITE_HAS_CODEC


4007 
SQLITE_API
 
sqlôe3_key
(

4008 
sqlôe3
 *
db
,

4009 c⁄° *
pKey
, 
nKey


4020 
SQLITE_API
 
sqlôe3_ªkey
(

4021 
sqlôe3
 *
db
,

4022 c⁄° *
pKey
, 
nKey


4029 
SQLITE_API
 
sqlôe3_a˘iv©e_£e
(

4030 c⁄° *
zPassPhø£


4034 #ifde‡
SQLITE_ENABLE_CEROD


4039 
SQLITE_API
 
sqlôe3_a˘iv©e_˚rod
(

4040 c⁄° *
zPassPhø£


4061 
SQLITE_API
 
sqlôe3_¶ìp
();

4092 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

4115 
SQLITE_API
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

4127 
SQLITE_API
 
sqlôe3
 *
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

4142 
SQLITE_API
 
sqlôe3_°mt
 *
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

4188 
SQLITE_API
 *
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

4189 
SQLITE_API
 *
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

4237 
SQLITE_API
 *
sqlôe3_upd©e_hook
(

4238 
sqlôe3
*,

4239 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

4275 
SQLITE_API
 
sqlôe3_íabÀ_sh¨ed_ˇche
(Ë
__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_7
, 
__IPHONE_2_0
, 
__IPHONE_5_0
);

4289 
SQLITE_API
 
sqlôe3_ªÀa£_mem‹y
();

4340 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

4351 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_so·_hóp_limô
(
N
);

4416 
SQLITE_API
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

4417 
sqlôe3
 *
db
,

4418 c⁄° *
zDbName
,

4419 c⁄° *
zTabÀName
,

4420 c⁄° *
zCﬁumnName
,

4421 c⁄° **
pzD©aTy≥
,

4422 c⁄° **
pzCﬁlSeq
,

4423 *
pNŸNuŒ
,

4424 *
pPrim¨yKey
,

4425 *
pAutoöc


4453 
SQLITE_API
 
sqlôe3_lﬂd_exãnsi⁄
(

4454 
sqlôe3
 *
db
,

4455 c⁄° *
zFûe
,

4456 c⁄° *
zProc
,

4457 **
pzEºMsg


4473 
SQLITE_API
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

4510 
SQLITE_API
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

4518 
SQLITE_API
 
sqlôe3_ª£t_auto_exãnsi⁄
();

4532 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

4533 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

4534 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

4535 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

4553 
	ssqlôe3_moduÀ
 {

4554 
iVîsi⁄
;

4555 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

4556 
¨gc
, c⁄° *c⁄°*
¨gv
,

4557 
sqlôe3_vèb
 **
µVTab
, **);

4558 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

4559 
¨gc
, c⁄° *c⁄°*
¨gv
,

4560 
sqlôe3_vèb
 **
µVTab
, **);

4561 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

4562 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

4563 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

4564 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

4565 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

4566 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

4567 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

4568 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

4569 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

4570 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

4571 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

4572 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

4573 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

4574 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

4575 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

4576 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

4577 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

4578 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4579 **
µArg
);

4580 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

4636 
	ssqlôe3_ödex_öfo
 {

4638 
nC⁄°øöt
;

4639 
	ssqlôe3_ödex_c⁄°øöt
 {

4640 
iCﬁumn
;

4641 
›
;

4642 
ußbÀ
;

4643 
iTîmOff£t
;

4644 } *
aC⁄°øöt
;

4645 
nOrdîBy
;

4646 
	ssqlôe3_ödex_‹dîby
 {

4647 
iCﬁumn
;

4648 
desc
;

4649 } *
aOrdîBy
;

4651 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

4652 
¨gvIndex
;

4653 
omô
;

4654 } *
aC⁄°øötUßge
;

4655 
idxNum
;

4656 *
idxSå
;

4657 
√edToFªeIdxSå
;

4658 
‹dîByC⁄sumed
;

4659 
e°im©edCo°
;

4670 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

4671 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

4672 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

4673 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

4674 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

4675 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

4702 
SQLITE_API
 
sqlôe3_¸óã_moduÀ
(

4703 
sqlôe3
 *
db
,

4704 c⁄° *
zName
,

4705 c⁄° 
sqlôe3_moduÀ
 *
p
,

4706 *
pClõ¡D©a


4708 
SQLITE_API
 
sqlôe3_¸óã_moduÀ_v2
(

4709 
sqlôe3
 *
db
,

4710 c⁄° *
zName
,

4711 c⁄° 
sqlôe3_moduÀ
 *
p
,

4712 *
pClõ¡D©a
,

4713 (*
xDe°roy
)(*)

4734 
	ssqlôe3_vèb
 {

4735 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

4736 
nRef
;

4737 *
zEºMsg
;

4758 
	ssqlôe3_vèb_curs‹
 {

4759 
sqlôe3_vèb
 *
pVèb
;

4771 
SQLITE_API
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

4789 
SQLITE_API
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

4813 
sqlôe3_blob
 
	tsqlôe3_blob
;

4871 
SQLITE_API
 
sqlôe3_blob_›í
(

4872 
sqlôe3
*,

4873 c⁄° *
zDb
,

4874 c⁄° *
zTabÀ
,

4875 c⁄° *
zCﬁumn
,

4876 
sqlôe3_öt64
 
iRow
,

4877 
Êags
,

4878 
sqlôe3_blob
 **
µBlob


4903 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

4927 
SQLITE_API
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

4942 
SQLITE_API
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

4970 
SQLITE_API
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

5008 
SQLITE_API
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

5039 
SQLITE_API
 
sqlôe3_vfs
 *
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

5040 
SQLITE_API
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

5041 
SQLITE_API
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

5157 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_muãx_Æloc
();

5158 
SQLITE_API
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

5159 
SQLITE_API
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

5160 
SQLITE_API
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

5161 
SQLITE_API
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

5228 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

5229 
	ssqlôe3_muãx_mëhods
 {

5230 (*
xMuãxInô
)();

5231 (*
xMuãxEnd
)();

5232 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

5233 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

5234 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

5235 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

5236 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

5237 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

5238 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

5270 #i‚de‡
NDEBUG


5271 
SQLITE_API
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

5272 
SQLITE_API
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

5285 
	#SQLITE_MUTEX_FAST
 0

	)

5286 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

5287 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

5288 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

5289 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

5290 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

5291 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

5292 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

5293 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

5294 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

5305 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_db_muãx
(
sqlôe3
*);

5339 
SQLITE_API
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

5358 
SQLITE_API
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

5371 
	#SQLITE_TESTCTRL_FIRST
 5

	)

5372 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

5373 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

5374 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

5375 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

5376 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

5377 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

5378 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

5379 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

5380 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

5381 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

5382 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

5383 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

5384 
	#SQLITE_TESTCTRL_PGHDRSZ
 17

	)

5385 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 18

	)

5386 
	#SQLITE_TESTCTRL_LAST
 18

	)

5417 
SQLITE_API
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

5500 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

5501 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

5502 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

5503 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

5504 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

5505 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

5506 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

5507 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

5508 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

5509 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

5533 
SQLITE_API
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

5596 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

5597 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

5598 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

5599 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

5600 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

5601 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

5602 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

5603 
	#SQLITE_DBSTATUS_MAX
 6

	)

5629 
SQLITE_API
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

5659 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

5660 
	#SQLITE_STMTSTATUS_SORT
 2

	)

5661 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

5674 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

5817 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

5818 
	ssqlôe3_pˇche_mëhods
 {

5819 *
pArg
;

5820 (*
xInô
)(*);

5821 (*
xShutdown
)(*);

5822 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

5823 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

5824 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

5825 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

5826 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

5827 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

5828 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

5829 (*
xDe°roy
)(
sqlôe3_pˇche
*);

5842 
sqlôe3_backup
 
	tsqlôe3_backup
;

6025 
SQLITE_API
 
sqlôe3_backup
 *
sqlôe3_backup_öô
(

6026 
sqlôe3
 *
pDe°
,

6027 c⁄° *
zDe°Name
,

6028 
sqlôe3
 *
pSour˚
,

6029 c⁄° *
zSour˚Name


6031 
SQLITE_API
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

6032 
SQLITE_API
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

6033 
SQLITE_API
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

6034 
SQLITE_API
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

6150 
SQLITE_API
 
sqlôe3_u∆ock_nŸify
(

6151 
sqlôe3
 *
pBlocked
,

6152 (*
xNŸify
)(**
≠Arg
, 
nArg
),

6153 *
pNŸifyArg


6165 
SQLITE_API
 
sqlôe3_°∫icmp
(const *, const *, );

6188 
SQLITE_API
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

6225 
SQLITE_API
 *
sqlôe3_wÆ_hook
(

6226 
sqlôe3
*,

6227 (*)(*,
sqlôe3
*,const *,),

6256 
SQLITE_API
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

6272 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

6278 #ifde‡
SQLITE_OMIT_FLOATING_POINT


6282 #ifde‡
__˝lu•lus


6300 #i‚de‡
_SQLITE3RTREE_H_


6301 
	#_SQLITE3RTREE_H_


	)

6304 #ifde‡
__˝lu•lus


6308 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

6316 
SQLITE_API
 
sqlôe3_πªe_geomëry_ˇŒback
(

6317 
sqlôe3
 *
db
,

6318 c⁄° *
zGeom
,

6319 (*
xGeom
)(
sqlôe3_πªe_geomëry
 *, 
nCo‹d
, *
aCo‹d
, *
pRes
),

6320 *
pC⁄ãxt


6328 
	ssqlôe3_πªe_geomëry
 {

6329 *
pC⁄ãxt
;

6330 
nP¨am
;

6331 *
aP¨am
;

6332 *
pU£r
;

6333 (*
xDñU£r
)(*);

6337 #ifde‡
__˝lu•lus


	@/usr/include/stdint.h

6 #i‚de‡
_STDINT_H_


7 
	#_STDINT_H_


	)

9 #i‡
__LP64__


10 
	#__WORDSIZE
 64

	)

12 
	#__WORDSIZE
 32

	)

18 #i‚de‡
_INT8_T


19 
	#_INT8_T


	)

20 sig√d 
	töt8_t
;

23 #i‚de‡
_INT16_T


24 
	#_INT16_T


	)

25 
	töt16_t
;

28 #i‚de‡
_INT32_T


29 
	#_INT32_T


	)

30 
	töt32_t
;

33 #i‚de‡
_INT64_T


34 
	#_INT64_T


	)

35 
	töt64_t
;

38 #i‚de‡
_UINT8_T


39 
	#_UINT8_T


	)

40 
	tuöt8_t
;

43 #i‚de‡
_UINT16_T


44 
	#_UINT16_T


	)

45 
	tuöt16_t
;

48 #i‚de‡
_UINT32_T


49 
	#_UINT32_T


	)

50 
	tuöt32_t
;

53 #i‚de‡
_UINT64_T


54 
	#_UINT64_T


	)

55 
	tuöt64_t
;

59 
öt8_t
 
	töt_Àa°8_t
;

60 
öt16_t
 
	töt_Àa°16_t
;

61 
öt32_t
 
	töt_Àa°32_t
;

62 
öt64_t
 
	töt_Àa°64_t
;

63 
uöt8_t
 
	tuöt_Àa°8_t
;

64 
uöt16_t
 
	tuöt_Àa°16_t
;

65 
uöt32_t
 
	tuöt_Àa°32_t
;

66 
uöt64_t
 
	tuöt_Àa°64_t
;

70 
öt8_t
 
	töt_Á°8_t
;

71 
öt16_t
 
	töt_Á°16_t
;

72 
öt32_t
 
	töt_Á°32_t
;

73 
öt64_t
 
	töt_Á°64_t
;

74 
uöt8_t
 
	tuöt_Á°8_t
;

75 
uöt16_t
 
	tuöt_Á°16_t
;

76 
uöt32_t
 
	tuöt_Á°32_t
;

77 
uöt64_t
 
	tuöt_Á°64_t
;

82 #i‚de‡
_INTPTR_T


83 
	#_INTPTR_T


	)

84 
	töçå_t
;

87 #i‚de‡
_UINTPTR_T


88 
	#_UINTPTR_T


	)

89 
	tuöçå_t
;

94 #i‚de‡
_INTMAX_T


95 
	#_INTMAX_T


	)

96 #ifde‡
__INTMAX_TYPE__


97 
__INTMAX_TYPE__
 
	tötmax_t
;

99 
	tötmax_t
;

103 #i‚de‡
_UINTMAX_T


104 
	#_UINTMAX_T


	)

105 #ifde‡
__UINTMAX_TYPE__


106 
__UINTMAX_TYPE__
 
	tuötmax_t
;

108 
	tuötmax_t
;

119 
	#INT8_MAX
 127

	)

120 
	#INT16_MAX
 32767

	)

121 
	#INT32_MAX
 2147483647

	)

122 
	#INT64_MAX
 9223372036854775807LL

	)

124 
	#INT8_MIN
 -128

	)

125 
	#INT16_MIN
 -32768

	)

132 
	#INT32_MIN
 (-
INT32_MAX
-1)

	)

133 
	#INT64_MIN
 (-
INT64_MAX
-1)

	)

135 
	#UINT8_MAX
 255

	)

136 
	#UINT16_MAX
 65535

	)

137 
	#UINT32_MAX
 4294967295U

	)

138 
	#UINT64_MAX
 18446744073709551615ULL

	)

141 
	#INT_LEAST8_MIN
 
INT8_MIN


	)

142 
	#INT_LEAST16_MIN
 
INT16_MIN


	)

143 
	#INT_LEAST32_MIN
 
INT32_MIN


	)

144 
	#INT_LEAST64_MIN
 
INT64_MIN


	)

146 
	#INT_LEAST8_MAX
 
INT8_MAX


	)

147 
	#INT_LEAST16_MAX
 
INT16_MAX


	)

148 
	#INT_LEAST32_MAX
 
INT32_MAX


	)

149 
	#INT_LEAST64_MAX
 
INT64_MAX


	)

151 
	#UINT_LEAST8_MAX
 
UINT8_MAX


	)

152 
	#UINT_LEAST16_MAX
 
UINT16_MAX


	)

153 
	#UINT_LEAST32_MAX
 
UINT32_MAX


	)

154 
	#UINT_LEAST64_MAX
 
UINT64_MAX


	)

157 
	#INT_FAST8_MIN
 
INT8_MIN


	)

158 
	#INT_FAST16_MIN
 
INT16_MIN


	)

159 
	#INT_FAST32_MIN
 
INT32_MIN


	)

160 
	#INT_FAST64_MIN
 
INT64_MIN


	)

162 
	#INT_FAST8_MAX
 
INT8_MAX


	)

163 
	#INT_FAST16_MAX
 
INT16_MAX


	)

164 
	#INT_FAST32_MAX
 
INT32_MAX


	)

165 
	#INT_FAST64_MAX
 
INT64_MAX


	)

167 
	#UINT_FAST8_MAX
 
UINT8_MAX


	)

168 
	#UINT_FAST16_MAX
 
UINT16_MAX


	)

169 
	#UINT_FAST32_MAX
 
UINT32_MAX


	)

170 
	#UINT_FAST64_MAX
 
UINT64_MAX


	)

174 #i‡
__WORDSIZE
 == 64

175 
	#INTPTR_MIN
 
INT64_MIN


	)

176 
	#INTPTR_MAX
 
INT64_MAX


	)

178 
	#INTPTR_MIN
 
INT32_MIN


	)

179 
	#INTPTR_MAX
 
INT32_MAX


	)

182 #i‡
__WORDSIZE
 == 64

183 
	#UINTPTR_MAX
 
UINT64_MAX


	)

185 
	#UINTPTR_MAX
 
UINT32_MAX


	)

189 
	#INTMAX_MIN
 
INT64_MIN


	)

190 
	#INTMAX_MAX
 
INT64_MAX


	)

192 
	#UINTMAX_MAX
 
UINT64_MAX


	)

195 #i‡
__WORDSIZE
 == 64

196 
	#PTRDIFF_MIN
 
INT64_MIN


	)

197 
	#PTRDIFF_MAX
 
INT64_MAX


	)

199 
	#PTRDIFF_MIN
 
INT32_MIN


	)

200 
	#PTRDIFF_MAX
 
INT32_MAX


	)

207 #i‡
__WORDSIZE
 == 64

208 
	#SIZE_MAX
 
UINT64_MAX


	)

210 
	#SIZE_MAX
 
UINT32_MAX


	)

213 #i‚de‡
WCHAR_MAX


214 #ifde‡
__WCHAR_MAX__


215 
	#WCHAR_MAX
 
__WCHAR_MAX__


	)

217 
	#WCHAR_MAX
 0x7fffffff

	)

225 #i‚de‡
WCHAR_MIN


226 #i‡
WCHAR_MAX
 == 0xffff

227 
	#WCHAR_MIN
 0

	)

229 
	#WCHAR_MIN
 (-
WCHAR_MAX
-1)

	)

233 
	#WINT_MIN
 
INT32_MIN


	)

234 
	#WINT_MAX
 
INT32_MAX


	)

236 
	#SIG_ATOMIC_MIN
 
INT32_MIN


	)

237 
	#SIG_ATOMIC_MAX
 
INT32_MAX


	)

240 
	#INT8_C
(
v
Ë(v)

	)

241 
	#INT16_C
(
v
Ë(v)

	)

242 
	#INT32_C
(
v
Ë(v)

	)

243 
	#INT64_C
(
v
Ë(v ## 
LL
)

	)

245 
	#UINT8_C
(
v
Ë(v ## 
U
)

	)

246 
	#UINT16_C
(
v
Ë(v ## 
U
)

	)

247 
	#UINT32_C
(
v
Ë(v ## 
U
)

	)

248 
	#UINT64_C
(
v
Ë(v ## 
ULL
)

	)

250 
	#INTMAX_C
(
v
Ë(v ## 
LL
)

	)

251 
	#UINTMAX_C
(
v
Ë(v ## 
ULL
)

	)

	@/usr/include/stdio.h

61 #i‚def 
_STDIO_H_


62 
	#_STDIO_H_


	)

64 
	~<sys/cdefs.h
>

65 
	~<Avaûabûôy.h
>

67 
	~<_ty≥s.h
>

69 #i‚de‡
_VA_LIST


70 
	#_VA_LIST


	)

73 
__d¨wö_va_li°
 
	tva_li°
;

76 #i‚def 
_SIZE_T


77 
	#_SIZE_T


	)

78 
__d¨wö_size_t
 
	tsize_t
;

81 #i‚de‡
NULL


82 
	#NULL
 
__DARWIN_NULL


	)

85 
__d¨wö_off_t
 
	tÂos_t
;

87 
	#_FSTDIO


	)

96 
	s__sbuf
 {

97 *
	m_ba£
;

98 
	m_size
;

102 
	g__sFILEX
;

130 
	s__sFILE
 {

131 *
	m_p
;

132 
	m_r
;

133 
	m_w
;

134 
	m_Êags
;

135 
	m_fûe
;

136 
__sbuf
 
	m_bf
;

137 
	m_lbfsize
;

140 *
	m_cookõ
;

141 (*
	m_˛o£
)(*);

142 (*
	m_ªad
) (*, *, );

143 
Âos_t
 (*
_£ek
Ë(*, 
	mÂos_t
, );

144 (*
	m_wrôe
)(*, const *, );

147 
__sbuf
 
	m_ub
;

148 
__sFILEX
 *
	m_exåa
;

149 
	m_ur
;

152 
	m_ubuf
[3];

153 
	m_nbuf
[1];

156 
__sbuf
 
	m_lb
;

159 
	m_blksize
;

160 
Âos_t
 
	m_off£t
;

161 } 
	tFILE
;

163 
__BEGIN_DECLS


164 
FILE
 *
__°döp
;

165 
FILE
 *
__°douç
;

166 
FILE
 *
__°dîΩ
;

167 
	g__END_DECLS


169 
	#__SLBF
 0x0001

	)

170 
	#__SNBF
 0x0002

	)

171 
	#__SRD
 0x0004

	)

172 
	#__SWR
 0x0008

	)

174 
	#__SRW
 0x0010

	)

175 
	#__SEOF
 0x0020

	)

176 
	#__SERR
 0x0040

	)

177 
	#__SMBF
 0x0080

	)

178 
	#__SAPP
 0x0100

	)

179 
	#__SSTR
 0x0200

	)

180 
	#__SOPT
 0x0400

	)

181 
	#__SNPT
 0x0800

	)

182 
	#__SOFF
 0x1000

	)

183 
	#__SMOD
 0x2000

	)

184 
	#__SALC
 0x4000

	)

185 
	#__SIGN
 0x8000

	)

196 
	#_IOFBF
 0

	)

197 
	#_IOLBF
 1

	)

198 
	#_IONBF
 2

	)

200 
	#BUFSIZ
 1024

	)

201 
	#EOF
 (-1)

	)

204 
	#FOPEN_MAX
 20

	)

205 
	#FILENAME_MAX
 1024

	)

208 #i‚de‡
_ANSI_SOURCE


209 
	#P_tmpdú
 "/v¨/tmp/"

	)

211 
	#L_tm≤am
 1024

	)

212 
	#TMP_MAX
 308915776

	)

214 #i‚de‡
SEEK_SET


215 
	#SEEK_SET
 0

	)

217 #i‚de‡
SEEK_CUR


218 
	#SEEK_CUR
 1

	)

220 #i‚de‡
SEEK_END


221 
	#SEEK_END
 2

	)

224 
	#°dö
 
__°döp


	)

225 
	#°dout
 
__°douç


	)

226 
	#°dîr
 
__°dîΩ


	)

228 #ifde‡
_DARWIN_UNLIMITED_STREAMS


229 #i‡
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
Ë&& __IPHONE_OS_VERSION_MIN_REQUIRED < 
__IPHONE_3_2


231 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
Ë&& __MAC_OS_X_VERSION_MIN_REQUIRED < 
__MAC_10_6


238 
__BEGIN_DECLS


239 
˛óªº
(
FILE
 *);

240 
f˛o£
(
FILE
 *);

241 
„of
(
FILE
 *);

242 
„º‹
(
FILE
 *);

243 
fÊush
(
FILE
 *);

244 
fgëc
(
FILE
 *);

245 
fgëpos
(
FILE
 * 
__ª°ri˘
, 
Âos_t
 *);

246 *
fgës
(* 
__ª°ri˘
, , 
FILE
 *);

247 #i‡
deföed
(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
)

248 
FILE
 *
	$f›í
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
f›í
));

250 
FILE
 *
	$f›í
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
f›í
));

252 
	$Ârötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	$__DARWIN_LDBL_COMPAT
(
Ârötf
Ë
	`__¥ötÊike
(2, 3);

253 
	`Âutc
(, 
FILE
 *);

254 
	$Âuts
(c⁄° * 
__ª°ri˘
, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
Âuts
);

255 
size_t
 
	`‰ód
(* 
__ª°ri˘
, size_t, size_t, 
FILE
 * __restrict);

256 
FILE
 *
	$‰e›í
(c⁄° * 
__ª°ri˘
, const * __restrict,

257 
FILE
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
‰e›í
);

258 
	$fsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	$__DARWIN_LDBL_COMPAT
(
fsˇnf
Ë
	`__sˇnÊike
(2, 3);

259 
	`f£ek
(
FILE
 *, , );

260 
	`f£ços
(
FILE
 *, c⁄° 
Âos_t
 *);

261 
	`·ñl
(
FILE
 *);

262 
size_t
 
	$fwrôe
(c⁄° * 
__ª°ri˘
, 
size_t
, size_t, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
fwrôe
);

263 
	`gëc
(
FILE
 *);

264 
	`gëch¨
();

265 *
	`gës
(*);

266 
	`≥º‹
(const *);

267 
	$¥ötf
(c⁄° * 
__ª°ri˘
, ...Ë
	$__DARWIN_LDBL_COMPAT
(
¥ötf
Ë
	`__¥ötÊike
(1, 2);

268 
	`putc
(, 
FILE
 *);

269 
	`putch¨
();

270 
	`puts
(const *);

271 
	`ªmove
(const *);

272 
	`ª«me
 (const *, const *);

273 
	`ªwöd
(
FILE
 *);

274 
	$sˇnf
(c⁄° * 
__ª°ri˘
, ...Ë
	$__DARWIN_LDBL_COMPAT
(
sˇnf
Ë
	`__sˇnÊike
(1, 2);

275 
	`£tbuf
(
FILE
 * 
__ª°ri˘
, * __restrict);

276 
	`£tvbuf
(
FILE
 * 
__ª°ri˘
, * __ª°ri˘, , 
size_t
);

277 
	$•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	$__DARWIN_LDBL_COMPAT
(
•rötf
Ë
	`__¥ötÊike
(2, 3);

278 
	$ssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	$__DARWIN_LDBL_COMPAT
(
ssˇnf
Ë
	`__sˇnÊike
(2, 3);

279 
FILE
 *
	`tmpfûe
();

280 *
	`tm≤am
(*);

281 
	`ungëc
(, 
FILE
 *);

282 
	$vÂrötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
vÂrötf
Ë
	`__¥ötÊike
(2, 0);

283 
	$v¥ötf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
v¥ötf
Ë
	`__¥ötÊike
(1, 0);

284 
	$v•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
v•rötf
Ë
	`__¥ötÊike
(2, 0);

285 
__END_DECLS


293 #i‡
__DARWIN_C_LEVEL
 >= 198808L

294 
	#L_˘îmid
 1024

	)

296 
__BEGIN_DECLS


297 #i‚de‡
__CTERMID_DEFINED


299 
	#__CTERMID_DEFINED
 1

	)

300 *
	`˘îmid
(*);

303 #i‡
	`deföed
(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
)

304 
FILE
 *
	$fd›í
(, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
fd›í
));

306 
FILE
 *
	$fd›í
(, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
fd›í
));

308 
	`fûío
(
FILE
 *);

309 
__END_DECLS


317 #i‡
__DARWIN_C_LEVEL
 >= 199209L

318 
__BEGIN_DECLS


319 
	`p˛o£
(
FILE
 *);

320 #i‡
	`deföed
(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
)

321 
FILE
 *
	$p›í
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
p›í
));

323 
FILE
 *
	$p›í
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
p›í
));

325 
__END_DECLS


337 #i‡
__DARWIN_C_LEVEL
 >= 199506L

340 
__BEGIN_DECLS


341 
	`__§gë
(
FILE
 *);

342 
	$__svfsˇnf
(
FILE
 *, c⁄° *, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
__svfsˇnf
Ë
	`__sˇnÊike
(2, 0);

343 
	`__swbuf
(, 
FILE
 *);

344 
__END_DECLS


350 
	#__sgëc
(
p
Ë(--’)->
_r
 < 0 ? 
	`__§gë
’Ë: ()(*’)->
_p
++))

	)

351 #i‡
	`deföed
(
__GNUC__
Ë&& deföed(
__STDC__
)

352 
__ölöe
 
	$__•utc
(
_c
, 
FILE
 *
_p
) {

353 i‡(--
_p
->
_w
 >0 || (_p->_w >_p->
_lbfsize
 && ()
_c
 != '\n'))

354  (*
_p
->_p++ = 
_c
);

356  (
	`__swbuf
(
_c
, 
_p
));

357 
	}
}

362 
	#__•utc
(
c
, 
p
) \

363 (--(
p
)->
_w
 < 0 ? \

364 (
p
)->
_w
 >’)->
_lbfsize
 ? \

365 (*(
p
)->
_p
 = (
c
)), *(p)->_p != '\n' ? \

366 ()*(
p
)->
_p
++ : \

367 
	`__swbuf
('\n', 
p
) : \

368 
	`__swbuf
(()(
c
), 
p
) : \

369 (*(
p
)->
_p
 = (
c
), ()*’)->_p++))

	)

372 
	#__s„of
(
p
Ë((’)->
_Êags
 & 
__SEOF
Ë!0)

	)

373 
	#__s„º‹
(
p
Ë((’)->
_Êags
 & 
__SERR
Ë!0)

	)

374 
	#__s˛óªº
(
p
Ë(()(’)->
_Êags
 &~(
__SERR
|
__SEOF
)))

	)

375 
	#__sfûío
(
p
Ë(’)->
_fûe
)

	)

377 
__BEGIN_DECLS


378 
Êockfûe
(
FILE
 *);

379 
·rylockfûe
(
FILE
 *);

380 
fu∆ockfûe
(
FILE
 *);

381 
gëc_u∆ocked
(
FILE
 *);

382 
gëch¨_u∆ocked
();

383 
putc_u∆ocked
(, 
FILE
 *);

384 
putch¨_u∆ocked
();

387 #i‡!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

388 
gëw
(
FILE
 *);

389 
putw
(, 
FILE
 *);

392 *
	$ãm≤am
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS
(
ãm≤am
);

393 
__END_DECLS


395 #i‚de‡
löt


396 
	#gëc_u∆ocked
(
Â
Ë
	`__sgëc
(Â)

	)

397 
	#putc_u∆ocked
(
x
, 
Â
Ë
	`__•utc
(x, fp)

	)

400 
	#gëch¨_u∆ocked
(Ë
	`gëc_u∆ocked
(
°dö
)

	)

401 
	#putch¨_u∆ocked
(
x
Ë
	`putc_u∆ocked
(x, 
°dout
)

	)

411 #i‡
__DARWIN_C_LEVEL
 >= 200112L

412 #i‚def 
_OFF_T


413 
	#_OFF_T


	)

414 
__d¨wö_off_t
 
	toff_t
;

417 
__BEGIN_DECLS


418 
	`f£eko
(
FILE
 *, 
off_t
, );

419 
off_t
 
	`·ñlo
(
FILE
 *);

420 
__END_DECLS


423 #i‡
__DARWIN_C_LEVEL
 >200112L || 
	`deföed
(
_C99_SOURCE
Ë|| deföed(
__˝lu•lus
)

424 
__BEGIN_DECLS


425 
	$¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, ...Ë
	$__DARWIN_LDBL_COMPAT
(
¢¥ötf
Ë
	`__¥ötÊike
(3, 4);

426 
	$vfsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
vfsˇnf
Ë
	`__sˇnÊike
(2, 0);

427 
	$vsˇnf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
vsˇnf
Ë
	`__sˇnÊike
(1, 0);

428 
	$v¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
v¢¥ötf
Ë
	`__¥ötÊike
(3, 0);

429 
	$vssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
vssˇnf
Ë
	`__sˇnÊike
(2, 0);

430 
__END_DECLS


439 #i‡
__DARWIN_C_LEVEL
 >= 200809L

440 #i‚de‡
_SSIZE_T


441 
	#_SSIZE_T


	)

442 
__d¨wö_ssize_t
 
	tssize_t
;

445 
__BEGIN_DECLS


446 
	$d¥ötf
(, c⁄° * 
__ª°ri˘
, ...Ë
	$__DARWIN_LDBL_COMPAT
(
d¥ötf
Ë
	$__¥ötÊike
(2, 3Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

447 
	$vd¥ötf
(, c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
vd¥ötf
Ë
	$__¥ötÊike
(2, 0Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

448 
ssize_t
 
	$gëdñim
(** 
__ª°ri˘
, 
size_t
 * __ª°ri˘, , 
FILE
 * __ª°ri˘Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

449 
ssize_t
 
	$gëlöe
(** 
__ª°ri˘
, 
size_t
 * __ª°ri˘, 
FILE
 * __ª°ri˘Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

450 
__END_DECLS


457 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


458 
__BEGIN_DECLS


459 
__c⁄°
 
sys_√º
;

460 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

462 
	$a•rötf
(**, c⁄° *, ...Ë
	$__DARWIN_LDBL_COMPAT
(
a•rötf
Ë
	`__¥ötÊike
(2, 3);

463 *
	`˘îmid_r
(*);

464 *
	`fgë 
(
FILE
 *, 
size_t
 *);

465 
__c⁄°
 *
	`fmtcheck
(const *, const *);

466 
	`Âurge
(
FILE
 *);

467 
	`£tbuf„r
(
FILE
 *, *, );

468 
	`£éöebuf
(
FILE
 *);

469 
	$va•rötf
(**, c⁄° *, 
va_li°
Ë
	$__DARWIN_LDBL_COMPAT
(
va•rötf
Ë
	`__¥ötÊike
(2, 0);

470 
FILE
 *
	`z›í
(const *, const *, );

476 
FILE
 *
	`fun›í
(const *,

479 
	$Âos_t
 (*)(*, 
Âos_t
, ),

481 
__END_DECLS


482 
	#‰›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, fn, 0, 0, 0)

	)

483 
	#fw›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, 0, fn, 0, 0)

	)

485 
	#„of_u∆ocked
(
p
Ë
	`__s„of
’)

	)

486 
	#„º‹_u∆ocked
(
p
Ë
	`__s„º‹
’)

	)

487 
	#˛óªº_u∆ocked
(
p
Ë
	`__s˛óªº
’)

	)

488 
	#fûío_u∆ocked
(
p
Ë
	`__sfûío
’)

	)

493 #ifde‡
_USE_EXTENDED_LOCALES_


494 
	~<xloˇÀ/_°dio.h
>

497 #i‡
	`deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

499 
	~<£cuª/_°dio.h
>

	@/usr/include/stdlib.h

58 #i‚de‡
_STDLIB_H_


59 
	#_STDLIB_H_


	)

61 
	~<Avaûabûôy.h
>

63 
	~<_ty≥s.h
>

64 #i‡!
deföed
(
_ANSI_SOURCE
)

65 
	~<sys/waô.h
>

66 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

67 
	~<Æloˇ.h
>

71 #i‚def 
_SIZE_T


72 
	#_SIZE_T


	)

75 
__d¨wö_size_t
 
	tsize_t
;

78 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

79 #i‚de‡
_CT_RUNE_T


80 
	#_CT_RUNE_T


	)

81 
__d¨wö_˘_ru√_t
 
	t˘_ru√_t
;

84 #i‚de‡
_RUNE_T


85 
	#_RUNE_T


	)

86 
__d¨wö_ru√_t
 
	tru√_t
;

90 #i‚def 
__˝lu•lus


91 #i‚def 
_WCHAR_T


92 
	#_WCHAR_T


	)

93 
__d¨wö_wch¨_t
 
	twch¨_t
;

98 
	mquŸ
;

99 
	mªm
;

100 } 
	tdiv_t
;

103 
	mquŸ
;

104 
	mªm
;

105 } 
	tldiv_t
;

107 #i‡!
__DARWIN_NO_LONG_LONG


109 
	mquŸ
;

110 
	mªm
;

111 } 
	tŒdiv_t
;

114 #i‚de‡
NULL


115 
	#NULL
 
__DARWIN_NULL


	)

118 
	#EXIT_FAILURE
 1

	)

119 
	#EXIT_SUCCESS
 0

	)

121 
	#RAND_MAX
 0x7fffffff

	)

123 #ifde‡
_USE_EXTENDED_LOCALES_


124 
	~<_xloˇÀ.h
>

127 #i‚de‡
MB_CUR_MAX


128 #ifde‡
_USE_EXTENDED_LOCALES_


129 
	#MB_CUR_MAX
 (
	`___mb_cur_max
())

	)

130 #i‚de‡
MB_CUR_MAX_L


131 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

134 
__mb_cur_max
;

135 
	#MB_CUR_MAX
 
__mb_cur_max


	)

139 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)) \

140 && 
deföed
(
_USE_EXTENDED_LOCALES_
Ë&& !
	$deföed
(
MB_CUR_MAX_L
)

141 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

144 
__BEGIN_DECLS


145 
	$ab‹t
(Ë
__dód2
;

146 
	$abs
(Ë
__puª2
;

147 
	`©exô
((*)());

148 
	`©of
(const *);

149 
	`©oi
(const *);

150 
	`©ﬁ
(const *);

151 #i‡!
__DARWIN_NO_LONG_LONG


153 
	`©ﬁl
(const *);

155 *
	`b£¨ch
(c⁄° *, c⁄° *, 
size_t
,

156 
size_t
, (*)(const *, const *));

157 *
	`ˇŒoc
(
size_t
, size_t);

158 
div_t
 
	$div
(, Ë
__puª2
;

159 
	$exô
(Ë
__dód2
;

160 
	`‰ì
(*);

161 *
	`gëív
(const *);

162 
	$œbs
(Ë
__puª2
;

163 
ldiv_t
 
	$ldiv
(, Ë
__puª2
;

164 #i‡!
__DARWIN_NO_LONG_LONG


166 
	`Œabs
();

167 
Œdiv_t
 
	`Œdiv
(, );

169 *
	`mÆloc
(
size_t
);

170 
	`mbÀn
(c⁄° *, 
size_t
);

171 
size_t
 
	`mb°owcs
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t);

172 
	`mbtowc
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
);

173 
	$posix_memÆign
(**, 
size_t
, size_tË
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

174 
	`qs‹t
(*, 
size_t
, size_t,

176 
	`ønd
();

177 *
	`ªÆloc
(*, 
size_t
);

178 
	`§™d
();

179 
	$°πod
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πod
);

180 
	$°πof
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πof
);

181 
	`°πﬁ
(const *, **, );

183 
	$°πﬁd
(c⁄° *, **Ë
	`__DARWIN_LDBL_COMPAT
(
°πﬁd
);

184 #i‡!
__DARWIN_NO_LONG_LONG


186 
	`°πﬁl
(const *, **, );

189 
	`°πoul
(const *, **, );

190 #i‡!
__DARWIN_NO_LONG_LONG


192 
	`°πouŒ
(const *, **, );

194 
	$sy°em
(c⁄° *Ë
	`__DARWIN_ALIAS_C
(
sy°em
);

195 
size_t
 
	`wc°ombs
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t);

196 
	`w˘omb
(*, 
wch¨_t
);

198 #i‚de‡
_ANSI_SOURCE


199 
	$_Exô
(Ë
__dód2
;

200 
	`a64l
(const *);

201 
	`dønd48
();

202 *
	`ecvt
(, , *
__ª°ri˘
, *__restrict);

203 
	`î™d48
([3]);

204 *
	`fcvt
(, , *
__ª°ri˘
, *__restrict);

205 *
	`gcvt
(, , *);

206 
	`gësub›t
(**, * const *, **);

207 
	`gø¡±
();

208 #i‡
__DARWIN_UNIX03


209 *
	`öô°©e
(, *, 
size_t
);

211 *
	`öô°©e
(, *, );

213 
	`jønd48
([3]);

214 *
	`l64a
();

215 
	`lc⁄g48
([7]);

216 
	`Ã™d48
();

217 *
	`mkãmp
(*);

218 
	`mk°emp
(*);

219 
	`mønd48
();

220 
	`ƒ™d48
([3]);

221 
	`posix_›í±
();

222 *
	`±¢ame
();

223 
	$puãnv
(*Ë
	`__DARWIN_ALIAS
(
puãnv
);

224 
	`øndom
();

225 
	`ønd_r
(*);

226 #i‡(
__DARWIN_UNIX03
 && !
	`deföed
(
_POSIX_C_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_BETTER_REALPATH
)

227 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_EXTSN
(
ªÆ∑th
);

229 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
ªÆ∑th
);

232 *
	`£ed48
([3]);

233 
	$£ãnv
(c⁄° *, c⁄° *, Ë
	`__DARWIN_ALIAS
(
£ãnv
);

234 #i‡
__DARWIN_UNIX03


235 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

237 
	`£tkey
(const *);

239 *
	`£t°©e
(const *);

240 
	`§™d48
();

241 #i‡
__DARWIN_UNIX03


242 
	`§™dom
();

244 
	`§™dom
();

246 
	`u∆ock±
();

247 #i‡
__DARWIN_UNIX03


248 
	$un£ãnv
(c⁄° *Ë
	`__DARWIN_ALIAS
(
un£ãnv
);

250 
	`un£ãnv
(const *);

254 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

255 
	~<machöe/ty≥s.h
>

257 #i‚de‡
_DEV_T


258 
__d¨wö_dev_t
 
	tdev_t
;

259 
	#_DEV_T


	)

262 #i‚def 
_MODE_T


263 
__d¨wö_mode_t
 
	tmode_t
;

264 
	#_MODE_T


	)

267 
u_öt32_t


268 
	`¨c4øndom
();

269 
	`¨c4øndom_addøndom
(* , );

270 
	$¨c4øndom_buf
(* , 
size_t
 ) 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

271 
	`¨c4øndom_°ú
();

272 
u_öt32_t


273 
	$¨c4øndom_unif‹m
(
u_öt32_t
 ) 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

274 #ifde‡
__BLOCKS__


275 
	`©exô_b
((^)()Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

276 *
	`b£¨ch_b
(c⁄° *, c⁄° *, 
size_t
,

277 
size_t
, (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

281 *
	`cgëˇp
(*, const *, );

282 
	`cgë˛o£
();

283 
	`cgëít
(**, **, const *);

284 
	`cgëfú°
(**, **);

285 
	`cgëm©ch
(const *, const *);

286 
	`cgë√xt
(**, **);

287 
	`cgënum
(*, const *, *);

288 
	`cgë£t
(const *);

289 
	`cgë°r
(*, const *, **);

290 
	`cgëu°r
(*, const *, **);

292 
	$d´m⁄
(, Ë
	$__DARWIN_1050
(
d´m⁄
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_5
, 
__IPHONE_2_0
, __IPHONE_2_0);

293 *
	`dev«me
(
dev_t
, 
mode_t
);

294 *
	`dev«me_r
(
dev_t
, 
mode_t
, *
buf
, 
Àn
);

295 *
	`gëbsize
(*, *);

296 
	`gëlﬂdavg
([], );

298 *
	`gë¥og«me
();

300 
	`hóps‹t
(*, 
size_t
, size_t,

302 #ifde‡
__BLOCKS__


303 
	`hóps‹t_b
(*, 
size_t
, size_t,

304 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

306 
	`mîges‹t
(*, 
size_t
, size_t,

308 #ifde‡
__BLOCKS__


309 
	`mîges‹t_b
(*, 
size_t
, size_t,

310 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

312 
	`ps‹t
(*, 
size_t
, size_t,

313 (*)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

314 #ifde‡
__BLOCKS__


315 
	`ps‹t_b
(*, 
size_t
, size_t,

316 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

318 
	`ps‹t_r
(*, 
size_t
, size_t, *,

319 (*)(*, c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

320 #ifde‡
__BLOCKS__


321 
	`qs‹t_b
(*, 
size_t
, size_t,

322 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

324 
	`qs‹t_r
(*, 
size_t
, size_t, *,

326 
	`ødixs‹t
(const **, , const *,

328 
	`£çrog«me
(const *);

329 
	`§adixs‹t
(const **, , const *,

331 
	`§™ddev
();

332 
	`§™domdev
();

333 *
	`ªÆlocf
(*, 
size_t
);

334 #i‡!
__DARWIN_NO_LONG_LONG


336 
	`°πoq
(const *, **, );

338 
	`°πouq
(const *, **, );

340 *
sub›èrg
;

341 *
	`vÆloc
(
size_t
);

345 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

346 #¥agm®
GCC
 
pois⁄
 
mb°owcs
 
mbtowc
 
wc°ombs
 
w˘omb


348 
__END_DECLS


350 #ifde‡
_USE_EXTENDED_LOCALES_


351 
	~<xloˇÀ/_°dlib.h
>

	@/usr/include/string.h

58 #i‚de‡
_STRING_H_


59 
	#_STRING_H_


	)

61 
	~<_ty≥s.h
>

63 
	~<sys/cdefs.h
>

64 
	~<Avaûabûôy.h
>

66 #i‚def 
_SIZE_T


67 
	#_SIZE_T


	)

68 
__d¨wö_size_t
 
	tsize_t
;

71 #i‚de‡
NULL


72 
	#NULL
 
__DARWIN_NULL


	)

79 
__BEGIN_DECLS


80 *
memchr
(c⁄° *, , 
size_t
);

81 
memcmp
(c⁄° *, c⁄° *, 
size_t
);

82 *
mem˝y
(*, c⁄° *, 
size_t
);

83 *
memmove
(*, c⁄° *, 
size_t
);

84 *
mem£t
(*, , 
size_t
);

85 *
°rˇt
(*, const *);

86 *
°rchr
(const *, );

87 
°rcmp
(const *, const *);

88 
°rcﬁl
(const *, const *);

89 *
°r˝y
(*, const *);

90 
size_t
 
°rc•n
(const *, const *);

91 *
	$°ªº‹
(Ë
	`__DARWIN_ALIAS
(
°ªº‹
);

92 
size_t
 
	`°æí
(const *);

93 *
	`°∫ˇt
(*, c⁄° *, 
size_t
);

94 
	`°∫cmp
(c⁄° *, c⁄° *, 
size_t
);

95 *
	`°∫˝y
(*, c⁄° *, 
size_t
);

96 *
	`°Ωbrk
(const *, const *);

97 *
	`°ºchr
(const *, );

98 
size_t
 
	`°r•n
(const *, const *);

99 *
	`°r°r
(const *, const *);

100 *
	`°πok
(*, const *);

101 
size_t
 
	`°rx‰m
(*, const *, size_t);

102 
__END_DECLS


112 #i‡
__DARWIN_C_LEVEL
 >= 199506L

113 
__BEGIN_DECLS


114 *
	`°πok_r
(*, const *, **);

115 
__END_DECLS


124 #i‡
__DARWIN_C_LEVEL
 >= 200112L

125 
__BEGIN_DECLS


126 
	`°ªº‹_r
(, *, 
size_t
);

127 *
	`°rdup
(const *);

128 *
	`memc˝y
(*, c⁄° *, , 
size_t
);

129 
__END_DECLS


138 #i‡
__DARWIN_C_LEVEL
 >= 200809L

139 
__BEGIN_DECLS


140 *
	`°p˝y
(*, const *);

141 *
	$°≤˝y
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

142 *
	$°∫dup
(c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

143 
size_t
 
	$°∫Àn
(c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

144 *
	`°rsig«l
(
sig
);

145 
__END_DECLS


152 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


153 #i‚de‡
_SSIZE_T


154 
	#_SSIZE_T


	)

155 
__d¨wö_ssize_t
 
	tssize_t
;

158 
__BEGIN_DECLS


159 *
	$memmem
(c⁄° *, 
size_t
, c⁄° *, size_tË
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

160 
	$mem£t_∑âîn4
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_3_0
);

161 
	$mem£t_∑âîn8
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_3_0
);

162 
	$mem£t_∑âîn16
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_3_0
);

164 *
	`°rˇ£°r
(const *, const *);

165 *
	`°∫°r
(c⁄° *, c⁄° *, 
size_t
);

166 
size_t
 
	`°æˇt
(*, const *, size_t);

167 
size_t
 
	`°æ˝y
(*, const *, size_t);

168 
	`°rmode
(, *);

169 *
	`°r£p
(**, const *);

172 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

173 
__END_DECLS


180 
	~"°rögs.h
"

184 #ifde‡
_USE_EXTENDED_LOCALES_


185 
	~<xloˇÀ/_°rög.h
>

188 #i‡
	`deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

190 
	~<£cuª/_°rög.h
>

	@/usr/include/sys/socket.h

72 #i‚de‡
_SYS_SOCKET_H_


73 
	#_SYS_SOCKET_H_


	)

75 
	~<sys/ty≥s.h
>

76 
	~<sys/cdefs.h
>

77 
	~<machöe/_∑øm.h
>

80 
	~<Avaûabûôy.h
>

89 #i‚de‡
_GID_T


90 
__d¨wö_gid_t
 
	tgid_t
;

91 
	#_GID_T


	)

94 #i‚de‡
_OFF_T


95 
__d¨wö_off_t
 
	toff_t
;

96 
	#_OFF_T


	)

99 #i‚de‡
_PID_T


100 
__d¨wö_pid_t
 
	tpid_t
;

101 
	#_PID_T


	)

104 #i‚de‡
_SA_FAMILY_T


105 
	#_SA_FAMILY_T


	)

106 
__uöt8_t
 
	tß_Ámûy_t
;

109 #i‚de‡
_SOCKLEN_T


110 
	#_SOCKLEN_T


	)

111 
__d¨wö_sockÀn_t
 
	tsockÀn_t
;

115 #i‚de‡
_SIZE_T


116 
	#_SIZE_T


	)

117 
__d¨wö_size_t
 
	tsize_t
;

121 #i‚def 
_SSIZE_T


122 
	#_SSIZE_T


	)

123 
__d¨wö_ssize_t
 
	tssize_t
;

129 #i‚de‡
_STRUCT_IOVEC


130 
	#_STRUCT_IOVEC


	)

131 
	siovec
 {

132 * 
	miov_ba£
;

133 
size_t
 
	miov_Àn
;

141 
	#SOCK_STREAM
 1

	)

142 
	#SOCK_DGRAM
 2

	)

143 
	#SOCK_RAW
 3

	)

144 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

145 
	#SOCK_RDM
 4

	)

147 
	#SOCK_SEQPACKET
 5

	)

152 
	#SO_DEBUG
 0x0001

	)

153 
	#SO_ACCEPTCONN
 0x0002

	)

154 
	#SO_REUSEADDR
 0x0004

	)

155 
	#SO_KEEPALIVE
 0x0008

	)

156 
	#SO_DONTROUTE
 0x0010

	)

157 
	#SO_BROADCAST
 0x0020

	)

158 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

159 
	#SO_USELOOPBACK
 0x0040

	)

160 
	#SO_LINGER
 0x0080

	)

162 
	#SO_LINGER
 0x1080

	)

164 
	#SO_OOBINLINE
 0x0100

	)

165 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

166 
	#SO_REUSEPORT
 0x0200

	)

167 
	#SO_TIMESTAMP
 0x0400

	)

168 
	#SO_TIMESTAMP_MONOTONIC
 0x0800

	)

169 #i‚de‡
__APPLE__


170 
	#SO_ACCEPTFILTER
 0x1000

	)

172 
	#SO_DONTTRUNC
 0x2000

	)

174 
	#SO_WANTMORE
 0x4000

	)

175 
	#SO_WANTOOBFLAG
 0x8000

	)

182 
	#SO_SNDBUF
 0x1001

	)

183 
	#SO_RCVBUF
 0x1002

	)

184 
	#SO_SNDLOWAT
 0x1003

	)

185 
	#SO_RCVLOWAT
 0x1004

	)

186 
	#SO_SNDTIMEO
 0x1005

	)

187 
	#SO_RCVTIMEO
 0x1006

	)

188 
	#SO_ERROR
 0x1007

	)

189 
	#SO_TYPE
 0x1008

	)

190 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

192 
	#SO_LABEL
 0x1010

	)

193 
	#SO_PEERLABEL
 0x1011

	)

194 #ifde‡
__APPLE__


195 
	#SO_NREAD
 0x1020

	)

196 
	#SO_NKE
 0x1021

	)

197 
	#SO_NOSIGPIPE
 0x1022

	)

198 
	#SO_NOADDRERR
 0x1023

	)

199 
	#SO_NWRITE
 0x1024

	)

200 
	#SO_REUSESHAREUID
 0x1025

	)

201 #ifde‡
__APPLE_API_PRIVATE


202 
	#SO_NOTIFYCONFLICT
 0x1026

	)

203 
	#SO_UPCALLCLOSEWAIT
 0x1027

	)

205 
	#SO_LINGER_SEC
 0x1080

	)

206 
	#SO_RESTRICTIONS
 0x1081

	)

207 
	#SO_RESTRICT_DENYIN
 0x00000001

	)

208 
	#SO_RESTRICT_DENYOUT
 0x00000002

	)

209 
	#SO_RESTRICT_DENYSET
 0x80000000

	)

210 
	#SO_RANDOMPORT
 0x1082

	)

211 
	#SO_NP_EXTENSIONS
 0x1083

	)

219 
	slögî
 {

220 
	ml_⁄off
;

221 
	ml_lögî
;

224 #i‚de‡
__APPLE__


225 
	sac˚±_fûãr_¨g
 {

226 
	maf_«me
[16];

227 
	maf_¨g
[256-16];

231 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

232 #ifde‡
__APPLE__


237 
	sso_≈_exãnsi⁄s
 {

238 
u_öt32_t
 
	m≈x_Êags
;

239 
u_öt32_t
 
	m≈x_mask
;

242 
	#SONPX_SETOPTSHUT
 0x000000001

	)

252 
	#SOL_SOCKET
 0xfff‡

	)

258 
	#AF_UNSPEC
 0

	)

259 
	#AF_UNIX
 1

	)

260 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

261 
	#AF_LOCAL
 
AF_UNIX


	)

263 
	#AF_INET
 2

	)

264 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

265 
	#AF_IMPLINK
 3

	)

266 
	#AF_PUP
 4

	)

267 
	#AF_CHAOS
 5

	)

268 
	#AF_NS
 6

	)

269 
	#AF_ISO
 7

	)

270 
	#AF_OSI
 
AF_ISO


	)

271 
	#AF_ECMA
 8

	)

272 
	#AF_DATAKIT
 9

	)

273 
	#AF_CCITT
 10

	)

274 
	#AF_SNA
 11

	)

275 
	#AF_DEC√t
 12

	)

276 
	#AF_DLI
 13

	)

277 
	#AF_LAT
 14

	)

278 
	#AF_HYLINK
 15

	)

279 
	#AF_APPLETALK
 16

	)

280 
	#AF_ROUTE
 17

	)

281 
	#AF_LINK
 18

	)

282 
	#p£udo_AF_XTP
 19

	)

283 
	#AF_COIP
 20

	)

284 
	#AF_CNT
 21

	)

285 
	#p£udo_AF_RTIP
 22

	)

286 
	#AF_IPX
 23

	)

287 
	#AF_SIP
 24

	)

288 
	#p£udo_AF_PIP
 25

	)

289 #ifde‡
__APPLE__


291 
	#AF_NDRV
 27

	)

293 
	#AF_ISDN
 28

	)

294 
	#AF_E164
 
AF_ISDN


	)

295 
	#p£udo_AF_KEY
 29

	)

297 
	#AF_INET6
 30

	)

298 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

299 
	#AF_NATM
 31

	)

300 #ifde‡
__APPLE__


301 
	#AF_SYSTEM
 32

	)

302 
	#AF_NETBIOS
 33

	)

303 
	#AF_PPP
 34

	)

305 
	#AF_ATM
 30

	)

307 
	#p£udo_AF_HDRCMPLT
 35

	)

310 
	#AF_RESERVED_36
 36

	)

312 #i‚de‡
__APPLE__


313 
	#AF_NETGRAPH
 32

	)

315 
	#AF_IEEE80211
 37

	)

316 
	#AF_MAX
 38

	)

322 
	ssockaddr
 {

323 
__uöt8_t
 
	mß_Àn
;

324 
ß_Ámûy_t
 
	mß_Ámûy
;

325 
	mß_d©a
[14];

328 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

329 
	#SOCK_MAXADDRLEN
 255

	)

335 
	ssock¥Ÿo
 {

336 
__uöt16_t
 
	m•_Ámûy
;

337 
__uöt16_t
 
	m•_¥Ÿocﬁ
;

344 
	#_SS_MAXSIZE
 128

	)

345 
	#_SS_ALIGNSIZE
 ((
__öt64_t
))

	)

346 
	#_SS_PAD1SIZE
 \

347 (
_SS_ALIGNSIZE
 - (
__uöt8_t
Ë- (
ß_Ámûy_t
))

	)

348 
	#_SS_PAD2SIZE
 \

349 (
_SS_MAXSIZE
 - (
__uöt8_t
Ë- (
ß_Ámûy_t
) - \

350 
_SS_PAD1SIZE
 - 
_SS_ALIGNSIZE
)

	)

355 
	ssockaddr_°‹age
 {

356 
__uöt8_t
 
	mss_Àn
;

357 
ß_Ámûy_t
 
	mss_Ámûy
;

358 
	m__ss_∑d1
[
_SS_PAD1SIZE
];

359 
__öt64_t
 
	m__ss_Æign
;

360 
	m__ss_∑d2
[
_SS_PAD2SIZE
];

366 
	#PF_UNSPEC
 
AF_UNSPEC


	)

367 
	#PF_LOCAL
 
AF_LOCAL


	)

368 
	#PF_UNIX
 
PF_LOCAL


	)

369 
	#PF_INET
 
AF_INET


	)

370 
	#PF_IMPLINK
 
AF_IMPLINK


	)

371 
	#PF_PUP
 
AF_PUP


	)

372 
	#PF_CHAOS
 
AF_CHAOS


	)

373 
	#PF_NS
 
AF_NS


	)

374 
	#PF_ISO
 
AF_ISO


	)

375 
	#PF_OSI
 
AF_ISO


	)

376 
	#PF_ECMA
 
AF_ECMA


	)

377 
	#PF_DATAKIT
 
AF_DATAKIT


	)

378 
	#PF_CCITT
 
AF_CCITT


	)

379 
	#PF_SNA
 
AF_SNA


	)

380 
	#PF_DEC√t
 
AF_DEC√t


	)

381 
	#PF_DLI
 
AF_DLI


	)

382 
	#PF_LAT
 
AF_LAT


	)

383 
	#PF_HYLINK
 
AF_HYLINK


	)

384 
	#PF_APPLETALK
 
AF_APPLETALK


	)

385 
	#PF_ROUTE
 
AF_ROUTE


	)

386 
	#PF_LINK
 
AF_LINK


	)

387 
	#PF_XTP
 
p£udo_AF_XTP


	)

388 
	#PF_COIP
 
AF_COIP


	)

389 
	#PF_CNT
 
AF_CNT


	)

390 
	#PF_SIP
 
AF_SIP


	)

391 
	#PF_IPX
 
AF_IPX


	)

392 
	#PF_RTIP
 
p£udo_AF_RTIP


	)

393 
	#PF_PIP
 
p£udo_AF_PIP


	)

394 #ifde‡
__APPLE__


395 
	#PF_NDRV
 
AF_NDRV


	)

397 
	#PF_ISDN
 
AF_ISDN


	)

398 
	#PF_KEY
 
p£udo_AF_KEY


	)

399 
	#PF_INET6
 
AF_INET6


	)

400 
	#PF_NATM
 
AF_NATM


	)

401 #ifde‡
__APPLE__


402 
	#PF_SYSTEM
 
AF_SYSTEM


	)

403 
	#PF_NETBIOS
 
AF_NETBIOS


	)

404 
	#PF_PPP
 
AF_PPP


	)

405 
	#PF_RESERVED_36
 
AF_RESERVED_36


	)

408 
	#PF_ATM
 
AF_ATM


	)

409 
	#PF_NETGRAPH
 
AF_NETGRAPH


	)

412 
	#PF_MAX
 
AF_MAX


	)

417 
	#PF_VLAN
 ((
uöt32_t
)0x766c616eË

	)

418 
	#PF_BOND
 ((
uöt32_t
)0x626f6e64Ë

	)

428 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

429 
	#NET_MAXID
 
AF_MAX


	)

433 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

442 
	#NET_RT_DUMP
 1

	)

443 
	#NET_RT_FLAGS
 2

	)

444 
	#NET_RT_IFLIST
 3

	)

445 
	#NET_RT_STAT
 4

	)

446 
	#NET_RT_TRASH
 5

	)

447 
	#NET_RT_IFLIST2
 6

	)

448 
	#NET_RT_DUMP2
 7

	)

449 
	#NET_RT_MAXID
 10

	)

456 
	#SOMAXCONN
 128

	)

462 
	smsghdr
 {

463 *
	mmsg_«me
;

464 
sockÀn_t
 
	mmsg_«mñí
;

465 
iovec
 *
	mmsg_iov
;

466 
	mmsg_iovÀn
;

467 *
	mmsg_c⁄åﬁ
;

468 
sockÀn_t
 
	mmsg_c⁄åﬁÀn
;

469 
	mmsg_Êags
;

473 
	#MSG_OOB
 0x1

	)

474 
	#MSG_PEEK
 0x2

	)

475 
	#MSG_DONTROUTE
 0x4

	)

476 
	#MSG_EOR
 0x8

	)

477 
	#MSG_TRUNC
 0x10

	)

478 
	#MSG_CTRUNC
 0x20

	)

479 
	#MSG_WAITALL
 0x40

	)

480 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

481 
	#MSG_DONTWAIT
 0x80

	)

482 
	#MSG_EOF
 0x100

	)

483 #ifde‡
__APPLE__


484 #ifde‡
__APPLE_API_OBSOLETE


485 
	#MSG_WAITSTREAM
 0x200

	)

487 
	#MSG_FLUSH
 0x400

	)

488 
	#MSG_HOLD
 0x800

	)

489 
	#MSG_SEND
 0x1000

	)

490 
	#MSG_HAVEMORE
 0x2000

	)

491 
	#MSG_RCVMORE
 0x4000

	)

493 
	#MSG_NEEDSA
 0x10000

	)

502 
	scmsghdr
 {

503 
sockÀn_t
 
	mcmsg_Àn
;

504 
	mcmsg_Àvñ
;

505 
	mcmsg_ty≥
;

509 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

510 #i‚de‡
__APPLE__


516 
	#CMGROUP_MAX
 16

	)

525 
	scmsg¸ed
 {

526 
pid_t
 
	mcm¸ed_pid
;

527 
uid_t
 
	mcm¸ed_uid
;

528 
uid_t
 
	mcm¸ed_euid
;

529 
gid_t
 
	mcm¸ed_gid
;

530 
	mcm¸ed_ngroups
;

531 
gid_t
 
	mcm¸ed_groups
[
CMGROUP_MAX
];

537 
	#CMSG_DATA
(
cmsg
) ((*)(cmsg) + \

538 
	`__DARWIN_ALIGN32
((
cmsghdr
)))

	)

544 
	#CMSG_FIRSTHDR
(
mhdr
) \

545 ((
mhdr
)->
msg_c⁄åﬁÀn
 >(
cmsghdr
) ? \

546 (
cmsghdr
 *)(
mhdr
)->
msg_c⁄åﬁ
 : \

547 (
cmsghdr
 *)0L)

	)

554 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
) \

555 ((*)(
cmsg
Ë=(*)0L ? 
	`CMSG_FIRSTHDR
(
mhdr
) : \

556 ((((*)(
cmsg
) + \

557 
	`__DARWIN_ALIGN32
((
__uöt32_t
)(
cmsg
)->
cmsg_Àn
) + \

558 
	`__DARWIN_ALIGN32
((
cmsghdr
))) > \

559 ((*)(
mhdr
)->
msg_c⁄åﬁ
 + \

560 (
mhdr
)->
msg_c⁄åﬁÀn
)) ? \

561 (
cmsghdr
 *)0L : \

562 (
cmsghdr
 *)(*)((*)(
cmsg
) + \

563 
	`__DARWIN_ALIGN32
((
__uöt32_t
)(
cmsg
)->
cmsg_Àn
))))

	)

565 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

567 
	#CMSG_SPACE
(
l
Ë(
	`__DARWIN_ALIGN32
((
cmsghdr
)Ë+ __DARWIN_ALIGN32÷))

	)

568 
	#CMSG_LEN
(
l
Ë(
	`__DARWIN_ALIGN32
((
cmsghdr
)Ë+ (l))

	)

573 
	#SCM_RIGHTS
 0x01

	)

574 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

575 
	#SCM_TIMESTAMP
 0x02

	)

576 
	#SCM_CREDS
 0x03

	)

577 
	#SCM_TIMESTAMP_MONOTONIC
 0x04

	)

584 
	#SHUT_RD
 0

	)

585 
	#SHUT_WR
 1

	)

586 
	#SHUT_RDWR
 2

	)

588 #i‡!
deföed
(
_POSIX_C_SOURCE
)

592 
	ssf_hdå
 {

593 
iovec
 *
	mhódîs
;

594 
	mhdr_˙t
;

595 
iovec
 *
	måaûîs
;

596 
	mål_˙t
;

602 
__BEGIN_DECLS


603 
	$ac˚±
(, 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
 * __restrict)

604 
	`__DARWIN_ALIAS_C
(
ac˚±
);

605 
	$böd
(, c⁄° 
sockaddr
 *, 
sockÀn_t
Ë
	`__DARWIN_ALIAS
(
böd
);

606 
	$c⁄√˘
(, c⁄° 
sockaddr
 *, 
sockÀn_t
Ë
	`__DARWIN_ALIAS_C
–
c⁄√˘
);

607 
	$gë≥î«me
(, 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
 * __restrict)

608 
	`__DARWIN_ALIAS
(
gë≥î«me
);

609 
	$gësock«me
(, 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
 * __restrict)

610 
	`__DARWIN_ALIAS
(
gësock«me
);

611 
	`gësock›t
(, , , * 
__ª°ri˘
, 
sockÀn_t
 * __restrict);

612 
	$li°í
(, Ë
	`__DARWIN_ALIAS
(
li°í
);

613 
ssize_t
 
	$ªcv
(, *, 
size_t
, Ë
	`__DARWIN_ALIAS_C
(
ªcv
);

614 
ssize_t
 
	$ªcv‰om
(, *, 
size_t
, , 
sockaddr
 * 
__ª°ri˘
,

615 
sockÀn_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS_C
(
ªcv‰om
);

616 
ssize_t
 
	$ªcvmsg
(, 
msghdr
 *, Ë
	`__DARWIN_ALIAS_C
(
ªcvmsg
);

617 
ssize_t
 
	$£nd
(, c⁄° *, 
size_t
, Ë
	`__DARWIN_ALIAS_C
(
£nd
);

618 
ssize_t
 
	$£ndmsg
(, c⁄° 
msghdr
 *, Ë
	`__DARWIN_ALIAS_C
(
£ndmsg
);

619 
ssize_t
 
	$£ndto
(, c⁄° *, 
size_t
,

620 , c⁄° 
sockaddr
 *, 
sockÀn_t
Ë
	`__DARWIN_ALIAS_C
(
£ndto
);

621 
	`£tsock›t
(, , , c⁄° *, 
sockÀn_t
);

622 
	`shutdown
(, );

623 
	$sock©m¨k
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

624 
	`sockë
(, , );

625 
	$sockë∑ú
(, , , *Ë
	`__DARWIN_ALIAS
(
sockë∑ú
);

627 #i‡!
	`deföed
(
_POSIX_C_SOURCE
)

628 
	`£ndfûe
(, , 
off_t
, off_à*, 
sf_hdå
 *, );

631 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

632 
	`pf˘löput
(, 
sockaddr
 *);

634 
__END_DECLS


	@/usr/include/sys/time.h

64 #i‚de‡
_SYS_TIME_H_


65 
	#_SYS_TIME_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

69 
	~<Avaûabûôy.h
>

75 
	#__√ed_fd_£t


	)

76 
	#__√ed_°ru˘_time•ec


	)

77 
	#__√ed_°ru˘_timevÆ


	)

78 
	~<sys/_°ru˘s.h
>

80 #i‚def 
_TIME_T


81 
	#_TIME_T


	)

82 
__d¨wö_time_t
 
	ttime_t
;

85 #i‚de‡
_SUSECONDS_T


86 
	#_SUSECONDS_T


	)

87 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

94 
	sôimîvÆ
 {

95 
timevÆ
 
	mô_öãrvÆ
;

96 
timevÆ
 
	mô_vÆue
;

103 
	#ITIMER_REAL
 0

	)

104 
	#ITIMER_VIRTUAL
 1

	)

105 
	#ITIMER_PROF
 2

	)

113 #i‚def 
FD_SETSIZE


114 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

116 #i‚de‡
FD_SET


117 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

119 #i‚def 
FD_CLR


120 
	#FD_CLR
(
n
,
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

122 #i‚de‡
FD_ISSET


123 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

125 #i‚de‡
FD_ZERO


126 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

129 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

131 #i‚de‡
FD_COPY


132 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

135 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

136 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

137 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

138 }

	)

139 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

140 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

141 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

142 }

	)

144 
	stimez⁄e
 {

145 
	mtz_möuãswe°
;

146 
	mtz_d°time
;

148 
	#DST_NONE
 0

	)

149 
	#DST_USA
 1

	)

150 
	#DST_AUST
 2

	)

151 
	#DST_WET
 3

	)

152 
	#DST_MET
 4

	)

153 
	#DST_EET
 5

	)

154 
	#DST_CAN
 6

	)

157 
	#timî˛ór
(
tvp
Ë—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0

	)

158 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

159 
	#timîcmp
(
tvp
, 
uvp
, 
cmp
) \

160 (((
tvp
)->
tv_£c
 =(
uvp
)->tv_sec) ? \

161 ((
tvp
)->
tv_u£c
 
	`cmp
 (
uvp
)->tv_usec) : \

162 ((
tvp
)->
tv_£c
 
	`cmp
 (
uvp
)->tv_£c))

	)

163 
	#timîadd
(
tvp
, 
uvp
, 
vvp
) \

165 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯+ (
uvp
)->tv_sec; \

166 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯+ (
uvp
)->tv_usec; \

167 i‡((
vvp
)->
tv_u£c
 >= 1000000) { \

168 (
vvp
)->
tv_£c
++; \

169 (
vvp
)->
tv_u£c
 -= 1000000; \

171 } 0)

	)

172 
	#timîsub
(
tvp
, 
uvp
, 
vvp
) \

174 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯- (
uvp
)->tv_sec; \

175 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯- (
uvp
)->tv_usec; \

176 i‡((
vvp
)->
tv_u£c
 < 0) { \

177 (
vvp
)->
tv_£c
--; \

178 (
vvp
)->
tv_u£c
 += 1000000; \

180 } 0)

	)

182 
	#timevÆcmp
(
l
, 
r
, 
cmp
Ë
	`timîcmp
÷,Ñ, cmpË

	)

187 
	s˛ocköfo
 {

188 
	mhz
;

189 
	mtick
;

190 
	mtickadj
;

191 
	m°©hz
;

192 
	m¥ofhz
;

197 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

198 
	~<time.h
>

201 
	g__BEGIN_DECLS


203 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

204 
adjtime
(c⁄° 
timevÆ
 *, timeval *);

205 
futimes
(, c⁄° 
timevÆ
 *);

206 
	$lutimes
(c⁄° *, c⁄° 
timevÆ
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

207 
	`£âimeofday
(c⁄° 
timevÆ
 *, c⁄° 
timez⁄e
 *);

210 
	`gëôimî
(, 
ôimîvÆ
 *);

211 
	`gëtimeofday
(
timevÆ
 * 
__ª°ri˘
, * __restrict);

213 
	~<sys/_£À˘.h
>

215 
	`£tôimî
(, c⁄° 
ôimîvÆ
 * 
__ª°ri˘
,

216 
ôimîvÆ
 * 
__ª°ri˘
);

217 
	`utimes
(c⁄° *, c⁄° 
timevÆ
 *);

219 
__END_DECLS


	@/usr/include/time.h

63 #i‚de‡
_TIME_H_


64 
	#_TIME_H_


	)

66 
	~<_ty≥s.h
>

68 
	#__√ed_°ru˘_time•ec


	)

69 
	~<_°ru˘s.h
>

71 #i‚de‡
NULL


72 
	#NULL
 
__DARWIN_NULL


	)

75 #i‚def 
_CLOCK_T


76 
	#_CLOCK_T


	)

77 
__d¨wö_˛ock_t
 
	t˛ock_t
;

80 #i‚def 
_SIZE_T


81 
	#_SIZE_T


	)

82 
__d¨wö_size_t
 
	tsize_t
;

85 #i‚def 
_TIME_T


86 
	#_TIME_T


	)

87 
__d¨wö_time_t
 
	ttime_t
;

90 
	stm
 {

91 
	mtm_£c
;

92 
	mtm_mö
;

93 
	mtm_hour
;

94 
	mtm_mday
;

95 
	mtm_m⁄
;

96 
	mtm_yór
;

97 
	mtm_wday
;

98 
	mtm_yday
;

99 
	mtm_isd°
;

100 
	mtm_gmtoff
;

101 *
	mtm_z⁄e
;

104 #i‡
__DARWIN_UNIX03


105 
	#CLOCKS_PER_SEC
 1000000

	)

107 
	~<machöe/_limôs.h
>

109 
	#CLOCKS_PER_SEC
 (
__DARWIN_CLK_TCK
)

	)

112 #i‚de‡
_ANSI_SOURCE


113 *
tz«me
[];

116 
gëd©e_îr
;

117 #i‡
__DARWIN_UNIX03


118 
timez⁄e
 
__DARWIN_ALIAS
(timezone);

120 
daylight
;

122 
__BEGIN_DECLS


123 *
as˘ime
(c⁄° 
tm
 *);

124 
˛ock_t
 
	$˛ock
(Ë
	`__DARWIN_ALIAS
(
˛ock
);

125 *
	`˘ime
(c⁄° 
time_t
 *);

126 
	`dif·ime
(
time_t
,Åime_t);

127 
tm
 *
	`gëd©e
(const *);

128 
tm
 *
	`gmtime
(c⁄° 
time_t
 *);

129 
tm
 *
	`loˇ…ime
(c⁄° 
time_t
 *);

130 
time_t
 
	$mktime
(
tm
 *Ë
	`__DARWIN_ALIAS
(
mktime
);

131 
size_t
 
	$°r·ime
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, c⁄° 
tm
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
°r·ime
);

132 *
	$°Ωtime
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
tm
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
°Ωtime
);

133 
time_t
 
	`time
(time_t *);

135 #i‚de‡
_ANSI_SOURCE


136 
	`tz£t
();

140 *
	`as˘ime_r
(c⁄° 
tm
 * 
__ª°ri˘
, * __restrict);

141 *
	`˘ime_r
(c⁄° 
time_t
 *, *);

142 
tm
 *
	`gmtime_r
(c⁄° 
time_t
 * 
__ª°ri˘
, tm * __restrict);

143 
tm
 *
	`loˇ…ime_r
(c⁄° 
time_t
 * 
__ª°ri˘
, tm * __restrict);

145 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

146 
time_t
 
	`posix2time
(time_t);

147 #i‡!
__DARWIN_UNIX03


148 *
	`timez⁄e
(, );

150 
	`tz£twÆl
();

151 
time_t
 
	`time2posix
(time_t);

152 
time_t
 
	`timñoˇl
(
tm
 * const);

153 
time_t
 
	`timegm
(
tm
 * const);

156 #i‡!
	`deföed
(
_ANSI_SOURCE
)

157 
	$«no¶ìp
(c⁄° 
time•ec
 *, time•e¯*Ë
	`__DARWIN_ALIAS_C
(
«no¶ìp
);

159 
__END_DECLS


161 #ifde‡
_USE_EXTENDED_LOCALES_


162 
	~<xloˇÀ/_time.h
>

	@/usr/include/unistd.h

68 #i‚de‡
_UNISTD_H_


69 
	#_UNISTD_H_


	)

71 
	~<_ty≥s.h
>

72 
	~<sys/uni°d.h
>

73 
	~<Avaûabûôy.h
>

75 #i‚de‡
_GID_T


76 
	#_GID_T


	)

77 
__d¨wö_gid_t
 
	tgid_t
;

80 #i‚de‡
_INTPTR_T


81 
	#_INTPTR_T


	)

82 
__d¨wö_öçå_t
 
	töçå_t
;

85 #i‚de‡
_OFF_T


86 
	#_OFF_T


	)

87 
__d¨wö_off_t
 
	toff_t
;

90 #i‚de‡
_PID_T


91 
	#_PID_T


	)

92 
__d¨wö_pid_t
 
	tpid_t
;

95 #i‚de‡
_SIZE_T


96 
	#_SIZE_T


	)

99 
__d¨wö_size_t
 
	tsize_t
;

102 #i‚def 
_SSIZE_T


103 
	#_SSIZE_T


	)

104 
__d¨wö_ssize_t
 
	tssize_t
;

107 #i‚de‡
_UID_T


108 
	#_UID_T


	)

109 
__d¨wö_uid_t
 
	tuid_t
;

112 #i‚de‡
_USECONDS_T


113 
	#_USECONDS_T


	)

114 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

117 #i‚de‡
NULL


118 
	#NULL
 
__DARWIN_NULL


	)

121 
	#STDIN_FILENO
 0

	)

122 
	#STDOUT_FILENO
 1

	)

123 
	#STDERR_FILENO
 2

	)

128 
	#_XOPEN_VERSION
 600

	)

129 
	#_XOPEN_XCU_VERSION
 4

	)

133 
	#_POSIX_ADVISORY_INFO
 (-1Ë

	)

134 
	#_POSIX_ASYNCHRONOUS_IO
 (-1Ë

	)

135 
	#_POSIX_BARRIERS
 (-1Ë

	)

136 
	#_POSIX_CHOWN_RESTRICTED
 200112L

	)

137 
	#_POSIX_CLOCK_SELECTION
 (-1Ë

	)

138 
	#_POSIX_CPUTIME
 (-1Ë

	)

139 
	#_POSIX_FSYNC
 200112L

	)

140 
	#_POSIX_IPV6
 200112L

	)

141 
	#_POSIX_JOB_CONTROL
 200112L

	)

142 
	#_POSIX_MAPPED_FILES
 200112L

	)

143 
	#_POSIX_MEMLOCK
 (-1Ë

	)

144 
	#_POSIX_MEMLOCK_RANGE
 (-1Ë

	)

145 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

146 
	#_POSIX_MESSAGE_PASSING
 (-1Ë

	)

147 
	#_POSIX_MONOTONIC_CLOCK
 (-1Ë

	)

148 
	#_POSIX_NO_TRUNC
 200112L

	)

149 
	#_POSIX_PRIORITIZED_IO
 (-1Ë

	)

150 
	#_POSIX_PRIORITY_SCHEDULING
 (-1Ë

	)

151 
	#_POSIX_RAW_SOCKETS
 (-1Ë

	)

152 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

153 
	#_POSIX_REALTIME_SIGNALS
 (-1Ë

	)

154 
	#_POSIX_REGEXP
 200112L

	)

155 
	#_POSIX_SAVED_IDS
 200112L

	)

156 
	#_POSIX_SEMAPHORES
 (-1Ë

	)

157 
	#_POSIX_SHARED_MEMORY_OBJECTS
 (-1Ë

	)

158 
	#_POSIX_SHELL
 200112L

	)

159 
	#_POSIX_SPAWN
 (-1Ë

	)

160 
	#_POSIX_SPIN_LOCKS
 (-1Ë

	)

161 
	#_POSIX_SPORADIC_SERVER
 (-1Ë

	)

162 
	#_POSIX_SYNCHRONIZED_IO
 (-1Ë

	)

163 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

164 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

165 
	#_POSIX_THREAD_CPUTIME
 (-1Ë

	)

166 
	#_POSIX_THREAD_PRIO_INHERIT
 (-1Ë

	)

167 
	#_POSIX_THREAD_PRIO_PROTECT
 (-1Ë

	)

168 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 (-1Ë

	)

169 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

170 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

171 
	#_POSIX_THREAD_SPORADIC_SERVER
 (-1Ë

	)

172 
	#_POSIX_THREADS
 200112L

	)

173 
	#_POSIX_TIMEOUTS
 (-1Ë

	)

174 
	#_POSIX_TIMERS
 (-1Ë

	)

175 
	#_POSIX_TRACE
 (-1Ë

	)

176 
	#_POSIX_TRACE_EVENT_FILTER
 (-1Ë

	)

177 
	#_POSIX_TRACE_INHERIT
 (-1Ë

	)

178 
	#_POSIX_TRACE_LOG
 (-1Ë

	)

179 
	#_POSIX_TYPED_MEMORY_OBJECTS
 (-1Ë

	)

180 #i‚de‡
_POSIX_VDISABLE


181 
	#_POSIX_VDISABLE
 0xf‡

	)

184 #i‡
__DARWIN_C_LEVEL
 >= 199209L

185 
	#_POSIX2_C_BIND
 200112L

	)

186 
	#_POSIX2_C_DEV
 200112L

	)

187 
	#_POSIX2_CHAR_TERM
 200112L

	)

188 
	#_POSIX2_FORT_DEV
 (-1Ë

	)

189 
	#_POSIX2_FORT_RUN
 200112L

	)

190 
	#_POSIX2_LOCALEDEF
 200112L

	)

191 
	#_POSIX2_PBS
 (-1)

	)

192 
	#_POSIX2_PBS_ACCOUNTING
 (-1)

	)

193 
	#_POSIX2_PBS_CHECKPOINT
 (-1)

	)

194 
	#_POSIX2_PBS_LOCATE
 (-1)

	)

195 
	#_POSIX2_PBS_MESSAGE
 (-1)

	)

196 
	#_POSIX2_PBS_TRACK
 (-1)

	)

197 
	#_POSIX2_SW_DEV
 200112L

	)

198 
	#_POSIX2_UPE
 200112L

	)

201 
	#__ILP32_OFF32
 (-1)

	)

202 
	#__ILP32_OFFBIG
 (-1)

	)

203 
	#__LP64_OFF64
 (-1)

	)

204 
	#__LPBIG_OFFBIG
 (-1)

	)

206 #ifde‡
__LP64__


207 #unde‡
__LP64_OFF64


208 
	#__LP64_OFF64
 (1)

	)

209 #unde‡
__LPBIG_OFFBIG


210 
	#__LPBIG_OFFBIG
 (1)

	)

212 #unde‡
__ILP32_OFFBIG


213 
	#__ILP32_OFFBIG
 (1)

	)

216 #i‡
__DARWIN_C_LEVEL
 >= 200112L

217 
	#_POSIX_V6_ILP32_OFF32
 
__ILP32_OFF32


	)

218 
	#_POSIX_V6_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

219 
	#_POSIX_V6_LP64_OFF64
 
__LP64_OFF64


	)

220 
	#_POSIX_V6_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

223 #i‡
__DARWIN_C_LEVEL
 >= 200809L

224 
	#_POSIX_V7_ILP32_OFF32
 
__ILP32_OFF32


	)

225 
	#_POSIX_V7_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

226 
	#_POSIX_V7_LP64_OFF64
 
__LP64_OFF64


	)

227 
	#_POSIX_V7_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

230 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


231 
	#_V6_ILP32_OFF32
 
__ILP32_OFF32


	)

232 
	#_V6_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

233 
	#_V6_LP64_OFF64
 
__LP64_OFF64


	)

234 
	#_V6_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

237 #i‡(
__DARWIN_C_LEVEL
 >199506L && __DARWIN_C_LEVEL < 200809LË|| __DARWIN_C_LEVEL >
__DARWIN_C_FULL


239 
	#_XBS5_ILP32_OFF32
 
__ILP32_OFF32


	)

240 
	#_XBS5_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

241 
	#_XBS5_LP64_OFF64
 
__LP64_OFF64


	)

242 
	#_XBS5_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

245 #i‡
__DARWIN_C_LEVEL
 >= 199506L

246 
	#_XOPEN_CRYPT
 (1)

	)

247 
	#_XOPEN_ENH_I18N
 (1Ë

	)

248 
	#_XOPEN_LEGACY
 (-1Ë

	)

249 
	#_XOPEN_REALTIME
 (-1Ë

	)

250 
	#_XOPEN_REALTIME_THREADS
 (-1Ë

	)

251 
	#_XOPEN_SHM
 (1)

	)

252 
	#_XOPEN_STREAMS
 (-1Ë

	)

253 
	#_XOPEN_UNIX
 (1)

	)

257 
	#_SC_ARG_MAX
 1

	)

258 
	#_SC_CHILD_MAX
 2

	)

259 
	#_SC_CLK_TCK
 3

	)

260 
	#_SC_NGROUPS_MAX
 4

	)

261 
	#_SC_OPEN_MAX
 5

	)

262 
	#_SC_JOB_CONTROL
 6

	)

263 
	#_SC_SAVED_IDS
 7

	)

264 
	#_SC_VERSION
 8

	)

265 
	#_SC_BC_BASE_MAX
 9

	)

266 
	#_SC_BC_DIM_MAX
 10

	)

267 
	#_SC_BC_SCALE_MAX
 11

	)

268 
	#_SC_BC_STRING_MAX
 12

	)

269 
	#_SC_COLL_WEIGHTS_MAX
 13

	)

270 
	#_SC_EXPR_NEST_MAX
 14

	)

271 
	#_SC_LINE_MAX
 15

	)

272 
	#_SC_RE_DUP_MAX
 16

	)

273 
	#_SC_2_VERSION
 17

	)

274 
	#_SC_2_C_BIND
 18

	)

275 
	#_SC_2_C_DEV
 19

	)

276 
	#_SC_2_CHAR_TERM
 20

	)

277 
	#_SC_2_FORT_DEV
 21

	)

278 
	#_SC_2_FORT_RUN
 22

	)

279 
	#_SC_2_LOCALEDEF
 23

	)

280 
	#_SC_2_SW_DEV
 24

	)

281 
	#_SC_2_UPE
 25

	)

282 
	#_SC_STREAM_MAX
 26

	)

283 
	#_SC_TZNAME_MAX
 27

	)

285 #i‡
__DARWIN_C_LEVEL
 >= 199309L

286 
	#_SC_ASYNCHRONOUS_IO
 28

	)

287 
	#_SC_PAGESIZE
 29

	)

288 
	#_SC_MEMLOCK
 30

	)

289 
	#_SC_MEMLOCK_RANGE
 31

	)

290 
	#_SC_MEMORY_PROTECTION
 32

	)

291 
	#_SC_MESSAGE_PASSING
 33

	)

292 
	#_SC_PRIORITIZED_IO
 34

	)

293 
	#_SC_PRIORITY_SCHEDULING
 35

	)

294 
	#_SC_REALTIME_SIGNALS
 36

	)

295 
	#_SC_SEMAPHORES
 37

	)

296 
	#_SC_FSYNC
 38

	)

297 
	#_SC_SHARED_MEMORY_OBJECTS
 39

	)

298 
	#_SC_SYNCHRONIZED_IO
 40

	)

299 
	#_SC_TIMERS
 41

	)

300 
	#_SC_AIO_LISTIO_MAX
 42

	)

301 
	#_SC_AIO_MAX
 43

	)

302 
	#_SC_AIO_PRIO_DELTA_MAX
 44

	)

303 
	#_SC_DELAYTIMER_MAX
 45

	)

304 
	#_SC_MQ_OPEN_MAX
 46

	)

305 
	#_SC_MAPPED_FILES
 47

	)

306 
	#_SC_RTSIG_MAX
 48

	)

307 
	#_SC_SEM_NSEMS_MAX
 49

	)

308 
	#_SC_SEM_VALUE_MAX
 50

	)

309 
	#_SC_SIGQUEUE_MAX
 51

	)

310 
	#_SC_TIMER_MAX
 52

	)

313 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


314 
	#_SC_NPROCESSORS_CONF
 57

	)

315 
	#_SC_NPROCESSORS_ONLN
 58

	)

318 #i‡
__DARWIN_C_LEVEL
 >= 200112L

319 
	#_SC_2_PBS
 59

	)

320 
	#_SC_2_PBS_ACCOUNTING
 60

	)

321 
	#_SC_2_PBS_CHECKPOINT
 61

	)

322 
	#_SC_2_PBS_LOCATE
 62

	)

323 
	#_SC_2_PBS_MESSAGE
 63

	)

324 
	#_SC_2_PBS_TRACK
 64

	)

325 
	#_SC_ADVISORY_INFO
 65

	)

326 
	#_SC_BARRIERS
 66

	)

327 
	#_SC_CLOCK_SELECTION
 67

	)

328 
	#_SC_CPUTIME
 68

	)

329 
	#_SC_FILE_LOCKING
 69

	)

330 
	#_SC_GETGR_R_SIZE_MAX
 70

	)

331 
	#_SC_GETPW_R_SIZE_MAX
 71

	)

332 
	#_SC_HOST_NAME_MAX
 72

	)

333 
	#_SC_LOGIN_NAME_MAX
 73

	)

334 
	#_SC_MONOTONIC_CLOCK
 74

	)

335 
	#_SC_MQ_PRIO_MAX
 75

	)

336 
	#_SC_READER_WRITER_LOCKS
 76

	)

337 
	#_SC_REGEXP
 77

	)

338 
	#_SC_SHELL
 78

	)

339 
	#_SC_SPAWN
 79

	)

340 
	#_SC_SPIN_LOCKS
 80

	)

341 
	#_SC_SPORADIC_SERVER
 81

	)

342 
	#_SC_THREAD_ATTR_STACKADDR
 82

	)

343 
	#_SC_THREAD_ATTR_STACKSIZE
 83

	)

344 
	#_SC_THREAD_CPUTIME
 84

	)

345 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 85

	)

346 
	#_SC_THREAD_KEYS_MAX
 86

	)

347 
	#_SC_THREAD_PRIO_INHERIT
 87

	)

348 
	#_SC_THREAD_PRIO_PROTECT
 88

	)

349 
	#_SC_THREAD_PRIORITY_SCHEDULING
 89

	)

350 
	#_SC_THREAD_PROCESS_SHARED
 90

	)

351 
	#_SC_THREAD_SAFE_FUNCTIONS
 91

	)

352 
	#_SC_THREAD_SPORADIC_SERVER
 92

	)

353 
	#_SC_THREAD_STACK_MIN
 93

	)

354 
	#_SC_THREAD_THREADS_MAX
 94

	)

355 
	#_SC_TIMEOUTS
 95

	)

356 
	#_SC_THREADS
 96

	)

357 
	#_SC_TRACE
 97

	)

358 
	#_SC_TRACE_EVENT_FILTER
 98

	)

359 
	#_SC_TRACE_INHERIT
 99

	)

360 
	#_SC_TRACE_LOG
 100

	)

361 
	#_SC_TTY_NAME_MAX
 101

	)

362 
	#_SC_TYPED_MEMORY_OBJECTS
 102

	)

363 
	#_SC_V6_ILP32_OFF32
 103

	)

364 
	#_SC_V6_ILP32_OFFBIG
 104

	)

365 
	#_SC_V6_LP64_OFF64
 105

	)

366 
	#_SC_V6_LPBIG_OFFBIG
 106

	)

367 
	#_SC_IPV6
 118

	)

368 
	#_SC_RAW_SOCKETS
 119

	)

369 
	#_SC_SYMLOOP_MAX
 120

	)

372 #i‡
__DARWIN_C_LEVEL
 >= 199506L

373 
	#_SC_ATEXIT_MAX
 107

	)

374 
	#_SC_IOV_MAX
 56

	)

375 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

376 
	#_SC_XOPEN_CRYPT
 108

	)

377 
	#_SC_XOPEN_ENH_I18N
 109

	)

378 
	#_SC_XOPEN_LEGACY
 110

	)

379 
	#_SC_XOPEN_REALTIME
 111

	)

380 
	#_SC_XOPEN_REALTIME_THREADS
 112

	)

381 
	#_SC_XOPEN_SHM
 113

	)

382 
	#_SC_XOPEN_STREAMS
 114

	)

383 
	#_SC_XOPEN_UNIX
 115

	)

384 
	#_SC_XOPEN_VERSION
 116

	)

385 
	#_SC_XOPEN_XCU_VERSION
 121

	)

388 #i‡(
__DARWIN_C_LEVEL
 >199506L && __DARWIN_C_LEVEL < 200809LË|| __DARWIN_C_LEVEL >
__DARWIN_C_FULL


390 
	#_SC_XBS5_ILP32_OFF32
 122

	)

391 
	#_SC_XBS5_ILP32_OFFBIG
 123

	)

392 
	#_SC_XBS5_LP64_OFF64
 124

	)

393 
	#_SC_XBS5_LPBIG_OFFBIG
 125

	)

396 #i‡
__DARWIN_C_LEVEL
 >= 200112L

397 
	#_SC_SS_REPL_MAX
 126

	)

398 
	#_SC_TRACE_EVENT_NAME_MAX
 127

	)

399 
	#_SC_TRACE_NAME_MAX
 128

	)

400 
	#_SC_TRACE_SYS_MAX
 129

	)

401 
	#_SC_TRACE_USER_EVENT_MAX
 130

	)

404 #i‡
__DARWIN_C_LEVEL
 < 200112L || __DARWIN_C_LEVEL >
__DARWIN_C_FULL


406 
	#_SC_PASS_MAX
 131

	)

409 #i‡
__DARWIN_C_LEVEL
 >= 199209L

410 #i‚de‡
_CS_PATH


411 
	#_CS_PATH
 1

	)

415 #i‡
__DARWIN_C_LEVEL
 >= 200112

416 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2

	)

417 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 3

	)

418 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 4

	)

419 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 5

	)

420 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 6

	)

421 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 7

	)

422 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 8

	)

423 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 9

	)

424 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 10

	)

425 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 11

	)

426 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 12

	)

427 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 13

	)

428 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 14

	)

431 #i‡(
__DARWIN_C_LEVEL
 >199506L && __DARWIN_C_LEVEL < 200809LË|| __DARWIN_C_LEVEL >
__DARWIN_C_FULL


433 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 20

	)

434 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 21

	)

435 
	#_CS_XBS5_ILP32_OFF32_LIBS
 22

	)

436 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 23

	)

437 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 24

	)

438 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 25

	)

439 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 26

	)

440 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 27

	)

441 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 28

	)

442 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 29

	)

443 
	#_CS_XBS5_LP64_OFF64_LIBS
 30

	)

444 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 31

	)

445 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 32

	)

446 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 33

	)

447 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 34

	)

448 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 35

	)

451 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


452 
	#_CS_DARWIN_USER_DIR
 65536

	)

453 
	#_CS_DARWIN_USER_TEMP_DIR
 65537

	)

454 
	#_CS_DARWIN_USER_CACHE_DIR
 65538

	)

458 #ifde‡
_DARWIN_UNLIMITED_GETGROUPS


459 #i‡
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
Ë&& __IPHONE_OS_VERSION_MIN_REQUIRED < 
__IPHONE_3_2


461 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
Ë&& __MAC_OS_X_VERSION_MIN_REQUIRED < 
__MAC_10_6


468 
__BEGIN_DECLS


469 
	$_exô
(Ë
__dód2
;

470 
	`ac˚ss
(const *, );

472 
	`Æ¨m
();

473 
	`chdú
(const *);

474 
	`chown
(c⁄° *, 
uid_t
, 
gid_t
);

476 
	$˛o£
(Ë
	`__DARWIN_ALIAS_C
(
˛o£
);

478 
	`dup
();

479 
	`dup2
(, );

480 
	`exe˛
(const *, const *, ...);

481 
	`exe˛e
(const *, const *, ...);

482 
	`exe˛p
(const *, const *, ...);

483 
	`execv
(const *, * const *);

484 
	`execve
(const *, * const *, * const *);

485 
	`execvp
(const *, * const *);

486 
pid_t
 
	`f‹k
();

487 
	`Â©hc⁄f
(, );

488 *
	`gëcwd
(*, 
size_t
);

489 
gid_t
 
	`gëegid
();

490 
uid_t
 
	`gëeuid
();

491 
gid_t
 
	`gëgid
();

492 #i‡
	`deföed
(
_DARWIN_UNLIMITED_GETGROUPS
Ë|| deföed(
_DARWIN_C_SOURCE
)

493 
	$gëgroups
(, 
gid_t
 []Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
gëgroups
));

495 
	`gëgroups
(, 
gid_t
 []);

497 *
	`gëlogö
();

498 
pid_t
 
	`gëpgΩ
();

499 
pid_t
 
	`gëpid
();

500 
pid_t
 
	`gëµid
();

501 
uid_t
 
	`gëuid
();

502 
	`ißây
();

503 
	`lök
(const *, const *);

504 
off_t
 
	`l£ek
(, off_t, );

505 
	`∑thc⁄f
(const *, );

507 
	$∑u£
(Ë
	`__DARWIN_ALIAS_C
(
∑u£
);

509 
	`pùe
([2]);

511 
ssize_t
 
	$ªad
(, *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
ªad
);

513 
	`rmdú
(const *);

514 
	`£tgid
(
gid_t
);

515 
	`£çgid
(
pid_t
,Öid_t);

516 
pid_t
 
	`£tsid
();

517 
	`£tuid
(
uid_t
);

520 
	$¶ìp
(Ë
	`__DARWIN_ALIAS_C
(
¶ìp
);

522 
	`sysc⁄f
();

523 
pid_t
 
	`tcgëpgΩ
();

524 
	`tc£çgΩ
(, 
pid_t
);

525 *
	`ây«me
();

527 #i‡
__DARWIN_UNIX03


528 
	$ây«me_r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
ây«me_r
);

530 *
	`ây«me_r
(, *, 
size_t
);

533 
	`u∆ök
(const *);

535 
ssize_t
 
	$wrôe
(, c⁄° *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
wrôe
);

536 
__END_DECLS


544 #i‡
__DARWIN_C_LEVEL
 >= 199209L

545 
__BEGIN_DECLS


546 
size_t
 
	$c⁄f°r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
c⁄f°r
);

548 
	$gë›t
(, * c⁄° [], c⁄° *Ë
	`__DARWIN_ALIAS
(
gë›t
);

550 *
›èrg
;

551 
›töd
, 
›ãº
, 
›t›t
;

552 
__END_DECLS


563 #i‡
__DARWIN_C_LEVEL
 >= 199506L

565 
	#F_ULOCK
 0

	)

566 
	#F_LOCK
 1

	)

567 
	#F_TLOCK
 2

	)

568 
	#F_TEST
 3

	)

570 
__BEGIN_DECLS


574 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

575 *
	`brk
(const *);

576 
	$chroŸ
(c⁄° *Ë
	`__POSIX_C_DEPRECATED
(199506L);

579 *
	`¸y±
(const *, const *);

580 #i‚de‡
__CTERMID_DEFINED


582 
	#__CTERMID_DEFINED
 1

	)

583 *
	`˘îmid
(*);

585 #i‡
__DARWIN_UNIX03


586 
	$í¸y±
(*, Ë
	`__DARWIN_ALIAS
(
í¸y±
);

588 
	`í¸y±
(*, );

590 
	`fchdú
();

591 
	`gëho°id
();

592 
pid_t
 
	`gëpgid
(pid_t);

593 
pid_t
 
	`gësid
(pid_t);

596 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

597 
	$gëdèbÀsize
(Ë
	`__POSIX_C_DEPRECATED
(199506L);

598 
	$gë∑gesize
(Ë
__puª2
 
	`__POSIX_C_DEPRECATED
(199506L);

599 *
	$gë∑ss
(c⁄° *Ë
	`__POSIX_C_DEPRECATED
(199506L);

603 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200809L

604 *
	$gëwd
(*Ë
	`__POSIX_C_DEPRECATED
(200112L);

607 
	$lchown
(c⁄° *, 
uid_t
, 
gid_t
Ë
	`__DARWIN_ALIAS
(
lchown
);

609 
	$lockf
(, , 
off_t
Ë
	`__DARWIN_ALIAS_C
(
lockf
);

611 
	$ni˚
(Ë
	`__DARWIN_ALIAS
(
ni˚
);

613 
ssize_t
 
	$¥ód
(, *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
¥ód
);

615 
ssize_t
 
	$pwrôe
(, c⁄° *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
pwrôe
);

618 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

621 *
	`sbrk
();

624 #i‡
__DARWIN_UNIX03


625 
pid_t
 
	$£çgΩ
(Ë
	`__DARWIN_ALIAS
(
£çgΩ
);

627 
	`£çgΩ
(
pid_t
 
pid
,Öid_à
pgΩ
);

630 
	$£åegid
(
gid_t
, gid_tË
	`__DARWIN_ALIAS
(
£åegid
);

632 
	$£åeuid
(
uid_t
, uid_tË
	`__DARWIN_ALIAS
(
£åeuid
);

634 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

635 
	`sync
();

636 
	`åunˇã
(c⁄° *, 
off_t
);

637 
u£c⁄ds_t
 
	`uÆ¨m
(useconds_t, useconds_t);

638 
	$u¶ìp
(
u£c⁄ds_t
Ë
	`__DARWIN_ALIAS_C
(
u¶ìp
);

639 
pid_t
 
	`vf‹k
();

642 
	$fsync
(Ë
	`__DARWIN_ALIAS_C
(
fsync
);

644 
	`·runˇã
(, 
off_t
);

645 
	`gëlogö_r
(*, 
size_t
);

646 
__END_DECLS


656 #i‡
__DARWIN_C_LEVEL
 >= 200112L

657 
__BEGIN_DECLS


658 
	`fchown
(, 
uid_t
, 
gid_t
);

659 
	`gëho°«me
(*, 
size_t
);

660 
ssize_t
 
	`ªadlök
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
size_t
);

661 
	`£ãgid
(
gid_t
);

662 
	`£ãuid
(
uid_t
);

663 
	`symlök
(const *, const *);

664 
__END_DECLS


671 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


672 
	~<sys/£À˘.h
>

674 #i‚de‡
_DEV_T


675 
	#_DEV_T


	)

676 
__d¨wö_dev_t
 
	tdev_t
;

679 #i‚de‡
_MODE_T


680 
	#_MODE_T


	)

681 
__d¨wö_mode_t
 
	tmode_t
;

684 #i‚de‡
_UUID_T


685 
	#_UUID_T


	)

686 
__d¨wö_uuid_t
 
	tuuid_t
;

689 
__BEGIN_DECLS


690 
	$_Exô
(Ë
__dód2
;

691 
	`ac˚ssx_≈
(c⁄° 
ac˚ssx_des¸ùt‹
 *, 
size_t
, *, 
uid_t
);

692 
	`ac˘
(const *);

693 
	`add_¥ofû
(*, 
size_t
, , );

694 
	`ídu£rshñl
();

695 
	`execvP
(const *, const *, * const *);

696 *
	`fÊag°o°r
();

697 
	`gëdomaö«me
(*, );

698 
	`gëgrou∂i°
(const *, , *, *);

699 
	$gëho°uuid
(
uuid_t
, c⁄° 
time•ec
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

700 
mode_t
 
	`gëmode
(const *, mode_t);

701 
	`gë≥îeid
(, 
uid_t
 *, 
gid_t
 *);

702 
	`gësgroups_≈
(*, 
uuid_t
);

703 *
	`gëu£rshñl
();

704 
	`gëwgroups_≈
(*, 
uuid_t
);

705 
	`öôgroups
(const *, );

706 
	`úu£rok
(, , const *, const *);

707 
	`úu£rok_ß
(const *, , , const *, const *);

708 
	`is£tugid
();

709 *
	`mkdãmp
(*);

710 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

711 
	`mk°emp
(*);

712 
	`mk°emps
(*, );

713 *
	`mkãmp
(*);

714 
	`nfssvc
(, *);

715 
	`¥ofû
(*, 
size_t
, , );

716 
	`±hªad_£tugid_≈
(
uid_t
, 
gid_t
);

717 
	`±hªad_gëugid_≈
–
uid_t
 *, 
gid_t
 *);

718 
	`rcmd
(**, , const *, const *, const *, *);

719 
	`rcmd_af
(**, , const *, const *, const *, *,

721 
	`ªboŸ
();

722 
	`ªvoke
(const *);

723 
	`ºesvp‹t
(*);

724 
	`ºesvp‹t_af
(*, );

725 
	`ru£rok
(const *, , const *, const *);

726 
	`£tdomaö«me
(const *, );

727 
	`£tgroups
(, c⁄° 
gid_t
 *);

728 
	`£tho°id
();

729 
	`£tho°«me
(const *, );

730 #i‡
__DARWIN_UNIX03


731 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

733 
	`£tkey
(const *);

735 
	`£éogö
(const *);

736 *
	$£tmode
(c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
£tmode
));

737 
	`£ågid
(
gid_t
);

738 
	`£åuid
(
uid_t
);

739 
	`£tsgroups_≈
(, c⁄° 
uuid_t
);

740 
	`£tu£rshñl
();

741 
	`£twgroups_≈
(, c⁄° 
uuid_t
);

742 
	`°πofÊags
(**, *, *);

743 
	`sw≠⁄
(const *);

744 
	`sysˇŒ
(, ...);

745 
	`ây¶Ÿ
();

746 
	`undñëe
(const *);

747 
	`unwhôeout
(const *);

748 *
	`vÆloc
(
size_t
);

750 *
sub›èrg
;

751 
	`gësub›t
(**, * const *, **);

754 #ifde‡
__LP64__


755 
	$fgë©åli°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

756 
	$f£èâæi°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

757 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

758 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

759 
	`exch™ged©a
(const *,const *,);

760 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

763 
	$fgë©åli°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

764 
	$f£èâæi°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

765 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

766 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

767 
	`exch™ged©a
(const *,const *,);

768 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

772 
fs£¨chblock
;

773 
£¨ch°©e
;

775 
	`£¨chfs
(c⁄° *, 
fs£¨chblock
 *, *, , , 
£¨ch°©e
 *);

776 
	`fs˘l
(const *,,*,);

777 
	$ffs˘l
(,,*,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

779 
›åe£t
;

781 
__END_DECLS


	@/usr/include/Availability.h

24 #i‚de‡
__AVAILABILITY__


25 
	#__AVAILABILITY__


	)

119 
	#__MAC_10_0
 1000

	)

120 
	#__MAC_10_1
 1010

	)

121 
	#__MAC_10_2
 1020

	)

122 
	#__MAC_10_3
 1030

	)

123 
	#__MAC_10_4
 1040

	)

124 
	#__MAC_10_5
 1050

	)

125 
	#__MAC_10_6
 1060

	)

126 
	#__MAC_10_7
 1070

	)

127 
	#__MAC_NA
 9999

	)

129 
	#__IPHONE_2_0
 20000

	)

130 
	#__IPHONE_2_1
 20100

	)

131 
	#__IPHONE_2_2
 20200

	)

132 
	#__IPHONE_3_0
 30000

	)

133 
	#__IPHONE_3_1
 30100

	)

134 
	#__IPHONE_3_2
 30200

	)

135 
	#__IPHONE_4_0
 40000

	)

136 
	#__IPHONE_4_1
 40100

	)

137 
	#__IPHONE_4_2
 40200

	)

138 
	#__IPHONE_4_3
 40300

	)

139 
	#__IPHONE_NA
 99999

	)

141 
	~<AvaûabûôyI¡î«l.h
>

144 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


145 
	#__OSX_AVAILABLE_STARTING
(
_mac
, 
_ùh⁄e
Ë
__AVAILABILITY_INTERNAL
##
	)
_iphone

146 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_macI¡ro
, 
_macDï
, 
_ùh⁄eI¡ro
, 
_ùh⁄eDï
) \

147 
__AVAILABILITY_INTERNAL
##
_ùh⁄eI¡ro
##
_DEP
##
_ùh⁄eDï


	)

149 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
)

150 
	#__OSX_AVAILABLE_STARTING
(
_mac
, 
_ùh⁄e
Ë
__AVAILABILITY_INTERNAL
##
	)
_mac

151 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_macI¡ro
, 
_macDï
, 
_ùh⁄eI¡ro
, 
_ùh⁄eDï
) \

152 
__AVAILABILITY_INTERNAL
##
_macI¡ro
##
_DEP
##
_macDï


	)

155 
	#__OSX_AVAILABLE_STARTING
(
_mac
, 
_ùh⁄e
)

	)

156 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_macI¡ro
, 
_macDï
, 
_ùh⁄eI¡ro
, 
_ùh⁄eDï
)

	)

	@/usr/include/_structs.h

24 
	~<sys/_°ru˘s.h
>

	@/usr/include/_types.h

24 #i‚de‡
__TYPES_H_


25 
	#__TYPES_H_


	)

27 
	~<sys/_ty≥s.h
>

29 #i‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 7

30 
	#__°rfm⁄like
(
fmèrg
, 
fú°v¨¨g
) \

31 
	`__©åibuã__
((
	`__f‹m©__
 (
__°rfm⁄__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

32 
	#__°r·imñike
(
fmèrg
) \

33 
	`__©åibuã__
((
	`__f‹m©__
 (
__°r·ime__
, 
fmèrg
, 0)))

	)

35 
	#__°rfm⁄like
(
fmèrg
, 
fú°v¨¨g
)

	)

36 
	#__°r·imñike
(
fmèrg
)

	)

39 
	t__d¨wö_∆_ôem
;

40 
	t__d¨wö_w˘øns_t
;

41 #ifde‡
__LP64__


42 
__uöt32_t
 
	t__d¨wö_w˘y≥_t
;

44 
	t__d¨wö_w˘y≥_t
;

47 #ifde‡
__WCHAR_MAX__


48 
	#__DARWIN_WCHAR_MAX
 
__WCHAR_MAX__


	)

50 
	#__DARWIN_WCHAR_MAX
 0x7fffffff

	)

53 #i‡
__DARWIN_WCHAR_MAX
 > 0xffffU

54 
	#__DARWIN_WCHAR_MIN
 (-0x7ffffff‡- 1)

	)

56 
	#__DARWIN_WCHAR_MIN
 0

	)

58 
	#__DARWIN_WEOF
 ((
__d¨wö_wöt_t
)-1)

	)

60 #i‚de‡
_FORTIFY_SOURCE


61 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

62 
	#_FORTIFY_SOURCE
 0

	)

64 
	#_FORTIFY_SOURCE
 2

	)

	@/usr/include/_xlocale.h

24 #i‚de‡
__XLOCALE_H_


25 
	#__XLOCALE_H_


	)

27 
	~<sys/cdefs.h
>

29 
__BEGIN_DECLS


30 
___mb_cur_max
();

31 
___mb_cur_max_l
(
loˇÀ_t
);

32 
	g__END_DECLS


	@/usr/include/alloca.h

24 #i‚de‡
_ALLOCA_H_


25 
	#_ALLOCA_H_


	)

27 
	~<sys/cdefs.h
>

28 
	~<_ty≥s.h
>

30 #i‚def 
_SIZE_T


31 
	#_SIZE_T


	)

32 
__d¨wö_size_t
 
	tsize_t
;

35 
__BEGIN_DECLS


36 *
Æloˇ
(
size_t
);

37 
	g__END_DECLS


39 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

41 #unde‡
Æloˇ


42 #unde‡
__Æloˇ


43 
	#Æloˇ
(
size
Ë
	`__Æloˇ
(size)

	)

44 
	#__Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
(size)

	)

	@/usr/include/machine/_limits.h

28 #i‚de‡
_BSD_MACHINE__LIMITS_H_


29 
	#_BSD_MACHINE__LIMITS_H_


	)

31 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

32 
	~"i386/_limôs.h
"

33 #ñi‡
deföed
 (
__¨m__
)

34 
	~"¨m/_limôs.h
"

36 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_param.h

28 #i‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

29 
	~"i386/_∑øm.h
"

30 #ñi‡
deföed
 (
__¨m__
)

31 
	~"¨m/_∑øm.h
"

33 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/endian.h

31 #i‚de‡
_BSD_MACHINE_ENDIAN_H_


32 
	#_BSD_MACHINE_ENDIAN_H_


	)

34 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

35 
	~"i386/ídün.h
"

36 #ñi‡
deföed
 (
__¨m__
)

37 
	~"¨m/ídün.h
"

39 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/types.h

31 #i‚de‡
_BSD_MACHINE_TYPES_H_


32 
	#_BSD_MACHINE_TYPES_H_


	)

34 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

35 
	~"i386/ty≥s.h
"

36 #ñi‡
deföed
 (
__¨m__
)

37 
	~"¨m/ty≥s.h
"

39 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/netinet6/in6.h

96 #i‚de‡
__KAME_NETINET_IN_H_INCLUDED_


100 #i‚de‡
_NETINET6_IN6_H_


101 
	#_NETINET6_IN6_H_


	)

102 
	~<sys/≠∂ópi›ts.h
>

103 
	~<sys/_ty≥s.h
>

106 #i‚de‡
_SA_FAMILY_T


107 
	#_SA_FAMILY_T


	)

108 
__uöt8_t
 
	tß_Ámûy_t
;

116 
	#__KAME__


	)

117 
	#__KAME_VERSION
 "2009/≠∂e-d¨wö"

	)

119 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

148 
	#IPV6PORT_RESERVED
 1024

	)

149 
	#IPV6PORT_ANONMIN
 49152

	)

150 
	#IPV6PORT_ANONMAX
 65535

	)

151 
	#IPV6PORT_RESERVEDMIN
 600

	)

152 
	#IPV6PORT_RESERVEDMAX
 (
IPV6PORT_RESERVED
-1)

	)

158 
	sö6_addr
 {

160 
__uöt8_t
 
	m__u6_addr8
[16];

161 
__uöt16_t
 
	m__u6_addr16
[8];

162 
__uöt32_t
 
	m__u6_addr32
[4];

163 } 
	m__u6_addr
;

166 
	#s6_addr
 
__u6_addr
.
__u6_addr8


	)

168 
	#INET6_ADDRSTRLEN
 46

	)

173 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

174 
	#SIN6_LEN


	)

176 
	ssockaddr_ö6
 {

177 
__uöt8_t
 
	msö6_Àn
;

178 
ß_Ámûy_t
 
	msö6_Ámûy
;

179 
ö_p‹t_t
 
	msö6_p‹t
;

180 
__uöt32_t
 
	msö6_Êowöfo
;

181 
ö6_addr
 
	msö6_addr
;

182 
__uöt32_t
 
	msö6_sc›e_id
;

191 
	#IN6ADDR_ANY_INIT
 \

193 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }}}

	)

194 
	#IN6ADDR_LOOPBACK_INIT
 \

196 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

197 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

198 
	#IN6ADDR_NODELOCAL_ALLNODES_INIT
 \

200 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

201 
	#IN6ADDR_INTFACELOCAL_ALLNODES_INIT
 \

203 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

204 
	#IN6ADDR_LINKLOCAL_ALLNODES_INIT
 \

206 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

207 
	#IN6ADDR_LINKLOCAL_ALLROUTERS_INIT
 \

209 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 }}}

	)

210 
	#IN6ADDR_LINKLOCAL_ALLV2ROUTERS_INIT
 \

212 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16 }}}

	)

213 
	#IN6ADDR_V4MAPPED_INIT
 \

215 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 }}}

	)

218 c⁄° 
ö6_addr
 
ö6addr_™y
;

219 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

220 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

221 c⁄° 
ö6_addr
 
ö6addr_nodñoˇl_Æ odes
;

222 c⁄° 
ö6_addr
 
ö6addr_lökloˇl_Æ odes
;

223 c⁄° 
ö6_addr
 
ö6addr_lökloˇl_ÆÃouãrs
;

224 c⁄° 
ö6_addr
 
ö6addr_lökloˇl_Ælv2rouãrs
;

233 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

234 
	#IN6_ARE_ADDR_EQUAL
(
a
, 
b
) \

235 (
	`memcmp
(&(
a
)->
s6_addr
[0], &(
b
)->s6_addr[0], (
ö6_addr
)Ë=0)

	)

242 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

243 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

244 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

245 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == 0) && \

246 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]Ë=0))

	)

251 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

252 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

253 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

254 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == 0) && \

255 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]Ë=
	`¡ohl
(1)))

	)

260 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

261 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

262 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

263 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == 0) && \

264 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]) != 0) && \

265 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]Ë!
	`¡ohl
(1)))

	)

270 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

271 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

272 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

273 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]Ë=
	`¡ohl
(0x0000ffff)))

	)

278 
	#IN6_IS_ADDR_6TO4
(
x
Ë(
	`¡ohs
((x)->
s6_addr16
[0]Ë=0x2002)

	)

284 
	#__IPV6_ADDR_SCOPE_NODELOCAL
 0x01

	)

285 
	#__IPV6_ADDR_SCOPE_INTFACELOCAL
 0x01

	)

286 
	#__IPV6_ADDR_SCOPE_LINKLOCAL
 0x02

	)

287 
	#__IPV6_ADDR_SCOPE_SITELOCAL
 0x05

	)

288 
	#__IPV6_ADDR_SCOPE_ORGLOCAL
 0x08

	)

289 
	#__IPV6_ADDR_SCOPE_GLOBAL
 0x0e

	)

295 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

296 (((
a
)->
s6_addr
[0] =0x„Ë&& ((◊)->s6_addr[1] & 0xc0Ë=0x80))

	)

297 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

298 (((
a
)->
s6_addr
[0] =0x„Ë&& ((◊)->s6_addr[1] & 0xc0Ë=0xc0))

	)

303 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(◊)->
s6_addr
[0] =0xff)

	)

308 
	#IN6_IS_ADDR_UNIQUE_LOCAL
(
a
Ë((◊)->
s6_addr
[0] =0xfcË|| (◊)->s6_addr[0] =0xfd))

	)

310 
	#__IPV6_ADDR_MC_SCOPE
(
a
Ë(◊)->
s6_addr
[1] & 0x0f)

	)

315 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

316 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

317 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_NODELOCAL
))

	)

318 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

319 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

320 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_LINKLOCAL
))

	)

321 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

322 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

323 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_SITELOCAL
))

	)

324 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

325 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

326 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_ORGLOCAL
))

	)

327 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

328 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

329 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_GLOBAL
))

	)

335 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

343 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

366 #i‡
deföed
(
__APPLE_USE_RFC_3542
Ë&& deföed(
__APPLE_USE_RFC_2292
)

371 
	#IPV6_OPTIONS
 1

	)

372 
	#IPV6_RECVOPTS
 5

	)

373 
	#IPV6_RECVRETOPTS
 6

	)

374 
	#IPV6_RECVDSTADDR
 7

	)

375 
	#IPV6_RETOPTS
 8

	)

377 
	#IPV6_SOCKOPT_RESERVED1
 3

	)

379 
	#IPV6_UNICAST_HOPS
 4

	)

380 
	#IPV6_MULTICAST_IF
 9

	)

381 
	#IPV6_MULTICAST_HOPS
 10

	)

382 
	#IPV6_MULTICAST_LOOP
 11

	)

383 
	#IPV6_JOIN_GROUP
 12

	)

384 
	#IPV6_LEAVE_GROUP
 13

	)

386 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

387 
	#IPV6_PORTRANGE
 14

	)

388 
	#ICMP6_FILTER
 18

	)

389 
	#IPV6_2292PKTINFO
 19

	)

390 
	#IPV6_2292HOPLIMIT
 20

	)

391 
	#IPV6_2292NEXTHOP
 21

	)

392 
	#IPV6_2292HOPOPTS
 22

	)

393 
	#IPV6_2292DSTOPTS
 23

	)

394 
	#IPV6_2292RTHDR
 24

	)

395 
	#IPV6_2292PKTOPTIONS
 25

	)

398 #ifde‡
__APPLE_USE_RFC_2292


399 
	#IPV6_PKTINFO
 
IPV6_2292PKTINFO


	)

400 
	#IPV6_HOPLIMIT
 
IPV6_2292HOPLIMIT


	)

401 
	#IPV6_NEXTHOP
 
IPV6_2292NEXTHOP


	)

402 
	#IPV6_HOPOPTS
 
IPV6_2292HOPOPTS


	)

403 
	#IPV6_DSTOPTS
 
IPV6_2292DSTOPTS


	)

404 
	#IPV6_RTHDR
 
IPV6_2292RTHDR


	)

405 
	#IPV6_PKTOPTIONS
 
IPV6_2292PKTOPTIONS


	)

408 
	#IPV6_CHECKSUM
 26

	)

410 
	#IPV6_V6ONLY
 27

	)

411 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

412 
	#IPV6_BINDV6ONLY
 
IPV6_V6ONLY


	)

416 
	#IPV6_IPSEC_POLICY
 28

	)

418 
	#IPV6_FAITH
 29

	)

421 
	#IPV6_FW_ADD
 30

	)

422 
	#IPV6_FW_DEL
 31

	)

423 
	#IPV6_FW_FLUSH
 32

	)

424 
	#IPV6_FW_ZERO
 33

	)

425 
	#IPV6_FW_GET
 34

	)

432 
	#IPV6_RECVTCLASS
 35

	)

433 
	#IPV6_TCLASS
 36

	)

435 #ifde‡
__APPLE_USE_RFC_3542


437 
	#IPV6_RTHDRDSTOPTS
 57

	)

442 
	#IPV6_RECVPKTINFO
 61

	)

447 
	#IPV6_RECVHOPLIMIT
 37

	)

448 
	#IPV6_RECVRTHDR
 38

	)

449 
	#IPV6_RECVHOPOPTS
 39

	)

450 
	#IPV6_RECVDSTOPTS
 40

	)

452 
	#IPV6_USE_MIN_MTU
 42

	)

453 
	#IPV6_RECVPATHMTU
 43

	)

455 
	#IPV6_PATHMTU
 44

	)

458 
	#IPV6_REACHCONF
 45

	)

462 
	#IPV6_3542PKTINFO
 46

	)

463 
	#IPV6_3542HOPLIMIT
 47

	)

464 
	#IPV6_3542NEXTHOP
 48

	)

465 
	#IPV6_3542HOPOPTS
 49

	)

466 
	#IPV6_3542DSTOPTS
 50

	)

467 
	#IPV6_3542RTHDR
 51

	)

469 
	#IPV6_PKTINFO
 
IPV6_3542PKTINFO


	)

470 
	#IPV6_HOPLIMIT
 
IPV6_3542HOPLIMIT


	)

471 
	#IPV6_NEXTHOP
 
IPV6_3542NEXTHOP


	)

472 
	#IPV6_HOPOPTS
 
IPV6_3542HOPOPTS


	)

473 
	#IPV6_DSTOPTS
 
IPV6_3542DSTOPTS


	)

474 
	#IPV6_RTHDR
 
IPV6_3542RTHDR


	)

476 
	#IPV6_AUTOFLOWLABEL
 59

	)

478 
	#IPV6_DONTFRAG
 62

	)

480 
	#IPV6_PREFER_TEMPADDR
 63

	)

488 
	#IPV6_MSFILTER
 74

	)

493 
	#IPV6_BOUND_IF
 125

	)

498 
	#IPV6_RTHDR_LOOSE
 0

	)

499 
	#IPV6_RTHDR_STRICT
 1

	)

500 
	#IPV6_RTHDR_TYPE_0
 0

	)

505 
	#IPV6_DEFAULT_MULTICAST_HOPS
 1

	)

506 
	#IPV6_DEFAULT_MULTICAST_LOOP
 1

	)

513 
	#IPV6_MIN_MEMBERSHIPS
 31

	)

514 
	#IPV6_MAX_MEMBERSHIPS
 4095

	)

520 
	#IPV6_MAX_GROUP_SRC_FILTER
 512

	)

521 
	#IPV6_MAX_SOCK_SRC_FILTER
 128

	)

526 
	sùv6_mªq
 {

527 
ö6_addr
 
	mùv6mr_mu…üddr
;

528 
	mùv6mr_öãrÁ˚
;

534 
	sö6_pktöfo
 {

535 
ö6_addr
 
	mùi6_addr
;

536 
	mùi6_ifödex
;

542 
	sù6_mtuöfo
 {

543 
sockaddr_ö6
 
	mù6m_addr
;

544 
uöt32_t
 
	mù6m_mtu
;

551 
	#IPV6_PORTRANGE_DEFAULT
 0

	)

552 
	#IPV6_PORTRANGE_HIGH
 1

	)

553 
	#IPV6_PORTRANGE_LOW
 2

	)

561 
	#IPV6PROTO_MAXID
 (
IPPROTO_PIM
 + 1Ë

	)

566 
	#IPV6CTL_FORWARDING
 1

	)

567 
	#IPV6CTL_SENDREDIRECTS
 2

	)

568 
	#IPV6CTL_DEFHLIM
 3

	)

569 #ifde‡
nŸyë


570 
	#IPV6CTL_DEFMTU
 4

	)

572 
	#IPV6CTL_FORWSRCRT
 5

	)

573 
	#IPV6CTL_STATS
 6

	)

574 
	#IPV6CTL_MRTSTATS
 7

	)

575 
	#IPV6CTL_MRTPROTO
 8

	)

576 
	#IPV6CTL_MAXFRAGPACKETS
 9

	)

577 
	#IPV6CTL_SOURCECHECK
 10

	)

578 
	#IPV6CTL_SOURCECHECK_LOGINT
 11

	)

579 
	#IPV6CTL_ACCEPT_RTADV
 12

	)

580 
	#IPV6CTL_KEEPFAITH
 13

	)

581 
	#IPV6CTL_LOG_INTERVAL
 14

	)

582 
	#IPV6CTL_HDRNESTLIMIT
 15

	)

583 
	#IPV6CTL_DAD_COUNT
 16

	)

584 
	#IPV6CTL_AUTO_FLOWLABEL
 17

	)

585 
	#IPV6CTL_DEFMCASTHLIM
 18

	)

586 
	#IPV6CTL_GIF_HLIM
 19

	)

587 
	#IPV6CTL_KAME_VERSION
 20

	)

588 
	#IPV6CTL_USE_DEPRECATED
 21

	)

589 
	#IPV6CTL_RR_PRUNE
 22

	)

591 
	#IPV6CTL_MAPPED_ADDR
 23

	)

593 
	#IPV6CTL_V6ONLY
 24

	)

594 
	#IPV6CTL_RTEXPIRE
 25

	)

595 
	#IPV6CTL_RTMINEXPIRE
 26

	)

596 
	#IPV6CTL_RTMAXCACHE
 27

	)

598 
	#IPV6CTL_USETEMPADDR
 32

	)

599 
	#IPV6CTL_TEMPPLTIME
 33

	)

600 
	#IPV6CTL_TEMPVLTIME
 34

	)

601 
	#IPV6CTL_AUTO_LINKLOCAL
 35

	)

602 
	#IPV6CTL_RIP6STATS
 36

	)

603 
	#IPV6CTL_PREFER_TEMPADDR
 37

	)

604 
	#IPV6CTL_ADDRCTLPOLICY
 38

	)

605 
	#IPV6CTL_USE_DEFAULTZONE
 39

	)

607 
	#IPV6CTL_MAXFRAGS
 41

	)

608 
	#IPV6CTL_MCAST_PMTU
 44

	)

610 
	#IPV6CTL_NEIGHBORGCTHRESH
 46

	)

611 
	#IPV6CTL_MAXIFPREFIXES
 47

	)

612 
	#IPV6CTL_MAXIFDEFROUTERS
 48

	)

613 
	#IPV6CTL_MAXDYNROUTES
 49

	)

614 
	#ICMPV6CTL_ND6_ONLINKNSRFC4861
 50

	)

618 
	#IPV6CTL_MAXID
 51

	)

621 
__BEGIN_DECLS


622 
	gcmsghdr
;

624 
öë6_›ti⁄_•a˚
();

625 
öë6_›ti⁄_öô
(*, 
cmsghdr
 **, );

626 
öë6_›ti⁄_≠≥nd
(
cmsghdr
 *, c⁄° 
__uöt8_t
 *,

628 
__uöt8_t
 *
öë6_›ti⁄_Æloc
(
cmsghdr
 *, , , );

629 
öë6_›ti⁄_√xt
(c⁄° 
cmsghdr
 *, 
__uöt8_t
 **);

630 
öë6_›ti⁄_föd
(c⁄° 
cmsghdr
 *, 
__uöt8_t
 **, );

632 
size_t
 
öë6_πhdr_•a˚
(, );

633 
cmsghdr
 *
öë6_πhdr_öô
(*, );

634 
öë6_πhdr_add
(
cmsghdr
 *, c⁄° 
ö6_addr
 *,

636 
öë6_πhdr_œ°h›
(
cmsghdr
 *, );

638 
öë6_πhdr_ªvî£
(c⁄° 
cmsghdr
 *, cmsghdr *);

640 
öë6_πhdr_£gmíts
(c⁄° 
cmsghdr
 *);

641 
ö6_addr
 *
öë6_πhdr_gëaddr
(
cmsghdr
 *, );

642 
öë6_πhdr_gëÊags
(c⁄° 
cmsghdr
 *, );

644 
öë6_›t_öô
(*, 
sockÀn_t
);

645 
öë6_›t_≠≥nd
(*, 
sockÀn_t
, , 
__uöt8_t
,

646 
sockÀn_t
, 
__uöt8_t
, **);

647 
öë6_›t_föish
(*, 
sockÀn_t
, );

648 
öë6_›t_£t_vÆ
(*, , *, 
sockÀn_t
);

650 
öë6_›t_√xt
(*, 
sockÀn_t
, , 
__uöt8_t
 *,

651 
sockÀn_t
 *, **);

652 
öë6_›t_föd
(*, 
sockÀn_t
, , 
__uöt8_t
,

653 
sockÀn_t
 *, **);

654 
öë6_›t_gë_vÆ
(*, , *, 
sockÀn_t
);

655 
sockÀn_t
 
öë6_πh_•a˚
(, );

656 *
öë6_πh_öô
(*, 
sockÀn_t
, , );

657 
öë6_πh_add
(*, c⁄° 
ö6_addr
 *);

658 
öë6_πh_ªvî£
(const *, *);

659 
öë6_πh_£gmíts
(const *);

660 
ö6_addr
 *
öë6_πh_gëaddr
(const *, );

661 
addr£l_pﬁicy_öô
();

662 
	g__END_DECLS


	@/usr/include/secure/_stdio.h

24 #i‚de‡
_STDIO_H_


25 #îr‹ 
îr‹
 "Never use <secure/_stdio.h> directly; include <stdio.h> instead."

28 #i‚de‡
_SECURE__STDIO_H_


29 
	#_SECURE__STDIO_H_


	)

31 
	~<£cuª/_comm⁄.h
>

33 #i‡
_USE_FORTIFY_LEVEL
 > 0

35 #unde‡
•rötf


36 #unde‡
v•rötf


38 #i‡
__DARWIN_C_LEVEL
 >= 200112L

39 #unde‡
¢¥ötf


40 #unde‡
v¢¥ötf


45 
	$__•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

46 c⁄° * 
__ª°ri˘
, ...)

47 
	`__DARWIN_LDBL_COMPAT
 (
__•rötf_chk
);

49 
	#•rötf
(
°r
, ...) \

50 
	`__buûtö___•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

52 
	$__¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

53 c⁄° * 
__ª°ri˘
, ...)

54 
	`__DARWIN_LDBL_COMPAT
 (
__¢¥ötf_chk
);

56 #i‡
__DARWIN_C_LEVEL
 >= 200112L

57 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

58 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

60 
	$__v•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

61 c⁄° * 
__ª°ri˘
, 
va_li°
)

62 
	`__DARWIN_LDBL_COMPAT
 (
__v•rötf_chk
);

64 
	#v•rötf
(
°r
, 
f‹m©
, 
≠
) \

65 
	`__buûtö___v•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

67 
	$__v¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

68 c⁄° * 
__ª°ri˘
, 
va_li°
)

69 
	`__DARWIN_LDBL_COMPAT
 (
__v¢¥ötf_chk
);

71 
	#v¢¥ötf
(
°r
, 
Àn
, 
f‹m©
, 
≠
) \

72 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

	@/usr/include/secure/_string.h

24 #i‚de‡
_STRING_H_


28 #i‚de‡
_SECURE__STRING_H_


29 
	#_SECURE__STRING_H_


	)

31 
	~<sys/cdefs.h
>

32 
	~<£cuª/_comm⁄.h
>

34 #i‡
_USE_FORTIFY_LEVEL
 > 0

39 #unde‡
mem˝y


40 #unde‡
memmove


41 #unde‡
mem£t


42 #unde‡
°r˝y


43 #i‡
__DARWIN_C_LEVEL
 >= 200809L

44 #unde‡
°p˝y


45 #unde‡
°≤˝y


47 #unde‡
°∫˝y


48 #unde‡
°rˇt


49 #i‡! (
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
) && __IPHONE_OS_VERSION_MIN_REQUIRED < 32000)

50 #unde‡
°∫ˇt


53 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

54 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

55 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

56 : 
	`__ölöe_mem˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

58 
__ölöe
 *

59 
	$__ölöe_mem˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

61  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

62 
	}
}

64 
	#memmove
(
de°
, 
§c
, 
Àn
) \

65 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

66 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

67 : 
	`__ölöe_memmove_chk
 (
de°
, 
§c
, 
Àn
))

	)

69 
__ölöe
 *

70 
	$__ölöe_memmove_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

72  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

73 
	}
}

75 
	#mem£t
(
de°
, 
vÆ
, 
Àn
) \

76 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

77 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
vÆ
, 
Àn
, 
	`__d¨wö_obsz0
 (dest)) \

78 : 
	`__ölöe_mem£t_chk
 (
de°
, 
vÆ
, 
Àn
))

	)

80 
__ölöe
 *

81 
	$__ölöe_mem£t_chk
 (*
__de°
, 
__vÆ
, 
size_t
 
__Àn
)

83  
	`__buûtö___mem£t_chk
 (
__de°
, 
__vÆ
, 
__Àn
, 
	`__d¨wö_obsz0
(__dest));

84 
	}
}

86 
	#°r˝y
(
de°
, 
§c
) \

87 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

88 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

89 : 
	`__ölöe_°r˝y_chk
 (
de°
, 
§c
))

	)

91 
__ölöe
 *

92 
	$__ölöe_°r˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

94  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

95 
	}
}

97 #i‡
__DARWIN_C_LEVEL
 >= 200809L

98 
	#°p˝y
(
de°
, 
§c
) \

99 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

100 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

101 : 
	`__ölöe_°p˝y_chk
 (
de°
, 
§c
))

	)

103 
__ölöe
 *

104 
	$__ölöe_°p˝y_chk
 (*
__de°
, c⁄° *
__§c
)

106  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

107 
	}
}

109 
	#°≤˝y
(
de°
, 
§c
, 
Àn
) \

110 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

111 ? 
	`__buûtö___°≤˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (dest)) \

112 : 
	`__ölöe_°≤˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

114 
__ölöe
 *

115 
	$__ölöe_°≤˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

116 
size_t
 
__Àn
)

118  
	`__buûtö___°≤˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

119 
	}
}

122 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

123 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

124 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (dest)) \

125 : 
	`__ölöe_°∫˝y_chk
 (
de°
, 
§c
, 
Àn
))

	)

127 
__ölöe
 *

128 
	$__ölöe_°∫˝y_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

129 
size_t
 
__Àn
)

131  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

132 
	}
}

134 
	#°rˇt
(
de°
, 
§c
) \

135 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

136 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (dest)) \

137 : 
	`__ölöe_°rˇt_chk
 (
de°
, 
§c
))

	)

139 
__ölöe
 *

140 
	$__ölöe_°rˇt_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__d¨wö_obsz
(__dest));

143 
	}
}

145 #i‡! (
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
) && __IPHONE_OS_VERSION_MIN_REQUIRED < 32000)

146 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

147 ((
	`__d¨wö_obsz0
 (
de°
Ë!(
size_t
) -1) \

148 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (dest)) \

149 : 
	`__ölöe_°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
))

	)

151 
__ölöe
 *

152 
	$__ölöe_°∫ˇt_chk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__Àn
)

155  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__d¨wö_obsz
(__dest));

156 
	}
}

	@/usr/include/strings.h

58 #i‚de‡
_STRINGS_H_


59 
	#_STRINGS_H_


	)

61 
	~<_ty≥s.h
>

63 
	~<sys/cdefs.h
>

64 
	~<Avaûabûôy.h
>

66 #i‚def 
_SIZE_T


67 
	#_SIZE_T


	)

68 
__d¨wö_size_t
 
	tsize_t
;

71 
	g__BEGIN_DECLS


73 #i‡!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200809L

74 
	$bcmp
(c⁄° *, c⁄° *, 
size_t
Ë
	`__POSIX_C_DEPRECATED
(200112L);

75 
	$bc›y
(c⁄° *, *, 
size_t
Ë
	`__POSIX_C_DEPRECATED
(200112L);

76 
	$bzîo
(*, 
size_t
Ë
	`__POSIX_C_DEPRECATED
(200112L);

77 *
	$ödex
(c⁄° *, Ë
	`__POSIX_C_DEPRECATED
(200112L);

78 *
	$rödex
(c⁄° *, Ë
	`__POSIX_C_DEPRECATED
(200112L);

81 
	`ffs
();

82 
	`°rˇ£cmp
(const *, const *);

83 
	`°∫ˇ£cmp
(c⁄° *, c⁄° *, 
size_t
);

84 
__END_DECLS


87 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


88 
__BEGIN_DECLS


89 
	$ff¶
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

90 
	$Ês
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

91 
	$Ê¶
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

92 
__END_DECLS


94 
	~<°rög.h
>

	@/usr/include/sys/_endian.h

90 #i‚de‡
_SYS__ENDIAN_H_


91 
	#_SYS__ENDIAN_H_


	)

93 
	~<sys/cdefs.h
>

99 #i‡
deföed
(
löt
)

101 
__BEGIN_DECLS


102 
__uöt16_t
 
¡ohs
(__uint16_t);

103 
__uöt16_t
 
ht⁄s
(__uint16_t);

104 
__uöt32_t
 
¡ohl
(__uint32_t);

105 
__uöt32_t
 
ht⁄l
(__uint32_t);

106 
	g__END_DECLS


108 #ñi‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


110 
	#¡ohl
(
x
Ë((
__uöt32_t
)(x))

	)

111 
	#¡ohs
(
x
Ë((
__uöt16_t
)(x))

	)

112 
	#ht⁄l
(
x
Ë((
__uöt32_t
)(x))

	)

113 
	#ht⁄s
(
x
Ë((
__uöt16_t
)(x))

	)

115 #i‡ 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

116 
	#NTOHL
(
x
Ë(x)

	)

117 
	#NTOHS
(
x
Ë(x)

	)

118 
	#HTONL
(
x
Ë(x)

	)

119 
	#HTONS
(
x
Ë(x)

	)

124 
	~<libkîn/_OSByãOrdî.h
>

126 
	#¡ohs
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

127 
	#ht⁄s
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

129 
	#¡ohl
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

130 
	#ht⁄l
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

132 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

133 
	#NTOHL
(
x
Ë(xË
	`¡ohl
((
__uöt32_t
)x)

	)

134 
	#NTOHS
(
x
Ë(xË
	`¡ohs
((
__uöt16_t
)x)

	)

135 
	#HTONL
(
x
Ë(xË
	`ht⁄l
((
__uöt32_t
)x)

	)

136 
	#HTONS
(
x
Ë(xË
	`ht⁄s
((
__uöt16_t
)x)

	)

	@/usr/include/sys/_select.h

36 #i‚de‡
_SYS__SELECT_H_


37 
	#_SYS__SELECT_H_


	)

39 
	$£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

40 
fd_£t
 * 
__ª°ri˘
, 
timevÆ
 * __restrict)

41 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

42 
	$__DARWIN_EXTSN_C
(
£À˘
)

44 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


45 
	$__DARWIN_1050
(
£À˘
)

47 
	$__DARWIN_ALIAS_C
(
£À˘
)

	@/usr/include/sys/_structs.h

29 
	~<sys/cdefs.h
>

30 
	~<sys/_ty≥s.h
>

32 #ifde‡
__√ed_uc⁄ãxt_t


33 #i‚de‡
__√ed_°ru˘_uc⁄ãxt


34 
	#__√ed_°ru˘_uc⁄ãxt


	)

38 #ifde‡
__√ed_uc⁄ãxt64_t


39 #i‚de‡
__√ed_°ru˘_uc⁄ãxt64


40 
	#__√ed_°ru˘_uc⁄ãxt64


	)

44 #ifde‡
__√ed_°ru˘_uc⁄ãxt


45 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


46 
	#__√ed_°ru˘_mc⁄ãxt


	)

50 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


51 #i‚de‡
__√ed_°ru˘_mc⁄ãxt64


52 
	#__√ed_°ru˘_mc⁄ãxt64


	)

56 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_mc⁄ãxt64
)

57 
	~<machöe/_°ru˘s.h
>

60 #i‡
deföed
(
__√ed_°ack_t
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt64
)

61 #i‚de‡
__√ed_°ru˘_sigÆt°ack


62 
	#__√ed_°ru˘_sigÆt°ack


	)

66 #ifde‡
__√ed_°ru˘_sigÆt°ack


67 #unde‡
__√ed_°ru˘_sigÆt°ack


69 #i‚de‡
_STRUCT_SIGALTSTACK


70 #i‡
__DARWIN_UNIX03


71 
	#_STRUCT_SIGALTSTACK
 
__d¨wö_sigÆt°ack


	)

73 
	#_STRUCT_SIGALTSTACK
 
sigÆt°ack


	)

75 
	g_STRUCT_SIGALTSTACK


77 *
	gss_•
;

78 
__d¨wö_size_t
 
	gss_size
;

79 
	gss_Êags
;

84 #ifde‡
__√ed_°ru˘_time•ec


85 #unde‡
__√ed_°ru˘_time•ec


86 #i‚de‡
_STRUCT_TIMESPEC


87 
	#_STRUCT_TIMESPEC
 
time•ec


	)

88 
	g_STRUCT_TIMESPEC


90 
__d¨wö_time_t
 
	gtv_£c
;

91 
	gtv_n£c
;

96 #ifde‡
__√ed_°ru˘_timevÆ


97 #unde‡
__√ed_°ru˘_timevÆ


98 #i‚de‡
_STRUCT_TIMEVAL


99 
	#_STRUCT_TIMEVAL
 
timevÆ


	)

100 
	g_STRUCT_TIMEVAL


102 
__d¨wö_time_t
 
	gtv_£c
;

103 
__d¨wö_su£c⁄ds_t
 
	gtv_u£c
;

108 #ifde‡
__√ed_°ru˘_timevÆ32


109 #unde‡
__√ed_°ru˘_timevÆ32


110 #i‚de‡
_STRUCT_TIMEVAL32


111 
	#_STRUCT_TIMEVAL32
 
timevÆ32


	)

112 
	g_STRUCT_TIMEVAL32


114 
__öt32_t
 
	gtv_£c
;

115 
__öt32_t
 
	gtv_u£c
;

120 #ifde‡
__√ed_°ru˘_uc⁄ãxt


121 #unde‡
__√ed_°ru˘_uc⁄ãxt


122 #i‚de‡
_STRUCT_UCONTEXT


123 #i‡
__DARWIN_UNIX03


124 
	#_STRUCT_UCONTEXT
 
__d¨wö_uc⁄ãxt


	)

126 
	#_STRUCT_UCONTEXT
 
uc⁄ãxt


	)

128 
	g_STRUCT_UCONTEXT


130 
	guc_⁄°ack
;

131 
__d¨wö_sig£t_t
 
	guc_sigmask
;

132 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

133 
_STRUCT_UCONTEXT
 *
	guc_lök
;

134 
__d¨wö_size_t
 
	guc_mcsize
;

135 
_STRUCT_MCONTEXT
 *
	guc_mc⁄ãxt
;

136 #ifde‡
_XOPEN_SOURCE


137 
_STRUCT_MCONTEXT
 
	g__mc⁄ãxt_d©a
;

143 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


144 #unde‡
__√ed_°ru˘_uc⁄ãxt64


145 #i‚de‡
_STRUCT_UCONTEXT64


146 #i‡
__DARWIN_UNIX03


147 
	#_STRUCT_UCONTEXT64
 
__d¨wö_uc⁄ãxt64


	)

149 
	#_STRUCT_UCONTEXT64
 
uc⁄ãxt64


	)

151 
	g_STRUCT_UCONTEXT64


153 
	guc_⁄°ack
;

154 
__d¨wö_sig£t_t
 
	guc_sigmask
;

155 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

156 
_STRUCT_UCONTEXT64
 *
	guc_lök
;

157 
__d¨wö_size_t
 
	guc_mcsize
;

158 
_STRUCT_MCONTEXT64
 *
	guc_mc⁄ãxt64
;

164 #ifde‡
__√ed_fd_£t


165 #unde‡
__√ed_fd_£t


166 #i‚de‡
_FD_SET


167 
	#_FD_SET


	)

174 #ifde‡
FD_SETSIZE


175 
	#__DARWIN_FD_SETSIZE
 
FD_SETSIZE


	)

177 
	#__DARWIN_FD_SETSIZE
 1024

	)

179 
	#__DARWIN_NBBY
 8

	)

180 
	#__DARWIN_NFDBITS
 ((
__öt32_t
Ë* 
__DARWIN_NBBY
Ë

	)

181 
	#__DARWIN_howm™y
(
x
, 
y
Ë((((xË% (y)Ë=0Ë? ((xË/ (y)Ë: (((xË/ (y)Ë+ 1)Ë

	)

183 
__BEGIN_DECLS


184 
	sfd_£t
 {

185 
__öt32_t
 
	mfds_bôs
[
__DARWIN_howm™y
(
__DARWIN_FD_SETSIZE
, 
__DARWIN_NFDBITS
)];

186 } 
	tfd_£t
;

187 
__END_DECLS


190 
__ölöe
 

191 
	$__d¨wö_fd_is£t
(
_n
, c⁄° 
fd_£t
 *
_p
)

193  (
_p
->
fds_bôs
[
_n
/
__DARWIN_NFDBITS
] & (1<<(_n % __DARWIN_NFDBITS)));

194 
	}
}

196 
	#__DARWIN_FD_SET
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[__fd/
__DARWIN_NFDBITS
] |(1<<(__fd % __DARWIN_NFDBITS))); } 0)

	)

197 
	#__DARWIN_FD_CLR
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[__fd/
__DARWIN_NFDBITS
] &~(1<<(__fd % __DARWIN_NFDBITS))); } 0)

	)

198 
	#__DARWIN_FD_ISSET
(
n
, 
p
Ë
	`__d¨wö_fd_is£t
(“), (p))

	)

200 #i‡
__GNUC__
 > 3 || __GNUC__ =3 && 
__GNUC_MINOR__
 >= 3

205 
	#__DARWIN_FD_ZERO
(
p
Ë
	`__buûtö_bzîo
’, (*’)))

	)

207 
	#__DARWIN_FD_ZERO
(
p
Ë
	`bzîo
’, (*’)))

	)

210 
	#__DARWIN_FD_COPY
(
f
, 
t
Ë
	`bc›y
(f,Å, (*(f)))

	)

214 #ifde‡
__√ed_°ack_t


215 #unde‡
__√ed_°ack_t


216 #i‚de‡
_STACK_T


217 
	#_STACK_T


	)

218 
_STRUCT_SIGALTSTACK
 
	t°ack_t
;

222 #ifde‡
__√ed_uc⁄ãxt_t


223 #unde‡
__√ed_uc⁄ãxt_t


225 #i‚de‡
_UCONTEXT_T


226 
	#_UCONTEXT_T


	)

227 
_STRUCT_UCONTEXT
 
	tuc⁄ãxt_t
;

231 #ifde‡
__√ed_uc⁄ãxt64_t


232 #unde‡
__√ed_uc⁄ãxt64_t


233 #i‚de‡
_UCONTEXT64_T


234 
	#_UCONTEXT64_T


	)

235 
_STRUCT_UCONTEXT64
 
	tuc⁄ãxt64_t
;

	@/usr/include/sys/_types.h

29 #i‚de‡
_SYS__TYPES_H_


30 
	#_SYS__TYPES_H_


	)

32 
	~<sys/cdefs.h
>

33 
	~<machöe/_ty≥s.h
>

36 #i‡
deföed
(
__LP64__
)

37 
	#__PTHREAD_SIZE__
 1168

	)

38 
	#__PTHREAD_ATTR_SIZE__
 56

	)

39 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

40 
	#__PTHREAD_MUTEX_SIZE__
 56

	)

41 
	#__PTHREAD_CONDATTR_SIZE__
 8

	)

42 
	#__PTHREAD_COND_SIZE__
 40

	)

43 
	#__PTHREAD_ONCE_SIZE__
 8

	)

44 
	#__PTHREAD_RWLOCK_SIZE__
 192

	)

45 
	#__PTHREAD_RWLOCKATTR_SIZE__
 16

	)

47 
	#__PTHREAD_SIZE__
 596

	)

48 
	#__PTHREAD_ATTR_SIZE__
 36

	)

49 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

50 
	#__PTHREAD_MUTEX_SIZE__
 40

	)

51 
	#__PTHREAD_CONDATTR_SIZE__
 4

	)

52 
	#__PTHREAD_COND_SIZE__
 24

	)

53 
	#__PTHREAD_ONCE_SIZE__
 4

	)

54 
	#__PTHREAD_RWLOCK_SIZE__
 124

	)

55 
	#__PTHREAD_RWLOCKATTR_SIZE__
 12

	)

58 
	s__d¨wö_±hªad_h™dÀr_ªc


60 (*
	m__routöe
)(*);

61 *
	m__¨g
;

62 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__√xt
;

64 
	s_›aque_±hªad_©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ATTR_SIZE__
]; };

65 
	s_›aque_±hªad_c⁄d_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_COND_SIZE__
]; };

66 
	s_›aque_±hªad_c⁄d©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_CONDATTR_SIZE__
]; };

67 
	s_›aque_±hªad_muãx_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEX_SIZE__
]; };

68 
	s_›aque_±hªad_muãx©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEXATTR_SIZE__
]; };

69 
	s_›aque_±hªad_⁄˚_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ONCE_SIZE__
]; };

70 
	s_›aque_±hªad_rwlock_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCK_SIZE__
]; };

71 
	s_›aque_±hªad_rwlock©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCKATTR_SIZE__
]; };

72 
	s_›aque_±hªad_t
 { 
	m__sig
; 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__˛ónup_°ack
; 
	m__›aque
[
__PTHREAD_SIZE__
]; };

80 #ifde‡
__˝lu•lus


81 #ifde‡
__GNUG__


82 
	#__DARWIN_NULL
 
__nuŒ


	)

84 #ifde‡
__LP64__


85 
	#__DARWIN_NULL
 (0L)

	)

87 
	#__DARWIN_NULL
 0

	)

91 
	#__DARWIN_NULL
 ((*)0)

	)

94 
__öt64_t
 
	t__d¨wö_blk˙t_t
;

95 
__öt32_t
 
	t__d¨wö_blksize_t
;

96 
__öt32_t
 
	t__d¨wö_dev_t
;

97 
	t__d¨wö_fsblk˙t_t
;

98 
	t__d¨wö_fsfû˙t_t
;

99 
__uöt32_t
 
	t__d¨wö_gid_t
;

100 
__uöt32_t
 
	t__d¨wö_id_t
;

101 
__uöt64_t
 
	t__d¨wö_öo64_t
;

102 #i‡
__DARWIN_64_BIT_INO_T


103 
__d¨wö_öo64_t
 
	t__d¨wö_öo_t
;

105 
__uöt32_t
 
	t__d¨wö_öo_t
;

107 
__d¨wö_«tuøl_t
 
	t__d¨wö_mach_p‹t_«me_t
;

108 
__d¨wö_mach_p‹t_«me_t
 
	t__d¨wö_mach_p‹t_t
;

109 
__uöt16_t
 
	t__d¨wö_mode_t
;

110 
__öt64_t
 
	t__d¨wö_off_t
;

111 
__öt32_t
 
	t__d¨wö_pid_t
;

112 
_›aque_±hªad_©å_t


113 
	t__d¨wö_±hªad_©å_t
;

114 
_›aque_±hªad_c⁄d_t


115 
	t__d¨wö_±hªad_c⁄d_t
;

116 
_›aque_±hªad_c⁄d©å_t


117 
	t__d¨wö_±hªad_c⁄d©å_t
;

118 
	t__d¨wö_±hªad_key_t
;

119 
_›aque_±hªad_muãx_t


120 
	t__d¨wö_±hªad_muãx_t
;

121 
_›aque_±hªad_muãx©å_t


122 
	t__d¨wö_±hªad_muãx©å_t
;

123 
_›aque_±hªad_⁄˚_t


124 
	t__d¨wö_±hªad_⁄˚_t
;

125 
_›aque_±hªad_rwlock_t


126 
	t__d¨wö_±hªad_rwlock_t
;

127 
_›aque_±hªad_rwlock©å_t


128 
	t__d¨wö_±hªad_rwlock©å_t
;

129 
_›aque_±hªad_t


130 *
	t__d¨wö_±hªad_t
;

131 
__uöt32_t
 
	t__d¨wö_sig£t_t
;

132 
__öt32_t
 
	t__d¨wö_su£c⁄ds_t
;

133 
__uöt32_t
 
	t__d¨wö_uid_t
;

134 
__uöt32_t
 
	t__d¨wö_u£c⁄ds_t
;

135 
	t__d¨wö_uuid_t
[16];

136 
	t__d¨wö_uuid_°rög_t
[37];

	@/usr/include/sys/appleapiopts.h

29 #i‚de‡
__SYS_APPLEAPIOPTS_H__


30 
	#__SYS_APPLEAPIOPTS_H__


	)

33 #i‚de‡
__APPLE_API_STANDARD


34 
	#__APPLE_API_STANDARD


	)

37 #i‚de‡
__APPLE_API_STABLE


38 
	#__APPLE_API_STABLE


	)

41 #i‚de‡
__APPLE_API_STRICT_CONFORMANCE


43 #i‚de‡
__APPLE_API_EVOLVING


44 
	#__APPLE_API_EVOLVING


	)

47 #i‚de‡
__APPLE_API_UNSTABLE


48 
	#__APPLE_API_UNSTABLE


	)

51 #i‚de‡
__APPLE_API_PRIVATE


52 
	#__APPLE_API_PRIVATE


	)

55 #i‚de‡
__APPLE_API_OBSOLETE


56 
	#__APPLE_API_OBSOLETE


	)

	@/usr/include/sys/cdefs.h

67 #i‚def 
_CDEFS_H_


68 
	#_CDEFS_H_


	)

70 #i‡
deföed
(
__˝lu•lus
)

71 
	#__BEGIN_DECLS
 "C" {

	)

72 
	#__END_DECLS
 }

	)

74 
	#__BEGIN_DECLS


	)

75 
	#__END_DECLS


	)

85 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

86 
	#__P
(
¥Ÿos
Ë¥Ÿo†

	)

87 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

88 
	#__STRING
(
x
Ë#x

	)

90 
	#__c⁄°
 c⁄°

	)

91 
	#__sig√d
 sig√d

	)

92 
	#__vﬁ©ûe
 vﬁ©ûe

	)

93 #i‡
deföed
(
__˝lu•lus
)

94 
	#__ölöe
 
ölöe


	)

96 #i‚de‡
__GNUC__


97 
	#__ölöe


	)

102 
	#__P
(
¥Ÿos
Ë(Ë

	)

103 
	#__CONCAT
(
x
,
y
Ëx 
	)
y

104 
	#__STRING
(
x
Ë"x"

	)

106 #i‚de‡
__GNUC__


107 
	#__c⁄°


	)

108 
	#__ölöe


	)

109 
	#__sig√d


	)

110 
	#__vﬁ©ûe


	)

121 #i‚def 
NO_ANSI_KEYWORDS


122 c⁄° 
__c⁄°


	)

123 
	#ölöe
 
__ölöe


	)

124 sig√d 
__sig√d


	)

125 vﬁ©ûê
__vﬁ©ûe


	)

137 #i‡
deföed
(
__MWERKS__
) && (__MWERKS__ > 0x2400)

139 #ñi‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 5

140 
	#__dód2
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

141 
	#__puª2
 
	`__©åibuã__
((
__c⁄°__
))

	)

142 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 >= 5 && __GNUC_MINOR__ < 7

143 
	#__unu£d


	)

145 
	#__unu£d
 
	`__©åibuã__
((
__unu£d__
))

	)

148 
	#__©åibuã__
(
x
Ë

	)

149 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

151 
	#__dód
 
__vﬁ©ûe


	)

152 
	#__puª
 
__c⁄°


	)

157 #i‚de‡
__dód


158 
	#__dód


	)

159 
	#__puª


	)

161 #i‚de‡
__dód2


162 
	#__dód2


	)

163 
	#__puª2


	)

164 
	#__unu£d


	)

167 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 4

168 
	#__u£d
 
	`__©åibuã__
((
__u£d__
))

	)

170 
	#__u£d


	)

179 #i‡!(
__GNUC__
 =2 && 
__GNUC_MINOR__
 == 95)

180 #i‡
__STDC_VERSION__
 < 199901

181 
	#__ª°ri˘


	)

183 
	#__ª°ri˘
 
ª°ri˘


	)

195 #i‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 7

196 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
) \

197 
	`__©åibuã__
((
	`__f‹m©__
 (
__¥ötf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

198 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
) \

199 
	`__©åibuã__
((
	`__f‹m©__
 (
__sˇnf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

201 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
)

	)

202 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
)

	)

205 
	#__IDSTRING
(
«me
,
°rög
Ëc⁄° «me[] 
__u£d
 = 
	)
string

207 #i‚de‡
__COPYRIGHT


208 
	#__COPYRIGHT
(
s
Ë
	`__IDSTRING
(
c›yright
,s)

	)

211 #i‚de‡
__RCSID


212 
	#__RCSID
(
s
Ë
	`__IDSTRING
(
rcsid
,s)

	)

215 #i‚de‡
__SCCSID


216 
	#__SCCSID
(
s
Ë
	`__IDSTRING
(
sccsid
,s)

	)

219 #i‚de‡
__PROJECT_VERSION


220 
	#__PROJECT_VERSION
(
s
Ë
	`__IDSTRING
(
¥oje˘_vîsi⁄
,s)

	)

262 
	#__DARWIN_ONLY_64_BIT_INO_T
 0

	)

264 
	#__DARWIN_ONLY_VERS_1050
 0

	)

284 #i‡!
deföed
(
__DARWIN_ONLY_UNIX_CONFORMANCE
)

285 #i‡
deföed
(
__LP64__
)

286 
	#__DARWIN_ONLY_UNIX_CONFORMANCE
 1

	)

288 
	#__DARWIN_ONLY_UNIX_CONFORMANCE
 0

	)

292 #i‡!
deföed
(
__DARWIN_UNIX03
)

293 #i‡ 
__DARWIN_ONLY_UNIX_CONFORMANCE


294 #i‡
deföed
(
_NONSTD_SOURCE
)

297 
	#__DARWIN_UNIX03
 1

	)

298 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1040)

299 
	#__DARWIN_UNIX03
 0

	)

300 #ñi‡
deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_XOPEN_SOURCE
Ë|| deföed(
_POSIX_C_SOURCE
)

301 #i‡
deföed
(
_NONSTD_SOURCE
)

304 
	#__DARWIN_UNIX03
 1

	)

305 #ñi‡
deföed
(
_NONSTD_SOURCE
)

306 
	#__DARWIN_UNIX03
 0

	)

308 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

309 
	#__DARWIN_UNIX03
 0

	)

311 
	#__DARWIN_UNIX03
 1

	)

316 #i‡!
deföed
(
__DARWIN_64_BIT_INO_T
)

317 #i‡ 
deföed
(
_DARWIN_USE_64_BIT_INODE
)

318 #i‡
deföed
(
_DARWIN_NO_64_BIT_INODE
)

321 
	#__DARWIN_64_BIT_INO_T
 1

	)

322 #ñi‡
deföed
(
_DARWIN_NO_64_BIT_INODE
)

323 #i‡
__DARWIN_ONLY_64_BIT_INO_T


326 
	#__DARWIN_64_BIT_INO_T
 0

	)

328 #i‡
__DARWIN_ONLY_64_BIT_INO_T


329 
	#__DARWIN_64_BIT_INO_T
 1

	)

330 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
Ë&& ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0Ë< 1060Ë|| 
__DARWIN_UNIX03
 == 0

331 
	#__DARWIN_64_BIT_INO_T
 0

	)

333 
	#__DARWIN_64_BIT_INO_T
 1

	)

338 #i‡!
deföed
(
__DARWIN_VERS_1050
)

339 #i‡ 
__DARWIN_ONLY_VERS_1050


340 
	#__DARWIN_VERS_1050
 1

	)

341 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
Ë&& ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0Ë< 1050Ë|| 
__DARWIN_UNIX03
 == 0

342 
	#__DARWIN_VERS_1050
 0

	)

344 
	#__DARWIN_VERS_1050
 1

	)

348 #i‡!
deföed
(
__DARWIN_NON_CANCELABLE
)

349 
	#__DARWIN_NON_CANCELABLE
 0

	)

355 #i‡
__DARWIN_UNIX03


356 #i‡
__DARWIN_ONLY_UNIX_CONFORMANCE


357 
	#__DARWIN_SUF_UNIX03


	)

359 
	#__DARWIN_SUF_UNIX03
 "$UNIX2003"

	)

362 #i‡
__DARWIN_64_BIT_INO_T


363 #i‡
__DARWIN_ONLY_64_BIT_INO_T


364 
	#__DARWIN_SUF_64_BIT_INO_T


	)

366 
	#__DARWIN_SUF_64_BIT_INO_T
 "$INODE64"

	)

369 
	#__DARWIN_SUF_64_BIT_INO_T


	)

372 #i‡
__DARWIN_VERS_1050


373 #i‡
__DARWIN_ONLY_VERS_1050


374 
	#__DARWIN_SUF_1050


	)

376 
	#__DARWIN_SUF_1050
 "$1050"

	)

379 
	#__DARWIN_SUF_1050


	)

382 #i‡
__DARWIN_NON_CANCELABLE


383 
	#__DARWIN_SUF_NON_CANCELABLE
 "$NOCANCEL"

	)

385 
	#__DARWIN_SUF_NON_CANCELABLE


	)

389 
	#__DARWIN_SUF_UNIX03


	)

390 
	#__DARWIN_SUF_64_BIT_INO_T


	)

391 
	#__DARWIN_SUF_NON_CANCELABLE


	)

392 
	#__DARWIN_SUF_1050


	)

395 
	#__DARWIN_SUF_EXTSN
 "$DARWIN_EXTSN"

	)

400 
	#__DARWIN_ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_UNIX03
)

	)

401 
	#__DARWIN_ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

402 
	#__DARWIN_ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

403 
	#__DARWIN_INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
)

	)

405 
	#__DARWIN_1050
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
)

	)

406 
	#__DARWIN_1050ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_UNIX03
)

	)

407 
	#__DARWIN_1050ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

408 
	#__DARWIN_1050ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

409 
	#__DARWIN_1050INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
)

	)

411 
	#__DARWIN_EXTSN
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
)

	)

412 
	#__DARWIN_EXTSN_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
 
__DARWIN_SUF_NON_CANCELABLE
)

	)

417 
	~<sys/_symbﬁ_Æüsög.h
>

419 #i‡
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
)

420 
	#__DARWIN_ALIAS_STARTING
(
_mac
, 
_ùh⁄e
, 
x
Ë
__DARWIN_ALIAS_STARTING_IPHONE_
##
	`_ùh⁄e
(x)

	)

421 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

422 
	#__DARWIN_ALIAS_STARTING
(
_mac
, 
_ùh⁄e
, 
x
Ë
__DARWIN_ALIAS_STARTING_MAC_
##
	`_mac
(x)

	)

424 
	#__DARWIN_ALIAS_STARTING
(
_mac
, 
_ùh⁄e
, 
x
)

	)

449 #i‡
deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 1L

450 #unde‡
_POSIX_C_SOURCE


451 
	#_POSIX_C_SOURCE
 199009L

	)

455 #i‡
deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 2L

456 #unde‡
_POSIX_C_SOURCE


457 
	#_POSIX_C_SOURCE
 199209L

	)

461 #ifde‡
_XOPEN_SOURCE


462 #i‡
_XOPEN_SOURCE
 - 0L >700L && (!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE - 0L < 200809L)

463 #unde‡
_POSIX_C_SOURCE


464 
	#_POSIX_C_SOURCE
 200809L

	)

465 #ñi‡
_XOPEN_SOURCE
 - 0L >600L && (!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE - 0L < 200112L)

466 #unde‡
_POSIX_C_SOURCE


467 
	#_POSIX_C_SOURCE
 200112L

	)

468 #ñi‡
_XOPEN_SOURCE
 - 0L >500L && (!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE - 0L < 199506L)

469 #unde‡
_POSIX_C_SOURCE


470 
	#_POSIX_C_SOURCE
 199506L

	)

478 #i‡
deföed
(
_POSIX_SOURCE
Ë&& !deföed(
_POSIX_C_SOURCE
)

479 
	#_POSIX_C_SOURCE
 198808L

	)

485 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >= 1)))

486 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

487 
	#__u«vaûabÀ
 
	`__©åibuã__
((
u«vaûabÀ
))

	)

489 
	#__dïªˇãd


	)

490 
	#__u«vaûabÀ


	)

494 
	~<sys/_posix_avaûabûôy.h
>

496 
	#__POSIX_C_DEPRECATED
(
vî
Ë
___POSIX_C_DEPRECATED_STARTING_
##
	)
ver

504 
	#__DARWIN_C_ANSI
 010000L

	)

505 
	#__DARWIN_C_FULL
 900000L

	)

507 #i‡ 
deföed
(
_ANSI_SOURCE
)

508 
	#__DARWIN_C_LEVEL
 
__DARWIN_C_ANSI


	)

509 #ñi‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
Ë&& !deföed(
_NONSTD_SOURCE
)

510 
	#__DARWIN_C_LEVEL
 
_POSIX_C_SOURCE


	)

512 
	#__DARWIN_C_LEVEL
 
__DARWIN_C_FULL


	)

521 
	#__DARWIN_NO_LONG_LONG
 (
	`deföed
(
__STRICT_ANSI__
) \

522 && (
__STDC_VERSION__
-0 < 199901L) \

523 && !
	`deföed
(
__GNUG__
))

	)

531 #i‡
deföed
(
__¨m__
)

532 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

533 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

534 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 1

	)

535 #ñi‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

536 
	#__DARWIN_LDBL_COMPAT
(
x
Ë

	)

537 
	#__DARWIN_LDBL_COMPAT2
(
x
Ë

	)

538 
	#__DARWIN_LONG_DOUBLE_IS_DOUBLE
 0

	)

540 #îr‹ 
Unknown
 
¨chôe˘uª


551 #i‡
__DARWIN_64_BIT_INO_T


552 
	#_DARWIN_FEATURE_64_BIT_INODE
 1

	)

559 #i‡
__DARWIN_LONG_DOUBLE_IS_DOUBLE


560 
	#_DARWIN_FEATURE_LONG_DOUBLE_IS_DOUBLE
 1

	)

569 #i‡
__DARWIN_ONLY_64_BIT_INO_T


570 
	#_DARWIN_FEATURE_ONLY_64_BIT_INODE
 1

	)

577 #i‡
__DARWIN_ONLY_VERS_1050


578 
	#_DARWIN_FEATURE_ONLY_VERS_1050
 1

	)

585 #i‡
__DARWIN_ONLY_UNIX_CONFORMANCE


586 
	#_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE
 1

	)

593 #i‡
__DARWIN_UNIX03


594 
	#_DARWIN_FEATURE_UNIX_CONFORMANCE
 3

	)

603 #i‚de‡
__CAST_AWAY_QUALIFIER


604 
	#__CAST_AWAY_QUALIFIER
(
v¨übÀ
, 
quÆifõr
, 
ty≥
Ë—y≥Ë()(v¨übÀ)

	)

	@/usr/include/sys/errno.h

69 #i‚def 
_SYS_ERRNO_H_


70 
	#_SYS_ERRNO_H_


	)

72 
	~<sys/cdefs.h
>

74 
__BEGIN_DECLS


75 * 
__îr‹
();

76 
	#î∫o
 (*
	`__îr‹
())

	)

77 
	g__END_DECLS


83 
	#EPERM
 1

	)

84 
	#ENOENT
 2

	)

85 
	#ESRCH
 3

	)

86 
	#EINTR
 4

	)

87 
	#EIO
 5

	)

88 
	#ENXIO
 6

	)

89 
	#E2BIG
 7

	)

90 
	#ENOEXEC
 8

	)

91 
	#EBADF
 9

	)

92 
	#ECHILD
 10

	)

93 
	#EDEADLK
 11

	)

95 
	#ENOMEM
 12

	)

96 
	#EACCES
 13

	)

97 
	#EFAULT
 14

	)

98 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


99 
	#ENOTBLK
 15

	)

101 
	#EBUSY
 16

	)

102 
	#EEXIST
 17

	)

103 
	#EXDEV
 18

	)

104 
	#ENODEV
 19

	)

105 
	#ENOTDIR
 20

	)

106 
	#EISDIR
 21

	)

107 
	#EINVAL
 22

	)

108 
	#ENFILE
 23

	)

109 
	#EMFILE
 24

	)

110 
	#ENOTTY
 25

	)

111 
	#ETXTBSY
 26

	)

112 
	#EFBIG
 27

	)

113 
	#ENOSPC
 28

	)

114 
	#ESPIPE
 29

	)

115 
	#EROFS
 30

	)

116 
	#EMLINK
 31

	)

117 
	#EPIPE
 32

	)

120 
	#EDOM
 33

	)

121 
	#ERANGE
 34

	)

124 
	#EAGAIN
 35

	)

125 
	#EWOULDBLOCK
 
EAGAIN


	)

126 
	#EINPROGRESS
 36

	)

127 
	#EALREADY
 37

	)

130 
	#ENOTSOCK
 38

	)

131 
	#EDESTADDRREQ
 39

	)

132 
	#EMSGSIZE
 40

	)

133 
	#EPROTOTYPE
 41

	)

134 
	#ENOPROTOOPT
 42

	)

135 
	#EPROTONOSUPPORT
 43

	)

136 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


137 
	#ESOCKTNOSUPPORT
 44

	)

139 
	#ENOTSUP
 45

	)

140 #i‡!
__DARWIN_UNIX03
 && !
deföed
(
KERNEL
)

149 
	#EOPNOTSUPP
 
ENOTSUP


	)

152 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


153 
	#EPFNOSUPPORT
 46

	)

155 
	#EAFNOSUPPORT
 47

	)

156 
	#EADDRINUSE
 48

	)

157 
	#EADDRNOTAVAIL
 49

	)

160 
	#ENETDOWN
 50

	)

161 
	#ENETUNREACH
 51

	)

162 
	#ENETRESET
 52

	)

163 
	#ECONNABORTED
 53

	)

164 
	#ECONNRESET
 54

	)

165 
	#ENOBUFS
 55

	)

166 
	#EISCONN
 56

	)

167 
	#ENOTCONN
 57

	)

168 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


169 
	#ESHUTDOWN
 58

	)

170 
	#ETOOMANYREFS
 59

	)

172 
	#ETIMEDOUT
 60

	)

173 
	#ECONNREFUSED
 61

	)

175 
	#ELOOP
 62

	)

176 
	#ENAMETOOLONG
 63

	)

179 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


180 
	#EHOSTDOWN
 64

	)

182 
	#EHOSTUNREACH
 65

	)

183 
	#ENOTEMPTY
 66

	)

186 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


187 
	#EPROCLIM
 67

	)

188 
	#EUSERS
 68

	)

190 
	#EDQUOT
 69

	)

193 
	#ESTALE
 70

	)

194 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


195 
	#EREMOTE
 71

	)

196 
	#EBADRPC
 72

	)

197 
	#ERPCMISMATCH
 73

	)

198 
	#EPROGUNAVAIL
 74

	)

199 
	#EPROGMISMATCH
 75

	)

200 
	#EPROCUNAVAIL
 76

	)

203 
	#ENOLCK
 77

	)

204 
	#ENOSYS
 78

	)

206 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


207 
	#EFTYPE
 79

	)

208 
	#EAUTH
 80

	)

209 
	#ENEEDAUTH
 81

	)

212 
	#EPWROFF
 82

	)

213 
	#EDEVERR
 83

	)

216 
	#EOVERFLOW
 84

	)

219 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


220 
	#EBADEXEC
 85

	)

221 
	#EBADARCH
 86

	)

222 
	#ESHLIBVERS
 87

	)

223 
	#EBADMACHO
 88

	)

226 
	#ECANCELED
 89

	)

228 
	#EIDRM
 90

	)

229 
	#ENOMSG
 91

	)

230 
	#EILSEQ
 92

	)

231 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


232 
	#ENOATTR
 93

	)

235 
	#EBADMSG
 94

	)

236 
	#EMULTIHOP
 95

	)

237 
	#ENODATA
 96

	)

238 
	#ENOLINK
 97

	)

239 
	#ENOSR
 98

	)

240 
	#ENOSTR
 99

	)

241 
	#EPROTO
 100

	)

242 
	#ETIME
 101

	)

244 #i‡
__DARWIN_UNIX03
 || 
deföed
(
KERNEL
)

246 
	#EOPNOTSUPP
 102

	)

249 
	#ENOPOLICY
 103

	)

251 #i‡
__DARWIN_C_LEVEL
 >= 200809L

252 
	#ENOTRECOVERABLE
 104

	)

253 
	#EOWNERDEAD
 105

	)

256 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


257 
	#ELAST
 105

	)

	@/usr/include/sys/select.h

63 #i‚de‡
_SYS_SELECT_H_


64 
	#_SYS_SELECT_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

75 
	#__√ed_fd_£t


	)

76 
	#__√ed_°ru˘_time•ec


	)

77 
	#__√ed_°ru˘_timevÆ


	)

78 
	~<sys/_°ru˘s.h
>

85 #i‚def 
_TIME_T


86 
	#_TIME_T


	)

87 
__d¨wö_time_t
 
	ttime_t
;

90 #i‚de‡
_SUSECONDS_T


91 
	#_SUSECONDS_T


	)

92 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

95 #i‚de‡
_SIGSET_T


96 
	#_SIGSET_T


	)

97 
__d¨wö_sig£t_t
 
	tsig£t_t
;

112 #i‚def 
FD_SETSIZE


113 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

115 #i‚de‡
FD_SET


116 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

118 #i‚de‡
FD_CLR


119 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

121 #i‚de‡
FD_ISSET


122 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

124 #i‚de‡
FD_ZERO


125 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

127 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

128 #i‚de‡
FD_COPY


129 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

134 
	g__BEGIN_DECLS


136 #i‚de‡ 
__MWERKS__


137 
	$p£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

138 
fd_£t
 * 
__ª°ri˘
, c⁄° 
time•ec
 * __restrict,

139 c⁄° 
sig£t_t
 * 
__ª°ri˘
)

140 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

141 
	$__DARWIN_EXTSN_C
(
p£À˘
)

143 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


144 
	$__DARWIN_1050
(
p£À˘
)

146 
	$__DARWIN_ALIAS_C
(
p£À˘
)

152 
	~<sys/_£À˘.h
>

154 
__END_DECLS


	@/usr/include/sys/signal.h

69 #i‚def 
_SYS_SIGNAL_H_


70 
	#_SYS_SIGNAL_H_


	)

72 
	~<sys/cdefs.h
>

73 
	~<sys/≠∂ópi›ts.h
>

75 
	#__DARWIN_NSIG
 32

	)

77 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

78 
	#NSIG
 
__DARWIN_NSIG


	)

81 
	~<machöe/sig«l.h
>

83 
	#SIGHUP
 1

	)

84 
	#SIGINT
 2

	)

85 
	#SIGQUIT
 3

	)

86 
	#SIGILL
 4

	)

87 
	#SIGTRAP
 5

	)

88 
	#SIGABRT
 6

	)

89 #i‡ (
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
))

90 
	#SIGPOLL
 7

	)

92 
	#SIGIOT
 
SIGABRT


	)

93 
	#SIGEMT
 7

	)

95 
	#SIGFPE
 8

	)

96 
	#SIGKILL
 9

	)

97 
	#SIGBUS
 10

	)

98 
	#SIGSEGV
 11

	)

99 
	#SIGSYS
 12

	)

100 
	#SIGPIPE
 13

	)

101 
	#SIGALRM
 14

	)

102 
	#SIGTERM
 15

	)

103 
	#SIGURG
 16

	)

104 
	#SIGSTOP
 17

	)

105 
	#SIGTSTP
 18

	)

106 
	#SIGCONT
 19

	)

107 
	#SIGCHLD
 20

	)

108 
	#SIGTTIN
 21

	)

109 
	#SIGTTOU
 22

	)

110 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

111 
	#SIGIO
 23

	)

113 
	#SIGXCPU
 24

	)

114 
	#SIGXFSZ
 25

	)

115 
	#SIGVTALRM
 26

	)

116 
	#SIGPROF
 27

	)

117 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

118 
	#SIGWINCH
 28

	)

119 
	#SIGINFO
 29

	)

121 
	#SIGUSR1
 30

	)

122 
	#SIGUSR2
 31

	)

124 #i‡
deföed
(
_ANSI_SOURCE
Ë|| 
__DARWIN_UNIX03
 || deföed(
__˝lu•lus
)

130 
	#SIG_DFL
 ((*)())0

	)

131 
	#SIG_IGN
 ((*)())1

	)

132 
	#SIG_HOLD
 ((*)())5

	)

133 
	#SIG_ERR
 (((*)())-1)

	)

136 
	#SIG_DFL
 ((*)–))0

	)

137 
	#SIG_IGN
 ((*)–))1

	)

138 
	#SIG_HOLD
 ((*)–))5

	)

139 
	#SIG_ERR
 (((*)–))-1)

	)

142 #i‚de‡
_ANSI_SOURCE


143 
	~<sys/_ty≥s.h
>

145 
	#__√ed_mc⁄ãxt_t


	)

146 
	#__√ed_°ack_t


	)

147 
	#__√ed_uc⁄ãxt_t


	)

148 
	~<sys/_°ru˘s.h
>

150 #i‚de‡
_PID_T


151 
	#_PID_T


	)

152 
__d¨wö_pid_t
 
	tpid_t
;

155 #i‚de‡
_PTHREAD_ATTR_T


156 
	#_PTHREAD_ATTR_T


	)

157 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

160 #i‚de‡
_SIGSET_T


161 
	#_SIGSET_T


	)

162 
__d¨wö_sig£t_t
 
	tsig£t_t
;

165 #i‚def 
_SIZE_T


166 
	#_SIZE_T


	)

167 
__d¨wö_size_t
 
	tsize_t
;

170 #i‚de‡
_UID_T


171 
	#_UID_T


	)

172 
__d¨wö_uid_t
 
	tuid_t
;

175 
	usigvÆ
 {

177 
	msivÆ_öt
;

178 *
	msivÆ_±r
;

181 
	#SIGEV_NONE
 0

	)

182 
	#SIGEV_SIGNAL
 1

	)

183 
	#SIGEV_THREAD
 3

	)

185 
	ssigevít
 {

186 
	msigev_nŸify
;

187 
	msigev_signo
;

188 
sigvÆ
 
	msigev_vÆue
;

189 (*
	msigev_nŸify_fun˘i⁄
)(
	msigvÆ
);

190 
±hªad_©å_t
 *
	msigev_nŸify_©åibuãs
;

194 
	s__sigöfo
 {

195 
	msi_signo
;

196 
	msi_î∫o
;

197 
	msi_code
;

198 
pid_t
 
	msi_pid
;

199 
uid_t
 
	msi_uid
;

200 
	msi_°©us
;

201 *
	msi_addr
;

202 
sigvÆ
 
	msi_vÆue
;

203 
	msi_b™d
;

204 
	m__∑d
[7];

205 } 
	tsigöfo_t
;

222 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

223 
	#ILL_NOOP
 0

	)

225 
	#ILL_ILLOPC
 1

	)

226 
	#ILL_ILLTRP
 2

	)

227 
	#ILL_PRVOPC
 3

	)

228 
	#ILL_ILLOPN
 4

	)

229 
	#ILL_ILLADR
 5

	)

230 
	#ILL_PRVREG
 6

	)

231 
	#ILL_COPROC
 7

	)

232 
	#ILL_BADSTK
 8

	)

235 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

236 
	#FPE_NOOP
 0

	)

238 
	#FPE_FLTDIV
 1

	)

239 
	#FPE_FLTOVF
 2

	)

240 
	#FPE_FLTUND
 3

	)

241 
	#FPE_FLTRES
 4

	)

242 
	#FPE_FLTINV
 5

	)

243 
	#FPE_FLTSUB
 6

	)

244 
	#FPE_INTDIV
 7

	)

245 
	#FPE_INTOVF
 8

	)

248 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

249 
	#SEGV_NOOP
 0

	)

251 
	#SEGV_MAPERR
 1

	)

252 
	#SEGV_ACCERR
 2

	)

255 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

256 
	#BUS_NOOP
 0

	)

258 
	#BUS_ADRALN
 1

	)

259 
	#BUS_ADRERR
 2

	)

260 
	#BUS_OBJERR
 3

	)

263 
	#TRAP_BRKPT
 1

	)

264 
	#TRAP_TRACE
 2

	)

267 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

268 
	#CLD_NOOP
 0

	)

270 
	#CLD_EXITED
 1

	)

271 
	#CLD_KILLED
 2

	)

272 
	#CLD_DUMPED
 3

	)

273 
	#CLD_TRAPPED
 4

	)

274 
	#CLD_STOPPED
 5

	)

275 
	#CLD_CONTINUED
 6

	)

278 
	#POLL_IN
 1

	)

279 
	#POLL_OUT
 2

	)

280 
	#POLL_MSG
 3

	)

281 
	#POLL_ERR
 4

	)

282 
	#POLL_PRI
 5

	)

283 
	#POLL_HUP
 6

	)

286 
	u__siga˘i⁄_u
 {

287 (*
	m__ß_h™dÀr
)();

288 (*
	m__ß_siga˘i⁄
)(, 
	m__sigöfo
 *,

293 
	s__siga˘i⁄
 {

294 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

295 (*
	mß_åamp
)(*, , , 
	msigöfo_t
 *, *);

296 
sig£t_t
 
	mß_mask
;

297 
	mß_Êags
;

303 
	ssiga˘i⁄
 {

304 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

305 
sig£t_t
 
	mß_mask
;

306 
	mß_Êags
;

312 
	#ß_h™dÀr
 
__siga˘i⁄_u
.
__ß_h™dÀr


	)

313 
	#ß_siga˘i⁄
 
__siga˘i⁄_u
.
__ß_siga˘i⁄


	)

315 
	#SA_ONSTACK
 0x0001

	)

316 
	#SA_RESTART
 0x0002

	)

317 
	#SA_RESETHAND
 0x0004

	)

318 
	#SA_NOCLDSTOP
 0x0008

	)

319 
	#SA_NODEFER
 0x0010

	)

320 
	#SA_NOCLDWAIT
 0x0020

	)

321 
	#SA_SIGINFO
 0x0040

	)

322 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

323 
	#SA_USERTRAMP
 0x0100

	)

325 
	#SA_64REGSET
 0x0200

	)

331 
	#SA_USERSPACE_MASK
 (
SA_ONSTACK
 | 
SA_RESTART
 | 
SA_RESETHAND
 | 
SA_NOCLDSTOP
 | 
SA_NODEFER
 | 
SA_NOCLDWAIT
 | 
SA_SIGINFO
)

	)

336 
	#SIG_BLOCK
 1

	)

337 
	#SIG_UNBLOCK
 2

	)

338 
	#SIG_SETMASK
 3

	)

341 
	#SI_USER
 0x10001

	)

342 
	#SI_QUEUE
 0x10002

	)

343 
	#SI_TIMER
 0x10003

	)

344 
	#SI_ASYNCIO
 0x10004

	)

345 
	#SI_MESGQ
 0x10005

	)

347 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

348 (*
	tsig_t
)();

355 
	#SS_ONSTACK
 0x0001

	)

356 
	#SS_DISABLE
 0x0004

	)

357 
	#MINSIGSTKSZ
 32768

	)

358 
	#SIGSTKSZ
 131072

	)

360 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

365 
	ssigvec
 {

366 (*
sv_h™dÀr
)();

367 
sv_mask
;

368 
sv_Êags
;

371 
	#SV_ONSTACK
 
SA_ONSTACK


	)

372 
	#SV_INTERRUPT
 
SA_RESTART


	)

373 
	#SV_RESETHAND
 
SA_RESETHAND


	)

374 
	#SV_NODEFER
 
SA_NODEFER


	)

375 
	#SV_NOCLDSTOP
 
SA_NOCLDSTOP


	)

376 
	#SV_SIGINFO
 
SA_SIGINFO


	)

378 
	#sv_⁄°ack
 
sv_Êags


	)

384 
	ssig°ack
 {

385 *
ss_•
;

386 
ss_⁄°ack
;

389 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

394 
	#sigmask
(
m
Ë(1 << ((m)-1))

	)

397 
	#BADSIG
 
SIG_ERR


	)

406 
__BEGIN_DECLS


407 (*
	`sig«l
(, (*)()))();

408 
__END_DECLS


	@/usr/include/sys/types.h

69 #i‚de‡
_SYS_TYPES_H_


70 
	#_SYS_TYPES_H_


	)

72 
	~<sys/≠∂ópi›ts.h
>

74 #i‚de‡
__ASSEMBLER__


75 
	~<sys/cdefs.h
>

78 
	~<machöe/ty≥s.h
>

79 
	~<sys/_ty≥s.h
>

81 
	~<machöe/ídün.h
>

83 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

84 
	tu_ch¨
;

85 
	tu_sh‹t
;

86 
	tu_öt
;

87 #i‚de‡
_U_LONG


88 
	tu_l⁄g
;

89 
	#_U_LONG


	)

91 
	tush‹t
;

92 
	tuöt
;

95 
u_öt64_t
 
	tu_quad_t
;

96 
öt64_t
 
	tquad_t
;

97 
quad_t
 * 
	tqaddr_t
;

99 * 
	tˇddr_t
;

100 
öt32_t
 
	tdaddr_t
;

102 #i‚de‡
_DEV_T


103 
__d¨wö_dev_t
 
	tdev_t
;

104 
	#_DEV_T


	)

107 
u_öt32_t
 
	tfix±_t
;

109 #i‚de‡
_BLKCNT_T


110 
__d¨wö_blk˙t_t
 
	tblk˙t_t
;

111 
	#_BLKCNT_T


	)

114 #i‚de‡
_BLKSIZE_T


115 
__d¨wö_blksize_t
 
	tblksize_t
;

116 
	#_BLKSIZE_T


	)

119 #i‚de‡
_GID_T


120 
__d¨wö_gid_t
 
	tgid_t
;

121 
	#_GID_T


	)

124 #i‚de‡
_IN_ADDR_T


125 
	#_IN_ADDR_T


	)

126 
__uöt32_t
 
	tö_addr_t
;

129 #i‚de‡
_IN_PORT_T


130 
	#_IN_PORT_T


	)

131 
__uöt16_t
 
	tö_p‹t_t
;

134 #i‚def 
_INO_T


135 
__d¨wö_öo_t
 
	töo_t
;

136 
	#_INO_T


	)

139 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

140 #i‚def 
_INO64_T


141 
__d¨wö_öo64_t
 
	töo64_t
;

142 
	#_INO64_T


	)

146 #i‚de‡
_KEY_T


147 
	#_KEY_T


	)

148 
__öt32_t
 
	tkey_t
;

151 #i‚def 
_MODE_T


152 
__d¨wö_mode_t
 
	tmode_t
;

153 
	#_MODE_T


	)

156 #i‚de‡
_NLINK_T


157 
__uöt16_t
 
	t∆ök_t
;

158 
	#_NLINK_T


	)

161 #i‚de‡
_ID_T


162 
	#_ID_T


	)

163 
__d¨wö_id_t
 
	tid_t
;

166 #i‚de‡
_PID_T


167 
__d¨wö_pid_t
 
	tpid_t
;

168 
	#_PID_T


	)

171 #i‚de‡
_OFF_T


172 
__d¨wö_off_t
 
	toff_t
;

173 
	#_OFF_T


	)

176 
öt32_t
 
	t£gsz_t
;

177 
öt32_t
 
	tswblk_t
;

179 #i‚de‡
_UID_T


180 
__d¨wö_uid_t
 
	tuid_t
;

181 
	#_UID_T


	)

184 #i‚de‡
_ID_T


185 
__d¨wö_id_t
 
	tid_t
;

186 
	#_ID_T


	)

189 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

191 #i‡
deföed
(
__˝lu•lus
)

197 
ölöe
 
__öt32_t
 
	$maj‹
(
__uöt32_t
 
_x
)

199  (
__öt32_t
)(((
__uöt32_t
)
_x
 >> 24) & 0xff);

200 
	}
}

202 
ölöe
 
__öt32_t
 
	$mö‹
(
__uöt32_t
 
_x
)

204  (
__öt32_t
)((
_x
) & 0xffffff);

205 
	}
}

207 
ölöe
 
dev_t
 
	$makedev
(
__uöt32_t
 
_maj‹
, __uöt32_à
_mö‹
)

209  (
dev_t
)(((
_maj‹
Ë<< 24Ë| (
_mö‹
));

210 
	}
}

214 
	#maj‹
(
x
Ë((
öt32_t
)(((
u_öt32_t
)(xË>> 24Ë& 0xff))

	)

215 
	#mö‹
(
x
Ë((
öt32_t
)((xË& 0xffffff))

	)

216 
	#makedev
(
x
,
y
Ë((
dev_t
)(((xË<< 24Ë| (y)))

	)

221 #i‚def 
_CLOCK_T


222 
	#_CLOCK_T


	)

223 
__d¨wö_˛ock_t
 
	t˛ock_t
;

226 #i‚de‡
_SIZE_T


227 
	#_SIZE_T


	)

230 
__d¨wö_size_t
 
	tsize_t
;

233 #i‚def 
_SSIZE_T


234 
	#_SSIZE_T


	)

235 
__d¨wö_ssize_t
 
	tssize_t
;

238 #i‚def 
_TIME_T


239 
	#_TIME_T


	)

240 
__d¨wö_time_t
 
	ttime_t
;

243 #i‚de‡
_USECONDS_T


244 
	#_USECONDS_T


	)

245 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

248 #i‚de‡
_SUSECONDS_T


249 
	#_SUSECONDS_T


	)

250 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

253 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

259 
	#__√ed_fd_£t


	)

260 
	~<sys/_°ru˘s.h
>

262 
	#NBBY
 
__DARWIN_NBBY


	)

263 
	#NFDBITS
 
__DARWIN_NFDBITS


	)

264 
	#howm™y
(
x
, 
y
Ë
	`__DARWIN_howm™y
(x, yË

	)

265 
__öt32_t
 
	tfd_mask
;

273 #i‚def 
FD_SETSIZE


274 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

276 #i‚de‡
FD_SET


277 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

279 #i‚de‡
FD_CLR


280 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

282 #i‚de‡
FD_ISSET


283 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

285 #i‚de‡
FD_ZERO


286 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

288 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

289 #i‚de‡
FD_COPY


290 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

295 #i‡
deföed
(
__STDC__
Ë&& deföed(
KERNEL
)

301 
	g¥oc
;

302 
	gpgΩ
;

303 
	gu¸ed
;

304 
	grußge
;

305 
	gfûe
;

306 
	gbuf
;

307 
	gây
;

308 
	guio
;

314 #i‚de‡
__POSIX_LIB__


316 #i‚de‡
_PTHREAD_ATTR_T


317 
	#_PTHREAD_ATTR_T


	)

318 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

320 #i‚de‡
_PTHREAD_COND_T


321 
	#_PTHREAD_COND_T


	)

322 
__d¨wö_±hªad_c⁄d_t
 
	t±hªad_c⁄d_t
;

324 #i‚de‡
_PTHREAD_CONDATTR_T


325 
	#_PTHREAD_CONDATTR_T


	)

326 
__d¨wö_±hªad_c⁄d©å_t
 
	t±hªad_c⁄d©å_t
;

328 #i‚de‡
_PTHREAD_MUTEX_T


329 
	#_PTHREAD_MUTEX_T


	)

330 
__d¨wö_±hªad_muãx_t
 
	t±hªad_muãx_t
;

332 #i‚de‡
_PTHREAD_MUTEXATTR_T


333 
	#_PTHREAD_MUTEXATTR_T


	)

334 
__d¨wö_±hªad_muãx©å_t
 
	t±hªad_muãx©å_t
;

336 #i‚de‡
_PTHREAD_ONCE_T


337 
	#_PTHREAD_ONCE_T


	)

338 
__d¨wö_±hªad_⁄˚_t
 
	t±hªad_⁄˚_t
;

340 #i‚de‡
_PTHREAD_RWLOCK_T


341 
	#_PTHREAD_RWLOCK_T


	)

342 
__d¨wö_±hªad_rwlock_t
 
	t±hªad_rwlock_t
;

344 #i‚de‡
_PTHREAD_RWLOCKATTR_T


345 
	#_PTHREAD_RWLOCKATTR_T


	)

346 
__d¨wö_±hªad_rwlock©å_t
 
	t±hªad_rwlock©å_t
;

348 #i‚de‡
_PTHREAD_T


349 
	#_PTHREAD_T


	)

350 
__d¨wö_±hªad_t
 
	t±hªad_t
;

355 #i‚de‡
_PTHREAD_KEY_T


356 
	#_PTHREAD_KEY_T


	)

357 
__d¨wö_±hªad_key_t
 
	t±hªad_key_t
;

361 #i‚de‡
_FSBLKCNT_T


362 
	#_FSBLKCNT_T


	)

363 
__d¨wö_fsblk˙t_t
 
	tfsblk˙t_t
;

366 #i‚de‡
_FSFILCNT_T


367 
	#_FSFILCNT_T


	)

368 
__d¨wö_fsfû˙t_t
 
	tfsfû˙t_t
;

	@/usr/include/sys/unistd.h

64 #i‚de‡
_SYS_UNISTD_H_


65 
	#_SYS_UNISTD_H_


	)

67 
	~<sys/cdefs.h
>

75 #ifdef 
_NOT_AVAILABLE


76 
	#_POSIX_SAVED_IDS


	)

79 
	#_POSIX_VERSION
 200112L

	)

80 
	#_POSIX2_VERSION
 200112L

	)

84 #i‚de‡
_POSIX_VDISABLE


85 
	#_POSIX_VDISABLE
 (()'\377')

	)

88 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

91 
	#F_OK
 0

	)

92 
	#X_OK
 (1<<0Ë

	)

93 
	#W_OK
 (1<<1Ë

	)

94 
	#R_OK
 (1<<2Ë

	)

96 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

102 
	#_READ_OK
 (1<<9Ë

	)

103 
	#_WRITE_OK
 (1<<10Ë

	)

104 
	#_EXECUTE_OK
 (1<<11Ë

	)

105 
	#_DELETE_OK
 (1<<12Ë

	)

106 
	#_APPEND_OK
 (1<<13Ë

	)

107 
	#_RMFILE_OK
 (1<<14Ë

	)

108 
	#_RATTR_OK
 (1<<15Ë

	)

109 
	#_WATTR_OK
 (1<<16Ë

	)

110 
	#_REXT_OK
 (1<<17Ë

	)

111 
	#_WEXT_OK
 (1<<18Ë

	)

112 
	#_RPERM_OK
 (1<<19Ë

	)

113 
	#_WPERM_OK
 (1<<20Ë

	)

114 
	#_CHOWN_OK
 (1<<21Ë

	)

116 
	#_ACCESS_EXTENDED_MASK
 (
_READ_OK
 | 
_WRITE_OK
 | 
_EXECUTE_OK
 | \

117 
_DELETE_OK
 | 
_APPEND_OK
 | \

118 
_RMFILE_OK
 | 
_REXT_OK
 | \

119 
_WEXT_OK
 | 
_RATTR_OK
 | 
_WATTR_OK
 | 
_RPERM_OK
 | \

120 
_WPERM_OK
 | 
_CHOWN_OK
)

	)

124 #i‚de‡
SEEK_SET


125 
	#SEEK_SET
 0

	)

126 
	#SEEK_CUR
 1

	)

127 
	#SEEK_END
 2

	)

130 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

132 
	#L_SET
 
SEEK_SET


	)

133 
	#L_INCR
 
SEEK_CUR


	)

134 
	#L_XTND
 
SEEK_END


	)

137 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

138 
	sac˚ssx_des¸ùt‹
 {

139 
	mad_«me_off£t
;

140 
	mad_Êags
;

141 
	mad_∑d
[2];

143 
	#ACCESSX_MAX_DESCRIPTORS
 100

	)

144 
	#ACCESSX_MAX_TABLESIZE
 (16 * 1024)

	)

148 
	#_PC_LINK_MAX
 1

	)

149 
	#_PC_MAX_CANON
 2

	)

150 
	#_PC_MAX_INPUT
 3

	)

151 
	#_PC_NAME_MAX
 4

	)

152 
	#_PC_PATH_MAX
 5

	)

153 
	#_PC_PIPE_BUF
 6

	)

154 
	#_PC_CHOWN_RESTRICTED
 7

	)

155 
	#_PC_NO_TRUNC
 8

	)

156 
	#_PC_VDISABLE
 9

	)

158 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

159 
	#_PC_NAME_CHARS_MAX
 10

	)

160 
	#_PC_CASE_SENSITIVE
 11

	)

161 
	#_PC_CASE_PRESERVING
 12

	)

162 
	#_PC_EXTENDED_SECURITY_NP
 13

	)

163 
	#_PC_AUTH_OPAQUE_NP
 14

	)

166 
	#_PC_2_SYMLINKS
 15

	)

167 
	#_PC_ALLOC_SIZE_MIN
 16

	)

168 
	#_PC_ASYNC_IO
 17

	)

169 
	#_PC_FILESIZEBITS
 18

	)

170 
	#_PC_PRIO_IO
 19

	)

171 
	#_PC_REC_INCR_XFER_SIZE
 20

	)

172 
	#_PC_REC_MAX_XFER_SIZE
 21

	)

173 
	#_PC_REC_MIN_XFER_SIZE
 22

	)

174 
	#_PC_REC_XFER_ALIGN
 23

	)

175 
	#_PC_SYMLINK_MAX
 24

	)

176 
	#_PC_SYNC_IO
 25

	)

177 
	#_PC_XATTR_SIZE_BITS
 26

	)

180 
	#_CS_PATH
 1

	)

	@/usr/include/sys/wait.h

64 #i‚de‡
_SYS_WAIT_H_


65 
	#_SYS_WAIT_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

80 
	mP_ALL
,

81 
	mP_PID
,

82 
	mP_PGID


83 } 
	tidty≥_t
;

89 #i‚de‡
_PID_T


90 
__d¨wö_pid_t
 
	tpid_t
;

91 
	#_PID_T


	)

94 #i‚de‡
_ID_T


95 
__d¨wö_id_t
 
	tid_t
;

96 
	#_ID_T


	)

116 
	~<sys/sig«l.h
>

117 
	~<sys/ªsour˚.h
>

128 
	#WNOHANG
 0x00000001

	)

129 
	#WUNTRACED
 0x00000002

	)

135 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

136 
	#_W_INT
(
i
Ë(i)

	)

138 
	#_W_INT
(
w
Ë(*(*)&(w)Ë

	)

139 
	#WCOREFLAG
 0200

	)

143 
	#_WSTATUS
(
x
Ë(
	`_W_INT
(xË& 0177)

	)

144 
	#_WSTOPPED
 0177

	)

150 #i‡
__DARWIN_UNIX03


151 
	#WEXITSTATUS
(
x
Ë((
	`_W_INT
(xË>> 8Ë& 0x000000ff)

	)

153 
	#WEXITSTATUS
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

156 
	#WSTOPSIG
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

157 
	#WIFCONTINUED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË=0x13)

	)

158 
	#WIFSTOPPED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË!0x13)

	)

159 
	#WIFEXITED
(
x
Ë(
	`_WSTATUS
(xË=0)

	)

160 
	#WIFSIGNALED
(
x
Ë(
	`_WSTATUS
(xË!
_WSTOPPED
 && _WSTATUS(xË!0)

	)

161 
	#WTERMSIG
(
x
Ë(
	`_WSTATUS
(x))

	)

162 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

163 
	#WCOREDUMP
(
x
Ë(
	`_W_INT
(xË& 
WCOREFLAG
)

	)

165 
	#W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

166 
	#W_STOPCODE
(
sig
Ë((sigË<< 8 | 
_WSTOPPED
)

	)

175 
	#WEXITED
 0x00000004

	)

176 #i‡
__DARWIN_UNIX03


178 
	#WSTOPPED
 0x00000008

	)

180 
	#WCONTINUED
 0x00000010

	)

181 
	#WNOWAIT
 0x00000020

	)

184 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

190 
	#WAIT_ANY
 (-1Ë

	)

191 
	#WAIT_MYPGRP
 0

	)

193 
	~<machöe/ídün.h
>

201 
	uwaô
 {

202 
	mw_°©us
;

207 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


208 
	mw_Tîmsig
:7,

209 
	mw_C‹edump
:1,

210 
	mw_Rëcode
:8,

211 
	mw_FûÀr
:16;

213 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


214 
	mw_FûÀr
:16,

215 
	mw_Rëcode
:8,

216 
	mw_C‹edump
:1,

217 
	mw_Tîmsig
:7;

219 } 
	mw_T
;

226 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


227 
	mw_St›vÆ
:8,

228 
	mw_St›sig
:8,

229 
	mw_FûÀr
:16;

231 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


232 
	mw_FûÀr
:16,

233 
	mw_St›sig
:8,

234 
	mw_St›vÆ
:8;

236 } 
	mw_S
;

238 
	#w_ãrmsig
 
w_T
.
w_Tîmsig


	)

239 
	#w_c‹edump
 
w_T
.
w_C‹edump


	)

240 
	#w_ªtcode
 
w_T
.
w_Rëcode


	)

241 
	#w_°›vÆ
 
w_S
.
w_St›vÆ


	)

242 
	#w_°›sig
 
w_S
.
w_St›sig


	)

246 #i‡!(
__DARWIN_UNIX03
 - 0)

251 
	#WSTOPPED
 
_WSTOPPED


	)

254 
__BEGIN_DECLS


255 
pid_t
 
	$waô
(*Ë
	`__DARWIN_ALIAS_C
(
waô
);

256 
pid_t
 
	$waôpid
(
pid_t
, *, Ë
	`__DARWIN_ALIAS_C
(
waôpid
);

257 #i‚de‡
_ANSI_SOURCE


258 
	$waôid
(
idty≥_t
, 
id_t
, 
sigöfo_t
 *, Ë
	`__DARWIN_ALIAS_C
(
waôid
);

260 #i‡ (!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

261 
pid_t
 
	`waô3
(*, , 
rußge
 *);

262 
pid_t
 
	`waô4
’id_t, *, , 
rußge
 *);

264 
__END_DECLS


	@/usr/include/xlocale/_inttypes.h

24 #i‚de‡
_XLOCALE__INTTYPES_H_


25 
	#_XLOCALE__INTTYPES_H_


	)

27 
__BEGIN_DECLS


28 
ötmax_t
 
°πoimax_l
(c⁄° * 
__ª°ri˘
 
≈å
, ** __ª°ri˘ 
íd±r
,

29 
ba£
, 
loˇÀ_t
);

30 
uötmax_t
 
°πoumax_l
(c⁄° * 
__ª°ri˘
 
≈å
, ** __ª°ri˘ 
íd±r
,

31 
ba£
, 
loˇÀ_t
);

32 
ötmax_t
 
wc°oimax_l
(c⁄° 
wch¨_t
 * 
__ª°ri˘
 
≈å
,

33 
wch¨_t
 ** 
__ª°ri˘
 
íd±r
, 
ba£
, 
loˇÀ_t
);

34 
uötmax_t
 
wc°oumax_l
(c⁄° 
wch¨_t
 * 
__ª°ri˘
 
≈å
,

35 
wch¨_t
 ** 
__ª°ri˘
 
íd±r
, 
ba£
, 
loˇÀ_t
);

38 #i‡!
deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

39 #¥agm®
GCC
 
pois⁄
 
wc°oimax_l
 
wc°oumax_l


41 
	g__END_DECLS


	@/usr/include/xlocale/_stdio.h

24 #i‚de‡
_XLOCALE__STDIO_H_


25 
	#_XLOCALE__STDIO_H_


	)

27 
__BEGIN_DECLS


29 
	$Ârötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

30 
	$__DARWIN_LDBL_COMPAT2
(
Ârötf_l
Ë
	`__¥ötÊike
(3, 4);

31 
	$fsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

32 
	$__DARWIN_LDBL_COMPAT2
(
fsˇnf_l
Ë
	`__sˇnÊike
(3, 4);

33 
	$¥ötf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

34 
	$__DARWIN_LDBL_COMPAT2
(
¥ötf_l
Ë
	`__¥ötÊike
(2, 3);

35 
	$sˇnf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

36 
	$__DARWIN_LDBL_COMPAT2
(
sˇnf_l
Ë
	`__sˇnÊike
(2, 3);

37 
	$•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

38 
	$__DARWIN_LDBL_COMPAT2
(
•rötf_l
Ë
	`__¥ötÊike
(3, 4);

39 
	$ssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
, const * __restrict, ...)

40 
	$__DARWIN_LDBL_COMPAT2
(
ssˇnf_l
Ë
	`__sˇnÊike
(3, 4);

41 
	$vÂrötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, c⁄° * __ª°ri˘, 
va_li°
)

42 
	$__DARWIN_LDBL_COMPAT2
(
vÂrötf_l
Ë
	`__¥ötÊike
(3, 0);

43 
	$v¥ötf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

44 
	$__DARWIN_LDBL_COMPAT2
(
v¥ötf_l
Ë
	`__¥ötÊike
(2, 0);

45 
	$v•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
, c⁄° * __ª°ri˘, 
va_li°
)

46 
	$__DARWIN_LDBL_COMPAT2
(
v•rötf_l
Ë
	`__¥ötÊike
(3, 0);

48 #i‡
__DARWIN_C_LEVEL
 >= 200112L

49 
	$¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
, const * __restrict, ...)

50 
	$__DARWIN_LDBL_COMPAT2
(
¢¥ötf_l
Ë
	`__¥ötÊike
(4, 5);

51 
	$vfsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
, c⁄° * __ª°ri˘, 
va_li°
)

52 
	$__DARWIN_LDBL_COMPAT2
(
vfsˇnf_l
Ë
	`__sˇnÊike
(3, 0);

53 
	$vsˇnf_l
(
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

54 
	$__DARWIN_LDBL_COMPAT2
(
vsˇnf_l
Ë
	`__sˇnÊike
(2, 0);

55 
	$v¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
, c⁄° * __ª°ri˘, 
va_li°
)

56 
	$__DARWIN_LDBL_COMPAT2
(
v¢¥ötf_l
Ë
	`__¥ötÊike
(4, 0);

57 
	$vssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
, c⁄° * __ª°ri˘, 
va_li°
)

58 
	$__DARWIN_LDBL_COMPAT2
(
vssˇnf_l
Ë
	`__sˇnÊike
(3, 0);

61 #i‡
__DARWIN_C_LEVEL
 >= 200809L

62 
	$d¥ötf_l
(, 
loˇÀ_t
, c⁄° * 
__ª°ri˘
, ...)

63 
	$__DARWIN_LDBL_COMPAT2
(
d¥ötf_l
Ë
	$__¥ötÊike
(3, 4Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

64 
	$vd¥ötf_l
(, 
loˇÀ_t
, c⁄° * 
__ª°ri˘
, 
va_li°
)

65 
	$__DARWIN_LDBL_COMPAT2
(
vd¥ötf_l
Ë
	$__¥ötÊike
(3, 0Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

69 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


70 
	$a•rötf_l
(**, 
loˇÀ_t
, const *, ...)

71 
	$__DARWIN_LDBL_COMPAT2
(
a•rötf_l
Ë
	`__¥ötÊike
(3, 4);

72 
	$va•rötf_l
(**, 
loˇÀ_t
, c⁄° *, 
va_li°
)

73 
	$__DARWIN_LDBL_COMPAT2
(
va•rötf_l
Ë
	`__¥ötÊike
(3, 0);

76 
__END_DECLS


	@/usr/include/xlocale/_stdlib.h

24 #i‚de‡
_XLOCALE__STDLIB_H_


25 
	#_XLOCALE__STDLIB_H_


	)

27 
__BEGIN_DECLS


28 
©of_l
(c⁄° *, 
loˇÀ_t
);

29 
©oi_l
(c⁄° *, 
loˇÀ_t
);

30 
©ﬁ_l
(c⁄° *, 
loˇÀ_t
);

31 #i‡!
__DARWIN_NO_LONG_LONG


33 
©ﬁl_l
(c⁄° *, 
loˇÀ_t
);

35 
mbÀn_l
(c⁄° *, 
size_t
, 
loˇÀ_t
);

36 
size_t
 
mb°owcs_l
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t,

37 
loˇÀ_t
);

38 
mbtowc_l
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
,

39 
loˇÀ_t
);

40 
	$°πod_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πod_l
);

41 
	$°πof_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πof_l
);

42 
	`°πﬁ_l
(c⁄° *, **, , 
loˇÀ_t
);

44 
	$°πﬁd_l
(c⁄° *, **, 
loˇÀ_t
)

45 
	`__DARWIN_LDBL_COMPAT2
(
°πﬁd_l
);

47 
	`°πﬁl_l
(c⁄° *, **, , 
loˇÀ_t
);

48 #i‡!
__DARWIN_NO_LONG_LONG


50 
	`°πoq_l
(c⁄° *, **, , 
loˇÀ_t
);

53 
	`°πoul_l
(c⁄° *, **, , 
loˇÀ_t
);

55 
	`°πouŒ_l
(c⁄° *, **, , 
loˇÀ_t
);

56 #i‡!
__DARWIN_NO_LONG_LONG


58 
	`°πouq_l
(c⁄° *, **, , 
loˇÀ_t
);

60 
size_t
 
	`wc°ombs_l
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t,

61 
loˇÀ_t
);

62 
	`w˘omb_l
(*, 
wch¨_t
, 
loˇÀ_t
);

65 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

66 #¥agm®
GCC
 
pois⁄
 
mb°owcs_l
 
mbtowc_l
 
wc°ombs_l
 
w˘omb_l


68 
__END_DECLS


	@/usr/include/xlocale/_string.h

24 #i‚de‡
_XLOCALE__STRING_H_


25 
	#_XLOCALE__STRING_H_


	)

27 
__BEGIN_DECLS


28 
°rcﬁl_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

29 
size_t
 
°rx‰m_l
(*, c⁄° *, size_t, 
loˇÀ_t
);

30 
°rˇ£cmp_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

31 *
°rˇ£°r_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

32 
°∫ˇ£cmp_l
(c⁄° *, c⁄° *, 
size_t
, 
loˇÀ_t
);

33 
	g__END_DECLS


	@/usr/include/xlocale/_time.h

24 #i‚de‡
_XLOCALE__TIME_H_


25 
	#_XLOCALE__TIME_H_


	)

27 
__BEGIN_DECLS


28 
size_t
 
	$°r·ime_l
(* 
__ª°ri˘
, 
size_t
, const * __restrict,

29 c⁄° 
tm
 * 
__ª°ri˘
, 
loˇÀ_t
)

30 
	$__DARWIN_ALIAS
(
°r·ime_l
Ë
	`__°r·imñike
(3);

31 *
	$°Ωtime_l
(c⁄° * 
__ª°ri˘
, const * __restrict,

32 
tm
 * 
__ª°ri˘
, 
loˇÀ_t
)

33 
	$__DARWIN_ALIAS
(
°Ωtime_l
Ë
	`__°r·imñike
(2);

34 
__END_DECLS


	@/usr/include/AvailabilityInternal.h

30 #i‚de‡
__AVAILABILITY_INTERNAL__


31 
	#__AVAILABILITY_INTERNAL__


	)

35 #i‚de‡
__IPHONE_OS_VERSION_MIN_REQUIRED


36 #ifde‡
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__


38 
	#__IPHONE_OS_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__


	)

42 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


44 
	#__AVAILABILITY_INTERNAL_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

45 
	#__AVAILABILITY_INTERNAL_UNAVAILABLE
 
	`__©åibuã__
((
u«vaûabÀ
))

	)

46 
	#__AVAILABILITY_INTERNAL_WEAK_IMPORT
 
	`__©åibuã__
((
wók_imp‹t
))

	)

47 
	#__AVAILABILITY_INTERNAL_REGULAR


	)

49 
	#__AVAILABILITY_INTERNAL_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
,
	`visibûôy
("deÁu…")))

	)

50 
	#__AVAILABILITY_INTERNAL_UNAVAILABLE
 
	`__©åibuã__
((
u«vaûabÀ
,
	`visibûôy
("deÁu…")))

	)

51 
	#__AVAILABILITY_INTERNAL_WEAK_IMPORT
 
	`__©åibuã__
((
wók_imp‹t
,
	`visibûôy
("deÁu…")))

	)

52 
	#__AVAILABILITY_INTERNAL_REGULAR
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

55 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


57 #i‚de‡
__IPHONE_OS_VERSION_MAX_ALLOWED


58 
	#__IPHONE_OS_VERSION_MAX_ALLOWED
 
__IPHONE_4_3


	)

61 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_0


62 #unde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


63 
	#__IPHONE_OS_VERSION_MIN_REQUIRED
 
__IPHONE_2_0


	)

67 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_0


68 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

69 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_0


70 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

72 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

74 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_0


	)

75 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

77 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_1


78 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

79 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


80 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

82 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

84 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

85 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


86 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

87 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

89 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

90 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

93 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_2


94 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

95 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


96 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

98 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

100 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

101 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


102 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

103 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

104 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

105 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


106 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

107 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

108 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

110 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

111 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

112 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

115 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_0


116 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

117 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


118 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

120 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

122 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

123 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


124 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

125 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

126 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

127 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

128 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


129 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

130 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

131 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

132 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

133 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


134 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

135 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

136 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

137 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

139 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

140 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

141 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

142 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

145 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_1


146 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

147 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


148 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

150 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

152 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

153 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


154 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

155 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

156 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

157 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

158 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

159 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


160 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

161 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

162 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

163 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

164 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

165 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


166 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

167 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

168 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

169 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

170 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

171 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


172 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

173 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

174 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

175 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

176 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

178 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

179 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

180 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

181 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

182 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

185 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_2


186 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

187 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


188 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

190 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

192 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

193 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


194 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

195 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

196 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

197 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

198 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

199 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

200 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


201 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

202 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

203 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

204 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

205 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

206 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

207 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


208 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

209 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

210 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

211 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

212 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

213 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

214 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


215 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

216 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

217 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

218 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

219 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

220 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

221 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


222 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

223 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

224 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

225 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

226 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

227 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

229 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

230 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

231 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

232 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

233 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

234 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

237 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_0


238 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

239 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


240 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

242 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

244 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

245 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


246 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

247 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

248 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

249 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

250 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

251 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

252 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

253 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


254 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

255 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

256 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

257 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

258 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

259 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

260 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

261 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


262 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

263 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

264 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

265 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

266 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

267 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

268 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

269 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


270 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

271 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

272 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

273 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

274 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

275 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

276 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

277 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


278 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

279 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

280 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

281 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

282 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

283 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

284 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

285 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


286 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

287 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

288 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

289 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

290 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

291 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

292 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

294 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

295 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

296 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

297 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

298 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

299 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

300 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

303 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_1


304 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

305 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


306 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

308 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

310 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

311 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


312 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

313 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

314 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

315 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

316 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

317 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

318 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

319 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

320 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


321 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

322 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

323 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

324 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

325 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

326 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

327 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

328 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

329 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


330 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

331 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

332 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

333 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

334 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

335 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

336 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

337 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

338 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


339 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

340 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

341 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

342 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

343 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

344 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

345 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

346 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

347 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


348 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

349 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

350 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

351 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

352 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

353 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

354 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

355 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

356 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


357 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

358 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

359 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

360 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

361 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

362 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

363 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

364 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

365 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


366 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

367 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

368 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

369 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

370 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

371 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

372 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

373 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

375 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

376 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

377 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

378 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

379 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

380 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

381 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

382 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

385 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_2


386 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

387 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


388 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

390 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

392 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

393 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


394 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

395 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

396 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

397 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

398 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

399 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

400 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

401 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

402 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

403 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


404 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

405 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

406 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

407 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

408 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

409 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

410 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

411 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

412 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

413 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


414 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

415 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

416 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

417 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

418 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

419 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

420 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

421 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

422 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

423 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


424 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

425 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

426 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

427 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

428 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

429 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

430 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

431 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

432 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

433 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


434 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

435 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

436 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

437 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

438 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

439 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

440 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

441 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

442 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

443 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


444 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

445 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

446 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

447 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

448 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

449 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

450 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

451 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

452 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

453 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


454 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

455 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

456 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

457 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

458 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

459 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

460 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

461 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

462 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

463 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


464 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

465 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

466 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

467 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

468 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

469 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

470 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

471 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

472 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

474 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

475 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

476 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

477 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

478 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

479 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

480 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

481 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

482 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

485 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_3


486 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

487 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


488 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

490 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

492 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

493 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


494 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

495 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

496 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

497 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

498 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

499 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

500 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

501 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

502 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

503 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

504 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


505 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

506 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

507 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

508 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

509 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

510 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

511 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

512 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

513 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

514 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

515 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


516 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

517 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

518 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

519 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

520 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

521 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

522 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

523 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

524 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

525 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

526 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


527 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

528 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

529 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

530 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

531 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

532 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

533 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

534 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

535 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

536 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

537 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


538 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

539 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

540 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

541 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

542 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

543 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

544 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

545 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

546 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

547 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

548 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


549 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

550 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

551 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

552 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

553 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

554 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

555 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

556 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

557 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

558 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

559 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


560 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

561 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

562 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

563 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

564 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

565 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

566 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

567 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

568 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

569 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

570 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


571 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

572 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

573 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

574 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

575 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

576 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

577 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

578 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

579 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

580 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

581 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


582 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

583 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

584 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

585 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

586 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

587 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

588 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

589 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

590 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

591 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

593 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

594 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

595 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

596 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

597 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

598 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

599 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

600 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

601 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

602 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

605 
	#__AVAILABILITY_INTERNAL__IPHONE_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

606 
	#__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

608 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

610 
	#__MAC_OS_X_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


	)

612 #i‚de‡
__MAC_OS_X_VERSION_MAX_ALLOWED


613 
	#__MAC_OS_X_VERSION_MAX_ALLOWED
 
__MAC_10_7


	)

616 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_7


617 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

618 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_7


619 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

621 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
__AVAILABILITY_INTERNAL_REGULAR


	)

623 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_6


624 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

625 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_6


626 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

628 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_REGULAR


	)

630 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_5


631 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

632 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_5


633 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

635 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_REGULAR


	)

637 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_4


638 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

639 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_4


640 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

642 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_REGULAR


	)

644 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_3


645 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

646 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_3


647 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

649 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

651 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_2


652 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

653 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_2


654 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

656 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

658 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_1


659 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

660 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_1


661 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

663 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

665 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_0


666 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

667 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_0


668 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

670 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

672 
	#__AVAILABILITY_INTERNAL__MAC_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

673 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_1


674 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

676 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

678 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_2


679 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

680 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

682 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

683 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

685 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_3


686 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

687 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

688 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

690 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

691 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

692 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

694 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_4


695 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

696 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

697 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

698 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

700 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

701 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

702 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

703 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

705 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_5


706 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

707 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

708 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

709 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

710 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

712 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

713 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

714 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

715 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

716 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

718 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_6


719 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

720 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

721 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

722 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

723 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

724 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

726 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

727 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

728 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

729 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

730 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

731 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

733 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_7


734 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

735 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

736 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

737 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

738 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

739 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

740 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

742 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

743 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

744 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

745 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

746 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

747 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

748 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

750 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

751 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

752 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

753 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

754 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

755 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

756 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

757 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_7


	)

758 
	#__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

	@/usr/include/i386/_limits.h

22 #i‚def 
_I386__LIMITS_H_


23 
	#_I386__LIMITS_H_


	)

25 
	#__DARWIN_CLK_TCK
 100

	)

	@/usr/include/i386/_param.h

29 #i‚de‡
_I386__PARAM_H_


30 
	#_I386__PARAM_H_


	)

32 
	~<i386/_ty≥s.h
>

39 
	#__DARWIN_ALIGNBYTES
 ((
__d¨wö_size_t
Ë- 1)

	)

40 
	#__DARWIN_ALIGN
(
p
Ë((
__d¨wö_size_t
)((*)(__d¨wö_size_t)’Ë+ 
__DARWIN_ALIGNBYTES
Ë&~ __DARWIN_ALIGNBYTES)

	)

42 
	#__DARWIN_ALIGNBYTES32
 ((
__uöt32_t
Ë- 1)

	)

43 
	#__DARWIN_ALIGN32
(
p
Ë((
__d¨wö_size_t
)((*)(__d¨wö_size_t)’Ë+ 
__DARWIN_ALIGNBYTES32
Ë&~ __DARWIN_ALIGNBYTES32)

	)

	@/usr/include/i386/endian.h

66 #i‚de‡
_I386__ENDIAN_H_


67 
	#_I386__ENDIAN_H_


	)

69 
	~<sys/cdefs.h
>

78 
	#_QUAD_HIGHWORD
 1

	)

79 
	#_QUAD_LOWWORD
 0

	)

85 
	#__DARWIN_LITTLE_ENDIAN
 1234

	)

86 
	#__DARWIN_BIG_ENDIAN
 4321

	)

87 
	#__DARWIN_PDP_ENDIAN
 3412

	)

89 
	#__DARWIN_BYTE_ORDER
 
__DARWIN_LITTLE_ENDIAN


	)

91 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

93 
	#LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

94 
	#BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

95 
	#PDP_ENDIAN
 
__DARWIN_PDP_ENDIAN


	)

97 
	#BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

99 
	~<sys/_ídün.h
>

	@/usr/include/i386/types.h

66 #i‚def 
_MACHTYPES_H_


67 
	#_MACHTYPES_H_


	)

69 #i‚de‡
__ASSEMBLER__


70 
	~<i386/_ty≥s.h
>

71 
	~<sys/cdefs.h
>

76 #i‚de‡
_INT8_T


77 
	#_INT8_T


	)

78 
__sig√d
 
	töt8_t
;

80 
	tu_öt8_t
;

81 #i‚de‡
_INT16_T


82 
	#_INT16_T


	)

83 
	töt16_t
;

85 
	tu_öt16_t
;

86 #i‚de‡
_INT32_T


87 
	#_INT32_T


	)

88 
	töt32_t
;

90 
	tu_öt32_t
;

91 #i‚de‡
_INT64_T


92 
	#_INT64_T


	)

93 
	töt64_t
;

95 
	tu_öt64_t
;

97 #i‡
__LP64__


98 
öt64_t
 
	tªgi°î_t
;

100 
öt32_t
 
	tªgi°î_t
;

103 #i‚de‡
_INTPTR_T


104 
	#_INTPTR_T


	)

105 
__d¨wö_öçå_t
 
	töçå_t
;

107 #i‚de‡
_UINTPTR_T


108 
	#_UINTPTR_T


	)

109 
	tuöçå_t
;

112 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

114 
u_öt64_t
 
	tu£r_addr_t
;

115 
u_öt64_t
 
	tu£r_size_t
;

116 
öt64_t
 
	tu£r_ssize_t
;

117 
öt64_t
 
	tu£r_l⁄g_t
;

118 
u_öt64_t
 
	tu£r_ul⁄g_t
;

119 
öt64_t
 
	tu£r_time_t
;

120 
öt64_t
 
	tu£r_off_t
;

121 
	#USER_ADDR_NULL
 ((
u£r_addr_t
Ë0)

	)

122 
	#CAST_USER_ADDR_T
(
a_±r
Ë((
u£r_addr_t
)((
uöçå_t
)◊_±r)))

	)

128 
u_öt64_t
 
	tsysˇŒ_¨g_t
;

130 #i‚de‡
__off£tof


131 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

	@/usr/include/libkern/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDER_H


30 
	#_OS__OSBYTEORDER_H


	)

40 
	~<sys/_ty≥s.h
>

43 
	#__DARWIN_OSSw≠C⁄°I¡16
(
x
) \

44 ((
__uöt16_t
)((((__uöt16_t)(
x
) & 0xff00) >> 8) | \

45 (((
__uöt16_t
)(
x
Ë& 0x00ffË<< 8)))

	)

47 
	#__DARWIN_OSSw≠C⁄°I¡32
(
x
) \

48 ((
__uöt32_t
)((((__uöt32_t)(
x
) & 0xff000000) >> 24) | \

49 (((
__uöt32_t
)(
x
) & 0x00ff0000) >> 8) | \

50 (((
__uöt32_t
)(
x
) & 0x0000ff00) << 8) | \

51 (((
__uöt32_t
)(
x
Ë& 0x000000ffË<< 24)))

	)

53 
	#__DARWIN_OSSw≠C⁄°I¡64
(
x
) \

54 ((
__uöt64_t
)((((__uöt64_t)(
x
) & 0xff00000000000000ULL) >> 56) | \

55 (((
__uöt64_t
)(
x
) & 0x00ff000000000000ULL) >> 40) | \

56 (((
__uöt64_t
)(
x
) & 0x0000ff0000000000ULL) >> 24) | \

57 (((
__uöt64_t
)(
x
) & 0x000000ff00000000ULL) >> 8) | \

58 (((
__uöt64_t
)(
x
) & 0x00000000ff000000ULL) << 8) | \

59 (((
__uöt64_t
)(
x
) & 0x0000000000ff0000ULL) << 24) | \

60 (((
__uöt64_t
)(
x
) & 0x000000000000ff00ULL) << 40) | \

61 (((
__uöt64_t
)(
x
Ë& 0x00000000000000ffULLË<< 56)))

	)

63 #i‡
deföed
(
__GNUC__
)

65 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

66 
	~<libkîn/i386/_OSByãOrdî.h
>

69 #i‡
deföed
(
__¨m__
)

70 
	~<libkîn/¨m/OSByãOrdî.h
>

74 
	#__DARWIN_OSSw≠I¡16
(
x
) \

75 ((
__uöt16_t
)(
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡16
(xË: 
	`_OSSw≠I¡16
(x)))

	)

77 
	#__DARWIN_OSSw≠I¡32
(
x
) \

78 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡32
(xË: 
	`_OSSw≠I¡32
(x))

	)

80 
	#__DARWIN_OSSw≠I¡64
(
x
) \

81 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡64
(xË: 
	`_OSSw≠I¡64
(x))

	)

85 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

87 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

88 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

89 
	#__DARWIN_OS_INLINE
 
ölöe


	)

90 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

91 
	#__DARWIN_OS_INLINE
 
ölöe


	)

93 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

97 
__DARWIN_OS_INLINE


98 
uöt16_t


99 
	$_OSSw≠I¡16
(

100 
uöt16_t
 
d©a


103  
	`__DARWIN_OSSw≠C⁄°I¡16
(
d©a
);

104 
	}
}

106 
__DARWIN_OS_INLINE


107 
uöt32_t


108 
	$_OSSw≠I¡32
(

109 
uöt32_t
 
d©a


112  
	`__DARWIN_OSSw≠C⁄°I¡32
(
d©a
);

113 
	}
}

115 
__DARWIN_OS_INLINE


116 
uöt64_t


117 
	$_OSSw≠I¡64
(

118 
uöt64_t
 
d©a


121  
	`__DARWIN_OSSw≠C⁄°I¡64
(
d©a
);

122 
	}
}

125 
	#__DARWIN_OSSw≠I¡16
(
x
Ë
	`_OSSw≠I¡16
(x)

	)

127 
	#__DARWIN_OSSw≠I¡32
(
x
Ë
	`_OSSw≠I¡32
(x)

	)

129 
	#__DARWIN_OSSw≠I¡64
(
x
Ë
	`_OSSw≠I¡64
(x)

	)

	@/usr/include/machine/_structs.h

28 #i‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

29 
	~"i386/_°ru˘s.h
"

30 #ñi‡
deföed
 (
__¨m__
)

31 
	~"¨m/_°ru˘s.h
"

33 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_types.h

28 #i‚de‡
_BSD_MACHINE__TYPES_H_


29 
	#_BSD_MACHINE__TYPES_H_


	)

31 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

32 
	~"i386/_ty≥s.h
"

33 #ñi‡
deföed
 (
__¨m__
)

34 
	~"¨m/_ty≥s.h
"

36 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/signal.h

28 #i‚de‡
_BSD_MACHINE_SIGNAL_H_


29 
	#_BSD_MACHINE_SIGNAL_H_


	)

31 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

32 
	~"i386/sig«l.h
"

33 #ñi‡
deföed
 (
__¨m__
)

34 
	~"¨m/sig«l.h
"

36 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/secure/_common.h

24 #i‚de‡
_SECURE__COMMON_H_


25 
	#_SECURE__COMMON_H_


	)

27 #unde‡
_USE_FORTIFY_LEVEL


28 #i‡
deföed
(
_FORTIFY_SOURCE
) && _FORTIFY_SOURCE > 0

29 #i‡
_FORTIFY_SOURCE
 > 1

30 
	#_USE_FORTIFY_LEVEL
 2

	)

32 
	#_USE_FORTIFY_LEVEL
 1

	)

35 
	#_USE_FORTIFY_LEVEL
 0

	)

38 
	#__d¨wö_obsz0
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 0)

	)

39 
	#__d¨wö_obsz
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 
_USE_FORTIFY_LEVEL
 > 1)

	)

	@/usr/include/sys/_posix_availability.h

28 #i‚de‡
_CDEFS_H_


32 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 198808L

33 
	#___POSIX_C_DEPRECATED_STARTING_198808L
 
__dïªˇãd


	)

35 
	#___POSIX_C_DEPRECATED_STARTING_198808L


	)

38 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199009L

39 
	#___POSIX_C_DEPRECATED_STARTING_199009L
 
__dïªˇãd


	)

41 
	#___POSIX_C_DEPRECATED_STARTING_199009L


	)

44 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199209L

45 
	#___POSIX_C_DEPRECATED_STARTING_199209L
 
__dïªˇãd


	)

47 
	#___POSIX_C_DEPRECATED_STARTING_199209L


	)

50 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199309L

51 
	#___POSIX_C_DEPRECATED_STARTING_199309L
 
__dïªˇãd


	)

53 
	#___POSIX_C_DEPRECATED_STARTING_199309L


	)

56 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199506L

57 
	#___POSIX_C_DEPRECATED_STARTING_199506L
 
__dïªˇãd


	)

59 
	#___POSIX_C_DEPRECATED_STARTING_199506L


	)

62 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 200112L

63 
	#___POSIX_C_DEPRECATED_STARTING_200112L
 
__dïªˇãd


	)

65 
	#___POSIX_C_DEPRECATED_STARTING_200112L


	)

68 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 200809L

69 
	#___POSIX_C_DEPRECATED_STARTING_200809L
 
__dïªˇãd


	)

71 
	#___POSIX_C_DEPRECATED_STARTING_200809L


	)

	@/usr/include/sys/_symbol_aliasing.h

28 #i‚de‡
_CDEFS_H_


32 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 20000

33 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0
(
x
Ë
	)
x

35 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0
(
x
)

	)

38 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 20100

39 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1
(
x
Ë
	)
x

41 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1
(
x
)

	)

44 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 20200

45 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2
(
x
Ë
	)
x

47 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2
(
x
)

	)

50 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 30000

51 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0
(
x
Ë
	)
x

53 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0
(
x
)

	)

56 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 30100

57 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1
(
x
Ë
	)
x

59 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1
(
x
)

	)

62 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 30200

63 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2
(
x
Ë
	)
x

65 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2
(
x
)

	)

68 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40000

69 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0
(
x
Ë
	)
x

71 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0
(
x
)

	)

74 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40100

75 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1
(
x
Ë
	)
x

77 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1
(
x
)

	)

80 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40200

81 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2
(
x
Ë
	)
x

83 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2
(
x
)

	)

86 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40300

87 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3
(
x
Ë
	)
x

89 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3
(
x
)

	)

92 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1000

93 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_0
(
x
Ë
	)
x

95 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_0
(
x
)

	)

98 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1010

99 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_1
(
x
Ë
	)
x

101 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_1
(
x
)

	)

104 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1020

105 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_2
(
x
Ë
	)
x

107 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_2
(
x
)

	)

110 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1030

111 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_3
(
x
Ë
	)
x

113 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_3
(
x
)

	)

116 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1040

117 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_4
(
x
Ë
	)
x

119 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_4
(
x
)

	)

122 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050

123 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_5
(
x
Ë
	)
x

125 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_5
(
x
)

	)

128 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1060

129 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_6
(
x
Ë
	)
x

131 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_6
(
x
)

	)

134 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070

135 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_7
(
x
Ë
	)
x

137 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_7
(
x
)

	)

	@/usr/include/sys/resource.h

64 #i‚de‡
_SYS_RESOURCE_H_


65 
	#_SYS_RESOURCE_H_


	)

67 
	~<sys/≠∂ópi›ts.h
>

68 
	~<sys/cdefs.h
>

69 
	~<sys/_ty≥s.h
>

71 
	~<Avaûabûôy.h
>

76 
	#__√ed_°ru˘_timevÆ


	)

77 
	~<sys/_°ru˘s.h
>

80 #i‚de‡
_ID_T


81 
	#_ID_T


	)

82 
__d¨wö_id_t
 
	tid_t
;

89 
__uöt64_t
 
	tæim_t
;

100 
	#PRIO_PROCESS
 0

	)

101 
	#PRIO_PGRP
 1

	)

102 
	#PRIO_USER
 2

	)

104 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

105 
	#PRIO_DARWIN_THREAD
 3

	)

106 
	#PRIO_DARWIN_PROCESS
 4

	)

111 
	#PRIO_MIN
 -20

	)

112 
	#PRIO_MAX
 20

	)

119 
	#PRIO_DARWIN_BG
 0x1000

	)

125 
	#PRIO_DARWIN_NONUI
 0x1001

	)

139 
	#RUSAGE_SELF
 0

	)

140 
	#RUSAGE_CHILDREN
 -1

	)

151 
	srußge
 {

152 
timevÆ
 
	mru_utime
;

153 
timevÆ
 
	mru_°ime
;

154 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

155 
	mru_›aque
[14];

162 
	mru_maxrss
;

163 
	#ru_fú°
 
ru_ixrss


	)

164 
	mru_ixrss
;

165 
	mru_idrss
;

166 
	mru_i§ss
;

167 
	mru_möÊt
;

168 
	mru_majÊt
;

169 
	mru_nsw≠
;

170 
	mru_öblock
;

171 
	mru_oublock
;

172 
	mru_msg¢d
;

173 
	mru_msgrcv
;

174 
	mru_nsig«ls
;

175 
	mru_nvcsw
;

176 
	mru_nivcsw
;

177 
	#ru_œ°
 
ru_nivcsw


	)

193 
	#RLIM_INFINITY
 (((
__uöt64_t
)1 << 63Ë- 1Ë

	)

194 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

195 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

201 
	#RLIMIT_CPU
 0

	)

202 
	#RLIMIT_FSIZE
 1

	)

203 
	#RLIMIT_DATA
 2

	)

204 
	#RLIMIT_STACK
 3

	)

205 
	#RLIMIT_CORE
 4

	)

206 
	#RLIMIT_AS
 5

	)

207 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

208 
	#RLIMIT_RSS
 
RLIMIT_AS


	)

209 
	#RLIMIT_MEMLOCK
 6

	)

210 
	#RLIMIT_NPROC
 7

	)

212 
	#RLIMIT_NOFILE
 8

	)

213 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

214 
	#RLIM_NLIMITS
 9

	)

216 
	#_RLIMIT_POSIX_FLAG
 0x1000

	)

222 
	sæimô
 {

223 
æim_t
 
	mæim_cur
;

224 
æim_t
 
	mæim_max
;

227 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

229 
	#IOPOL_TYPE_DISK
 0

	)

232 
	#IOPOL_SCOPE_PROCESS
 0

	)

233 
	#IOPOL_SCOPE_THREAD
 1

	)

236 
	#IOPOL_DEFAULT
 0

	)

237 
	#IOPOL_NORMAL
 1

	)

238 
	#IOPOL_PASSIVE
 2

	)

239 
	#IOPOL_THROTTLE
 3

	)

244 
__BEGIN_DECLS


245 
gë¥i‹ôy
(, 
id_t
);

246 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

247 
	$gëi›ﬁicy_≈
(, Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

249 
	$gëæimô
(, 
æimô
 *Ë
	`__DARWIN_ALIAS
(
gëæimô
);

250 
	`gërußge
(, 
rußge
 *);

251 
	`£çri‹ôy
(, 
id_t
, );

252 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

253 
	$£ti›ﬁicy_≈
(, , Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

255 
	$£ålimô
(, c⁄° 
æimô
 *Ë
	`__DARWIN_ALIAS
(
£ålimô
);

256 
__END_DECLS


	@/usr/include/i386/_structs.h

29 
	~<sys/≠∂ópi›ts.h
>

31 #ifde‡
__√ed_mc⁄ãxt_t


32 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


33 
	#__√ed_°ru˘_mc⁄ãxt


	)

37 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
)

38 
	~<mach/i386/_°ru˘s.h
>

42 #ifde‡
__√ed_°ru˘_mc⁄ãxt


43 #unde‡
__√ed_°ru˘_mc⁄ãxt


45 #i‚de‡
_STRUCT_MCONTEXT32


46 #i‡
__DARWIN_UNIX03


47 
	#_STRUCT_MCONTEXT32
 
__d¨wö_mc⁄ãxt32


	)

48 
	g_STRUCT_MCONTEXT32


50 
_STRUCT_X86_EXCEPTION_STATE32
 
	g__es
;

51 
_STRUCT_X86_THREAD_STATE32
 
	g__ss
;

52 
_STRUCT_X86_FLOAT_STATE32
 
	g__fs
;

55 
	#_STRUCT_MCONTEXT_AVX32
 
__d¨wö_mc⁄ãxt_avx32


	)

56 
	g_STRUCT_MCONTEXT_AVX32


58 
_STRUCT_X86_EXCEPTION_STATE32
 
	g__es
;

59 
_STRUCT_X86_THREAD_STATE32
 
	g__ss
;

60 
_STRUCT_X86_AVX_STATE32
 
	g__fs
;

64 
	#_STRUCT_MCONTEXT32
 
mc⁄ãxt32


	)

65 
	g_STRUCT_MCONTEXT32


67 
_STRUCT_X86_EXCEPTION_STATE32
 
	ges
;

68 
_STRUCT_X86_THREAD_STATE32
 
	gss
;

69 
_STRUCT_X86_FLOAT_STATE32
 
	gfs
;

72 
	#_STRUCT_MCONTEXT_AVX32
 
mc⁄ãxt_avx32


	)

73 
	g_STRUCT_MCONTEXT_AVX32


75 
_STRUCT_X86_EXCEPTION_STATE32
 
	ges
;

76 
_STRUCT_X86_THREAD_STATE32
 
	gss
;

77 
_STRUCT_X86_AVX_STATE32
 
	gfs
;

83 #i‚de‡
_STRUCT_MCONTEXT64


84 #i‡
__DARWIN_UNIX03


85 
	#_STRUCT_MCONTEXT64
 
__d¨wö_mc⁄ãxt64


	)

86 
	g_STRUCT_MCONTEXT64


88 
_STRUCT_X86_EXCEPTION_STATE64
 
	g__es
;

89 
_STRUCT_X86_THREAD_STATE64
 
	g__ss
;

90 
_STRUCT_X86_FLOAT_STATE64
 
	g__fs
;

93 
	#_STRUCT_MCONTEXT_AVX64
 
__d¨wö_mc⁄ãxt_avx64


	)

94 
	g_STRUCT_MCONTEXT_AVX64


96 
_STRUCT_X86_EXCEPTION_STATE64
 
	g__es
;

97 
_STRUCT_X86_THREAD_STATE64
 
	g__ss
;

98 
_STRUCT_X86_AVX_STATE64
 
	g__fs
;

102 
	#_STRUCT_MCONTEXT64
 
mc⁄ãxt64


	)

103 
	g_STRUCT_MCONTEXT64


105 
_STRUCT_X86_EXCEPTION_STATE64
 
	ges
;

106 
_STRUCT_X86_THREAD_STATE64
 
	gss
;

107 
_STRUCT_X86_FLOAT_STATE64
 
	gfs
;

110 
	#_STRUCT_MCONTEXT_AVX64
 
mc⁄ãxt_avx64


	)

111 
	g_STRUCT_MCONTEXT_AVX64


113 
_STRUCT_X86_EXCEPTION_STATE64
 
	ges
;

114 
_STRUCT_X86_THREAD_STATE64
 
	gss
;

115 
_STRUCT_X86_AVX_STATE64
 
	gfs
;

122 #ifde‡
__√ed_mc⁄ãxt_t


123 #unde‡
__√ed_mc⁄ãxt_t


124 #i‚de‡
_MCONTEXT_T


125 
	#_MCONTEXT_T


	)

126 #i‡
deföed
(
__LP64__
)

127 
_STRUCT_MCONTEXT64
 *
	tmc⁄ãxt_t
;

128 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT64


	)

130 
_STRUCT_MCONTEXT32
 *
	tmc⁄ãxt_t
;

131 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT32


	)

136 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

137 #i‚de‡
I386_MCONTEXT_SIZE


138 
	#I386_MCONTEXT_SIZE
 (
mc⁄ãxt
)

	)

	@/usr/include/i386/_types.h

28 #i‚def 
_BSD_I386__TYPES_H_


29 
	#_BSD_I386__TYPES_H_


	)

36 #ifde‡
__GNUC__


37 
__sig√d
 
	t__öt8_t
;

39 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 
	t__öt64_t
;

47 
	t__uöt64_t
;

49 
	t__d¨wö_öçå_t
;

50 
	t__d¨wö_«tuøl_t
;

70 
	t__d¨wö_˘_ru√_t
;

77 
	m__mb°©e8
[128];

78 
	m_mb°©eL
;

79 } 
	t__mb°©e_t
;

81 
__mb°©e_t
 
	t__d¨wö_mb°©e_t
;

83 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__PTRDIFF_TYPE__
)

84 
__PTRDIFF_TYPE__
 
	t__d¨wö_±rdiff_t
;

86 
	t__d¨wö_±rdiff_t
;

89 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__SIZE_TYPE__
)

90 
__SIZE_TYPE__
 
	t__d¨wö_size_t
;

92 
	t__d¨wö_size_t
;

95 #i‡(
__GNUC__
 > 2)

96 
__buûtö_va_li°
 
	t__d¨wö_va_li°
;

98 * 
	t__d¨wö_va_li°
;

101 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WCHAR_TYPE__
)

102 
__WCHAR_TYPE__
 
	t__d¨wö_wch¨_t
;

104 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wch¨_t
;

107 
__d¨wö_wch¨_t
 
	t__d¨wö_ru√_t
;

109 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__WINT_TYPE__
)

110 
__WINT_TYPE__
 
	t__d¨wö_wöt_t
;

112 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wöt_t
;

115 
	t__d¨wö_˛ock_t
;

116 
__uöt32_t
 
	t__d¨wö_sockÀn_t
;

117 
	t__d¨wö_ssize_t
;

118 
	t__d¨wö_time_t
;

	@/usr/include/i386/signal.h

33 #i‚def 
_I386_SIGNAL_H_


34 
	#_I386_SIGNAL_H_
 1

	)

36 
	~<sys/cdefs.h
>

38 #i‚de‡
_ANSI_SOURCE


39 
	tsig_©omic_t
;

41 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

43 
	~<sys/≠∂ópi›ts.h
>

45 #ifde‡
__APPLE_API_OBSOLETE


54 
	#__√ed_°ru˘_sigc⁄ãxt


	)

55 
	~<i386/_°ru˘s.h
>

	@/usr/include/libkern/i386/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDERI386_H


30 
	#_OS__OSBYTEORDERI386_H


	)

32 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

33 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

34 
	#__DARWIN_OS_INLINE
 
ölöe


	)

35 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

36 
	#__DARWIN_OS_INLINE
 
ölöe


	)

38 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

44 
__DARWIN_OS_INLINE


45 
__uöt16_t


46 
	$_OSSw≠I¡16
(

47 
__uöt16_t
 
_d©a


50  ((
_d©a
 << 8) | (_data >> 8));

51 
	}
}

53 
__DARWIN_OS_INLINE


54 
__uöt32_t


55 
	$_OSSw≠I¡32
(

56 
__uöt32_t
 
_d©a


59 #i‡
	`deföed
(
__Œvm__
)

60  
	`__buûtö_bsw≠32
(
_d©a
);

62 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

63  
_d©a
;

65 
	}
}

67 #i‡
deföed
(
__Œvm__
)

68 
__DARWIN_OS_INLINE


69 
__uöt64_t


70 
	$_OSSw≠I¡64
(

71 
__uöt64_t
 
_d©a


74  
	`__buûtö_bsw≠64
(
_d©a
);

75 
	}
}

77 #ñi‡
deföed
(
__i386__
)

78 
__DARWIN_OS_INLINE


79 
__uöt64_t


80 
	$_OSSw≠I¡64
(

81 
__uöt64_t
 
_d©a


84 
	`__asm__
 ("bswap %%eax\n\t"

87 : "+A" (
_d©a
));

88  
_d©a
;

89 
	}
}

90 #ñi‡
deföed
(
__x86_64__
)

91 
__DARWIN_OS_INLINE


92 
__uöt64_t


93 
	$_OSSw≠I¡64
(

94 
__uöt64_t
 
_d©a


97 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

98  
_d©a
;

99 
	}
}

101 #îr‹ 
Unknown
 
¨chôe˘uª


	@/usr/include/mach/i386/_structs.h

32 #i‚def 
_MACH_I386__STRUCTS_H_


33 
	#_MACH_I386__STRUCTS_H_


	)

41 #i‡
__DARWIN_UNIX03


42 
	#_STRUCT_X86_THREAD_STATE32
 
__d¨wö_i386_thªad_°©e


	)

43 
	g_STRUCT_X86_THREAD_STATE32


45 
	g__óx
;

46 
	g__ebx
;

47 
	g__ecx
;

48 
	g__edx
;

49 
	g__edi
;

50 
	g__esi
;

51 
	g__ebp
;

52 
	g__e•
;

53 
	g__ss
;

54 
	g__eÊags
;

55 
	g__eù
;

56 
	g__cs
;

57 
	g__ds
;

58 
	g__es
;

59 
	g__fs
;

60 
	g__gs
;

63 
	#_STRUCT_X86_THREAD_STATE32
 
i386_thªad_°©e


	)

64 
	g_STRUCT_X86_THREAD_STATE32


66 
	góx
;

67 
	gebx
;

68 
	gecx
;

69 
	gedx
;

70 
	gedi
;

71 
	gesi
;

72 
	gebp
;

73 
	ge•
;

74 
	gss
;

75 
	geÊags
;

76 
	geù
;

77 
	gcs
;

78 
	gds
;

79 
	ges
;

80 
	gfs
;

81 
	ggs
;

87 #i‡
__DARWIN_UNIX03


88 
	#_STRUCT_FP_CONTROL
 
__d¨wö_Â_c⁄åﬁ


	)

89 
	g_STRUCT_FP_CONTROL


91 
	g__övÆid
 :1,

92 
	g__dí‹m
 :1,

93 
	g__zdiv
 :1,

94 
	g__ovrÊ
 :1,

95 
	g__undÊ
 :1,

96 
	g__¥ecis
 :1,

98 
	g__pc
 :2,

99 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

100 
	#FP_PREC_24B
 0

	)

101 
	#FP_PREC_53B
 2

	)

102 
	#FP_PREC_64B
 3

	)

104 
	g__rc
 :2,

105 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

106 
	#FP_RND_NEAR
 0

	)

107 
	#FP_RND_DOWN
 1

	)

108 
	#FP_RND_UP
 2

	)

109 
	#FP_CHOP
 3

	)

114 
_STRUCT_FP_CONTROL
 
	t__d¨wö_Â_c⁄åﬁ_t
;

116 
	#_STRUCT_FP_CONTROL
 
Â_c⁄åﬁ


	)

117 
	g_STRUCT_FP_CONTROL


119 
	gövÆid
 :1,

120 
	gdí‹m
 :1,

121 
	gzdiv
 :1,

122 
	govrÊ
 :1,

123 
	gundÊ
 :1,

124 
	g¥ecis
 :1,

126 
	gpc
 :2,

127 
	#FP_PREC_24B
 0

	)

128 
	#FP_PREC_53B
 2

	)

129 
	#FP_PREC_64B
 3

	)

130 
	grc
 :2,

131 
	#FP_RND_NEAR
 0

	)

132 
	#FP_RND_DOWN
 1

	)

133 
	#FP_RND_UP
 2

	)

134 
	#FP_CHOP
 3

	)

138 
_STRUCT_FP_CONTROL
 
	tÂ_c⁄åﬁ_t
;

145 #i‡
__DARWIN_UNIX03


146 
	#_STRUCT_FP_STATUS
 
__d¨wö_Â_°©us


	)

147 
	g_STRUCT_FP_STATUS


149 
	g__övÆid
 :1,

150 
	g__dí‹m
 :1,

151 
	g__zdiv
 :1,

152 
	g__ovrÊ
 :1,

153 
	g__undÊ
 :1,

154 
	g__¥ecis
 :1,

155 
	g__°kÊt
 :1,

156 
	g__îrsumm
 :1,

157 
	g__c0
 :1,

158 
	g__c1
 :1,

159 
	g__c2
 :1,

160 
	g__tos
 :3,

161 
	g__c3
 :1,

162 
	g__busy
 :1;

164 
_STRUCT_FP_STATUS
 
	t__d¨wö_Â_°©us_t
;

166 
	#_STRUCT_FP_STATUS
 
Â_°©us


	)

167 
	g_STRUCT_FP_STATUS


169 
	gövÆid
 :1,

170 
	gdí‹m
 :1,

171 
	gzdiv
 :1,

172 
	govrÊ
 :1,

173 
	gundÊ
 :1,

174 
	g¥ecis
 :1,

175 
	g°kÊt
 :1,

176 
	gîrsumm
 :1,

177 
	gc0
 :1,

178 
	gc1
 :1,

179 
	gc2
 :1,

180 
	gtos
 :3,

181 
	gc3
 :1,

182 
	gbusy
 :1;

184 
_STRUCT_FP_STATUS
 
	tÂ_°©us_t
;

189 #i‡
__DARWIN_UNIX03


190 
	#_STRUCT_MMST_REG
 
__d¨wö_mm°_ªg


	)

191 
	g_STRUCT_MMST_REG


193 
	g__mm°_ªg
[10];

194 
	g__mm°_r§v
[6];

197 
	#_STRUCT_MMST_REG
 
mm°_ªg


	)

198 
	g_STRUCT_MMST_REG


200 
	gmm°_ªg
[10];

201 
	gmm°_r§v
[6];

208 #i‡
__DARWIN_UNIX03


209 
	#_STRUCT_XMM_REG
 
__d¨wö_xmm_ªg


	)

210 
	g_STRUCT_XMM_REG


212 
	g__xmm_ªg
[16];

215 
	#_STRUCT_XMM_REG
 
xmm_ªg


	)

216 
	g_STRUCT_XMM_REG


218 
	gxmm_ªg
[16];

226 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

227 
	#FP_STATE_BYTES
 512

	)

230 #i‡
__DARWIN_UNIX03


231 
	#_STRUCT_X86_FLOAT_STATE32
 
__d¨wö_i386_Êﬂt_°©e


	)

232 
	g_STRUCT_X86_FLOAT_STATE32


234 
	g__Âu_ª£rved
[2];

235 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

236 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

237 
__uöt8_t
 
	g__Âu_·w
;

238 
__uöt8_t
 
	g__Âu_r§v1
;

239 
__uöt16_t
 
	g__Âu_f›
;

240 
__uöt32_t
 
	g__Âu_ù
;

241 
__uöt16_t
 
	g__Âu_cs
;

242 
__uöt16_t
 
	g__Âu_r§v2
;

243 
__uöt32_t
 
	g__Âu_dp
;

244 
__uöt16_t
 
	g__Âu_ds
;

245 
__uöt16_t
 
	g__Âu_r§v3
;

246 
__uöt32_t
 
	g__Âu_mxc§
;

247 
__uöt32_t
 
	g__Âu_mxc§mask
;

248 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

249 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

250 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

251 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

252 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

253 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

254 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

255 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

256 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

257 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

258 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

259 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

260 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

261 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

262 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

263 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

264 
	g__Âu_r§v4
[14*16];

265 
	g__Âu_ª£rved1
;

268 
	#_STRUCT_X86_AVX_STATE32
 
__d¨wö_i386_avx_°©e


	)

269 
	g_STRUCT_X86_AVX_STATE32


271 
	g__Âu_ª£rved
[2];

272 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

273 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

274 
__uöt8_t
 
	g__Âu_·w
;

275 
__uöt8_t
 
	g__Âu_r§v1
;

276 
__uöt16_t
 
	g__Âu_f›
;

277 
__uöt32_t
 
	g__Âu_ù
;

278 
__uöt16_t
 
	g__Âu_cs
;

279 
__uöt16_t
 
	g__Âu_r§v2
;

280 
__uöt32_t
 
	g__Âu_dp
;

281 
__uöt16_t
 
	g__Âu_ds
;

282 
__uöt16_t
 
	g__Âu_r§v3
;

283 
__uöt32_t
 
	g__Âu_mxc§
;

284 
__uöt32_t
 
	g__Âu_mxc§mask
;

285 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

286 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

287 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

288 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

289 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

290 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

291 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

292 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

293 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

294 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

295 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

296 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

297 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

298 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

299 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

300 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

301 
	g__Âu_r§v4
[14*16];

302 
	g__Âu_ª£rved1
;

303 
	g__avx_ª£rved1
[64];

304 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

305 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

306 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

307 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

308 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

309 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

310 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

311 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

315 
	#_STRUCT_X86_FLOAT_STATE32
 
i386_Êﬂt_°©e


	)

316 
	g_STRUCT_X86_FLOAT_STATE32


318 
	gÂu_ª£rved
[2];

319 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

320 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

321 
__uöt8_t
 
	gÂu_·w
;

322 
__uöt8_t
 
	gÂu_r§v1
;

323 
__uöt16_t
 
	gÂu_f›
;

324 
__uöt32_t
 
	gÂu_ù
;

325 
__uöt16_t
 
	gÂu_cs
;

326 
__uöt16_t
 
	gÂu_r§v2
;

327 
__uöt32_t
 
	gÂu_dp
;

328 
__uöt16_t
 
	gÂu_ds
;

329 
__uöt16_t
 
	gÂu_r§v3
;

330 
__uöt32_t
 
	gÂu_mxc§
;

331 
__uöt32_t
 
	gÂu_mxc§mask
;

332 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

333 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

334 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

335 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

336 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

337 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

338 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

339 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

340 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

341 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

342 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

343 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

344 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

345 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

346 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

347 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

348 
	gÂu_r§v4
[14*16];

349 
	gÂu_ª£rved1
;

352 
	#_STRUCT_X86_AVX_STATE32
 
i386_avx_°©e


	)

353 
	g_STRUCT_X86_AVX_STATE32


355 
	gÂu_ª£rved
[2];

356 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

357 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

358 
__uöt8_t
 
	gÂu_·w
;

359 
__uöt8_t
 
	gÂu_r§v1
;

360 
__uöt16_t
 
	gÂu_f›
;

361 
__uöt32_t
 
	gÂu_ù
;

362 
__uöt16_t
 
	gÂu_cs
;

363 
__uöt16_t
 
	gÂu_r§v2
;

364 
__uöt32_t
 
	gÂu_dp
;

365 
__uöt16_t
 
	gÂu_ds
;

366 
__uöt16_t
 
	gÂu_r§v3
;

367 
__uöt32_t
 
	gÂu_mxc§
;

368 
__uöt32_t
 
	gÂu_mxc§mask
;

369 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

370 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

371 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

372 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

373 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

374 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

375 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

376 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

377 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

378 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

379 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

380 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

381 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

382 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

383 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

384 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

385 
	gÂu_r§v4
[14*16];

386 
	gÂu_ª£rved1
;

387 
	g__avx_ª£rved1
[64];

388 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

389 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

390 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

391 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

392 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

393 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

394 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

395 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

400 #i‡
__DARWIN_UNIX03


401 
	#_STRUCT_X86_EXCEPTION_STATE32
 
__d¨wö_i386_ex˚±i⁄_°©e


	)

402 
	g_STRUCT_X86_EXCEPTION_STATE32


404 
__uöt16_t
 
	g__å≠no
;

405 
__uöt16_t
 
	g__˝u
;

406 
__uöt32_t
 
	g__îr
;

407 
__uöt32_t
 
	g__Áu…vaddr
;

410 
	#_STRUCT_X86_EXCEPTION_STATE32
 
i386_ex˚±i⁄_°©e


	)

411 
	g_STRUCT_X86_EXCEPTION_STATE32


413 
__uöt16_t
 
	gå≠no
;

414 
__uöt16_t
 
	g˝u
;

415 
__uöt32_t
 
	gîr
;

416 
__uöt32_t
 
	gÁu…vaddr
;

420 #i‡
__DARWIN_UNIX03


421 
	#_STRUCT_X86_DEBUG_STATE32
 
__d¨wö_x86_debug_°©e32


	)

422 
	g_STRUCT_X86_DEBUG_STATE32


424 
	g__dr0
;

425 
	g__dr1
;

426 
	g__dr2
;

427 
	g__dr3
;

428 
	g__dr4
;

429 
	g__dr5
;

430 
	g__dr6
;

431 
	g__dr7
;

434 
	#_STRUCT_X86_DEBUG_STATE32
 
x86_debug_°©e32


	)

435 
	g_STRUCT_X86_DEBUG_STATE32


437 
	gdr0
;

438 
	gdr1
;

439 
	gdr2
;

440 
	gdr3
;

441 
	gdr4
;

442 
	gdr5
;

443 
	gdr6
;

444 
	gdr7
;

452 #i‡
__DARWIN_UNIX03


453 
	#_STRUCT_X86_THREAD_STATE64
 
__d¨wö_x86_thªad_°©e64


	)

454 
	g_STRUCT_X86_THREAD_STATE64


456 
__uöt64_t
 
	g__øx
;

457 
__uöt64_t
 
	g__rbx
;

458 
__uöt64_t
 
	g__rcx
;

459 
__uöt64_t
 
	g__rdx
;

460 
__uöt64_t
 
	g__rdi
;

461 
__uöt64_t
 
	g__rsi
;

462 
__uöt64_t
 
	g__rbp
;

463 
__uöt64_t
 
	g__r•
;

464 
__uöt64_t
 
	g__r8
;

465 
__uöt64_t
 
	g__r9
;

466 
__uöt64_t
 
	g__r10
;

467 
__uöt64_t
 
	g__r11
;

468 
__uöt64_t
 
	g__r12
;

469 
__uöt64_t
 
	g__r13
;

470 
__uöt64_t
 
	g__r14
;

471 
__uöt64_t
 
	g__r15
;

472 
__uöt64_t
 
	g__rù
;

473 
__uöt64_t
 
	g__rÊags
;

474 
__uöt64_t
 
	g__cs
;

475 
__uöt64_t
 
	g__fs
;

476 
__uöt64_t
 
	g__gs
;

479 
	#_STRUCT_X86_THREAD_STATE64
 
x86_thªad_°©e64


	)

480 
	g_STRUCT_X86_THREAD_STATE64


482 
__uöt64_t
 
	gøx
;

483 
__uöt64_t
 
	grbx
;

484 
__uöt64_t
 
	grcx
;

485 
__uöt64_t
 
	grdx
;

486 
__uöt64_t
 
	grdi
;

487 
__uöt64_t
 
	grsi
;

488 
__uöt64_t
 
	grbp
;

489 
__uöt64_t
 
	gr•
;

490 
__uöt64_t
 
	gr8
;

491 
__uöt64_t
 
	gr9
;

492 
__uöt64_t
 
	gr10
;

493 
__uöt64_t
 
	gr11
;

494 
__uöt64_t
 
	gr12
;

495 
__uöt64_t
 
	gr13
;

496 
__uöt64_t
 
	gr14
;

497 
__uöt64_t
 
	gr15
;

498 
__uöt64_t
 
	grù
;

499 
__uöt64_t
 
	grÊags
;

500 
__uöt64_t
 
	gcs
;

501 
__uöt64_t
 
	gfs
;

502 
__uöt64_t
 
	ggs
;

507 #i‡
__DARWIN_UNIX03


508 
	#_STRUCT_X86_FLOAT_STATE64
 
__d¨wö_x86_Êﬂt_°©e64


	)

509 
	g_STRUCT_X86_FLOAT_STATE64


511 
	g__Âu_ª£rved
[2];

512 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

513 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

514 
__uöt8_t
 
	g__Âu_·w
;

515 
__uöt8_t
 
	g__Âu_r§v1
;

516 
__uöt16_t
 
	g__Âu_f›
;

519 
__uöt32_t
 
	g__Âu_ù
;

520 
__uöt16_t
 
	g__Âu_cs
;

522 
__uöt16_t
 
	g__Âu_r§v2
;

525 
__uöt32_t
 
	g__Âu_dp
;

526 
__uöt16_t
 
	g__Âu_ds
;

528 
__uöt16_t
 
	g__Âu_r§v3
;

529 
__uöt32_t
 
	g__Âu_mxc§
;

530 
__uöt32_t
 
	g__Âu_mxc§mask
;

531 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

532 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

533 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

534 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

535 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

536 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

537 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

538 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

539 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

540 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

541 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

542 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

543 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

544 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

545 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

546 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

547 
_STRUCT_XMM_REG
 
	g__Âu_xmm8
;

548 
_STRUCT_XMM_REG
 
	g__Âu_xmm9
;

549 
_STRUCT_XMM_REG
 
	g__Âu_xmm10
;

550 
_STRUCT_XMM_REG
 
	g__Âu_xmm11
;

551 
_STRUCT_XMM_REG
 
	g__Âu_xmm12
;

552 
_STRUCT_XMM_REG
 
	g__Âu_xmm13
;

553 
_STRUCT_XMM_REG
 
	g__Âu_xmm14
;

554 
_STRUCT_XMM_REG
 
	g__Âu_xmm15
;

555 
	g__Âu_r§v4
[6*16];

556 
	g__Âu_ª£rved1
;

559 
	#_STRUCT_X86_AVX_STATE64
 
__d¨wö_x86_avx_°©e64


	)

560 
	g_STRUCT_X86_AVX_STATE64


562 
	g__Âu_ª£rved
[2];

563 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

564 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

565 
__uöt8_t
 
	g__Âu_·w
;

566 
__uöt8_t
 
	g__Âu_r§v1
;

567 
__uöt16_t
 
	g__Âu_f›
;

570 
__uöt32_t
 
	g__Âu_ù
;

571 
__uöt16_t
 
	g__Âu_cs
;

573 
__uöt16_t
 
	g__Âu_r§v2
;

576 
__uöt32_t
 
	g__Âu_dp
;

577 
__uöt16_t
 
	g__Âu_ds
;

579 
__uöt16_t
 
	g__Âu_r§v3
;

580 
__uöt32_t
 
	g__Âu_mxc§
;

581 
__uöt32_t
 
	g__Âu_mxc§mask
;

582 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

583 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

584 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

585 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

586 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

587 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

588 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

589 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

590 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

591 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

592 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

593 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

594 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

595 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

596 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

597 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

598 
_STRUCT_XMM_REG
 
	g__Âu_xmm8
;

599 
_STRUCT_XMM_REG
 
	g__Âu_xmm9
;

600 
_STRUCT_XMM_REG
 
	g__Âu_xmm10
;

601 
_STRUCT_XMM_REG
 
	g__Âu_xmm11
;

602 
_STRUCT_XMM_REG
 
	g__Âu_xmm12
;

603 
_STRUCT_XMM_REG
 
	g__Âu_xmm13
;

604 
_STRUCT_XMM_REG
 
	g__Âu_xmm14
;

605 
_STRUCT_XMM_REG
 
	g__Âu_xmm15
;

606 
	g__Âu_r§v4
[6*16];

607 
	g__Âu_ª£rved1
;

608 
	g__avx_ª£rved1
[64];

609 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

610 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

611 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

612 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

613 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

614 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

615 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

616 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

617 
_STRUCT_XMM_REG
 
	g__Âu_ymmh8
;

618 
_STRUCT_XMM_REG
 
	g__Âu_ymmh9
;

619 
_STRUCT_XMM_REG
 
	g__Âu_ymmh10
;

620 
_STRUCT_XMM_REG
 
	g__Âu_ymmh11
;

621 
_STRUCT_XMM_REG
 
	g__Âu_ymmh12
;

622 
_STRUCT_XMM_REG
 
	g__Âu_ymmh13
;

623 
_STRUCT_XMM_REG
 
	g__Âu_ymmh14
;

624 
_STRUCT_XMM_REG
 
	g__Âu_ymmh15
;

628 
	#_STRUCT_X86_FLOAT_STATE64
 
x86_Êﬂt_°©e64


	)

629 
	g_STRUCT_X86_FLOAT_STATE64


631 
	gÂu_ª£rved
[2];

632 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

633 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

634 
__uöt8_t
 
	gÂu_·w
;

635 
__uöt8_t
 
	gÂu_r§v1
;

636 
__uöt16_t
 
	gÂu_f›
;

639 
__uöt32_t
 
	gÂu_ù
;

640 
__uöt16_t
 
	gÂu_cs
;

642 
__uöt16_t
 
	gÂu_r§v2
;

645 
__uöt32_t
 
	gÂu_dp
;

646 
__uöt16_t
 
	gÂu_ds
;

648 
__uöt16_t
 
	gÂu_r§v3
;

649 
__uöt32_t
 
	gÂu_mxc§
;

650 
__uöt32_t
 
	gÂu_mxc§mask
;

651 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

652 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

653 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

654 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

655 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

656 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

657 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

658 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

659 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

660 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

661 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

662 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

663 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

664 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

665 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

666 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

667 
_STRUCT_XMM_REG
 
	gÂu_xmm8
;

668 
_STRUCT_XMM_REG
 
	gÂu_xmm9
;

669 
_STRUCT_XMM_REG
 
	gÂu_xmm10
;

670 
_STRUCT_XMM_REG
 
	gÂu_xmm11
;

671 
_STRUCT_XMM_REG
 
	gÂu_xmm12
;

672 
_STRUCT_XMM_REG
 
	gÂu_xmm13
;

673 
_STRUCT_XMM_REG
 
	gÂu_xmm14
;

674 
_STRUCT_XMM_REG
 
	gÂu_xmm15
;

675 
	gÂu_r§v4
[6*16];

676 
	gÂu_ª£rved1
;

679 
	#_STRUCT_X86_AVX_STATE64
 
x86_avx_°©e64


	)

680 
	g_STRUCT_X86_AVX_STATE64


682 
	gÂu_ª£rved
[2];

683 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

684 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

685 
__uöt8_t
 
	gÂu_·w
;

686 
__uöt8_t
 
	gÂu_r§v1
;

687 
__uöt16_t
 
	gÂu_f›
;

690 
__uöt32_t
 
	gÂu_ù
;

691 
__uöt16_t
 
	gÂu_cs
;

693 
__uöt16_t
 
	gÂu_r§v2
;

696 
__uöt32_t
 
	gÂu_dp
;

697 
__uöt16_t
 
	gÂu_ds
;

699 
__uöt16_t
 
	gÂu_r§v3
;

700 
__uöt32_t
 
	gÂu_mxc§
;

701 
__uöt32_t
 
	gÂu_mxc§mask
;

702 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

703 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

704 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

705 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

706 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

707 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

708 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

709 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

710 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

711 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

712 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

713 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

714 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

715 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

716 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

717 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

718 
_STRUCT_XMM_REG
 
	gÂu_xmm8
;

719 
_STRUCT_XMM_REG
 
	gÂu_xmm9
;

720 
_STRUCT_XMM_REG
 
	gÂu_xmm10
;

721 
_STRUCT_XMM_REG
 
	gÂu_xmm11
;

722 
_STRUCT_XMM_REG
 
	gÂu_xmm12
;

723 
_STRUCT_XMM_REG
 
	gÂu_xmm13
;

724 
_STRUCT_XMM_REG
 
	gÂu_xmm14
;

725 
_STRUCT_XMM_REG
 
	gÂu_xmm15
;

726 
	gÂu_r§v4
[6*16];

727 
	gÂu_ª£rved1
;

728 
	g__avx_ª£rved1
[64];

729 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

730 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

731 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

732 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

733 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

734 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

735 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

736 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

737 
_STRUCT_XMM_REG
 
	g__Âu_ymmh8
;

738 
_STRUCT_XMM_REG
 
	g__Âu_ymmh9
;

739 
_STRUCT_XMM_REG
 
	g__Âu_ymmh10
;

740 
_STRUCT_XMM_REG
 
	g__Âu_ymmh11
;

741 
_STRUCT_XMM_REG
 
	g__Âu_ymmh12
;

742 
_STRUCT_XMM_REG
 
	g__Âu_ymmh13
;

743 
_STRUCT_XMM_REG
 
	g__Âu_ymmh14
;

744 
_STRUCT_XMM_REG
 
	g__Âu_ymmh15
;

749 #i‡
__DARWIN_UNIX03


750 
	#_STRUCT_X86_EXCEPTION_STATE64
 
__d¨wö_x86_ex˚±i⁄_°©e64


	)

751 
	g_STRUCT_X86_EXCEPTION_STATE64


753 
__uöt16_t
 
	g__å≠no
;

754 
__uöt16_t
 
	g__˝u
;

755 
__uöt32_t
 
	g__îr
;

756 
__uöt64_t
 
	g__Áu…vaddr
;

759 
	#_STRUCT_X86_EXCEPTION_STATE64
 
x86_ex˚±i⁄_°©e64


	)

760 
	g_STRUCT_X86_EXCEPTION_STATE64


762 
__uöt16_t
 
	gå≠no
;

763 
__uöt16_t
 
	g˝u
;

764 
__uöt32_t
 
	gîr
;

765 
__uöt64_t
 
	gÁu…vaddr
;

769 #i‡
__DARWIN_UNIX03


770 
	#_STRUCT_X86_DEBUG_STATE64
 
__d¨wö_x86_debug_°©e64


	)

771 
	g_STRUCT_X86_DEBUG_STATE64


773 
__uöt64_t
 
	g__dr0
;

774 
__uöt64_t
 
	g__dr1
;

775 
__uöt64_t
 
	g__dr2
;

776 
__uöt64_t
 
	g__dr3
;

777 
__uöt64_t
 
	g__dr4
;

778 
__uöt64_t
 
	g__dr5
;

779 
__uöt64_t
 
	g__dr6
;

780 
__uöt64_t
 
	g__dr7
;

783 
	#_STRUCT_X86_DEBUG_STATE64
 
x86_debug_°©e64


	)

784 
	g_STRUCT_X86_DEBUG_STATE64


786 
__uöt64_t
 
	gdr0
;

787 
__uöt64_t
 
	gdr1
;

788 
__uöt64_t
 
	gdr2
;

789 
__uöt64_t
 
	gdr3
;

790 
__uöt64_t
 
	gdr4
;

791 
__uöt64_t
 
	gdr5
;

792 
__uöt64_t
 
	gdr6
;

793 
__uöt64_t
 
	gdr7
;

	@
1
.
1
/usr/include
74
1913
bandwidth-client.c
bandwidth-server-many-up.c
bandwidth-server-one.c
random-test-client.c
random-test-server.c
test.c
test.h
unit-test-client.c
unit-test-client_safe.c
unit-test-server.c
unit-test.h
version.c
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/netinet/in.h
/usr/include/signal.h
/usr/include/sqlite3.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/socket.h
/usr/include/sys/time.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/Availability.h
/usr/include/_structs.h
/usr/include/_types.h
/usr/include/_xlocale.h
/usr/include/alloca.h
/usr/include/machine/_limits.h
/usr/include/machine/_param.h
/usr/include/machine/endian.h
/usr/include/machine/types.h
/usr/include/netinet6/in6.h
/usr/include/secure/_stdio.h
/usr/include/secure/_string.h
/usr/include/strings.h
/usr/include/sys/_endian.h
/usr/include/sys/_select.h
/usr/include/sys/_structs.h
/usr/include/sys/_types.h
/usr/include/sys/appleapiopts.h
/usr/include/sys/cdefs.h
/usr/include/sys/errno.h
/usr/include/sys/select.h
/usr/include/sys/signal.h
/usr/include/sys/types.h
/usr/include/sys/unistd.h
/usr/include/sys/wait.h
/usr/include/xlocale/_inttypes.h
/usr/include/xlocale/_stdio.h
/usr/include/xlocale/_stdlib.h
/usr/include/xlocale/_string.h
/usr/include/xlocale/_time.h
/usr/include/AvailabilityInternal.h
/usr/include/i386/_limits.h
/usr/include/i386/_param.h
/usr/include/i386/endian.h
/usr/include/i386/types.h
/usr/include/libkern/_OSByteOrder.h
/usr/include/machine/_structs.h
/usr/include/machine/_types.h
/usr/include/machine/signal.h
/usr/include/secure/_common.h
/usr/include/sys/_posix_availability.h
/usr/include/sys/_symbol_aliasing.h
/usr/include/sys/resource.h
/usr/include/i386/_structs.h
/usr/include/i386/_types.h
/usr/include/i386/signal.h
/usr/include/libkern/i386/_OSByteOrder.h
/usr/include/mach/i386/_structs.h
